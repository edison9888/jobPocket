// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Query_comments_proto.pb.h"

@implementation QueryCommentsProtoRoot
static ES_PBExtensionRegistry* extensionRegistry = nil;
+ (ES_PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [QueryCommentsProtoRoot class]) {
    ES_PBMutableExtensionRegistry* registry = [ES_PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(ES_PBMutableExtensionRegistry*) registry {
}
@end

@interface QComment ()
@property (retain) NSString* userName;
@property (retain) NSString* portraitUrl;
@property (retain) NSString* content;
@property int32_t mark1;
@property int32_t mark2;
@property int32_t mark3;
@property int32_t mark4;
@property int32_t mark5;
@property (retain) NSString* commentTime;
@end

@implementation QComment

- (BOOL) hasUserName {
  return !!hasUserName_;
}
- (void) setHasUserName:(BOOL) value_ {
  hasUserName_ = !!value_;
}
@synthesize userName;
- (BOOL) hasPortraitUrl {
  return !!hasPortraitUrl_;
}
- (void) setHasPortraitUrl:(BOOL) value_ {
  hasPortraitUrl_ = !!value_;
}
@synthesize portraitUrl;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value_ {
  hasContent_ = !!value_;
}
@synthesize content;
- (BOOL) hasMark1 {
  return !!hasMark1_;
}
- (void) setHasMark1:(BOOL) value_ {
  hasMark1_ = !!value_;
}
@synthesize mark1;
- (BOOL) hasMark2 {
  return !!hasMark2_;
}
- (void) setHasMark2:(BOOL) value_ {
  hasMark2_ = !!value_;
}
@synthesize mark2;
- (BOOL) hasMark3 {
  return !!hasMark3_;
}
- (void) setHasMark3:(BOOL) value_ {
  hasMark3_ = !!value_;
}
@synthesize mark3;
- (BOOL) hasMark4 {
  return !!hasMark4_;
}
- (void) setHasMark4:(BOOL) value_ {
  hasMark4_ = !!value_;
}
@synthesize mark4;
- (BOOL) hasMark5 {
  return !!hasMark5_;
}
- (void) setHasMark5:(BOOL) value_ {
  hasMark5_ = !!value_;
}
@synthesize mark5;
- (BOOL) hasCommentTime {
  return !!hasCommentTime_;
}
- (void) setHasCommentTime:(BOOL) value_ {
  hasCommentTime_ = !!value_;
}
@synthesize commentTime;
- (void) dealloc {
  self.userName = nil;
  self.portraitUrl = nil;
  self.content = nil;
  self.commentTime = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userName = @"";
    self.portraitUrl = @"";
    self.content = @"";
    self.mark1 = 5;
    self.mark2 = 5;
    self.mark3 = 5;
    self.mark4 = 5;
    self.mark5 = 5;
    self.commentTime = @"";
  }
  return self;
}
static QComment* defaultQCommentInstance = nil;
+ (void) initialize {
  if (self == [QComment class]) {
    defaultQCommentInstance = [[QComment alloc] init];
  }
}
+ (QComment*) defaultInstance {
  return defaultQCommentInstance;
}
- (QComment*) defaultInstance {
  return defaultQCommentInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(ES_PBCodedOutputStream*) output {
  if (self.hasUserName) {
    [output writeString:1 value:self.userName];
  }
  if (self.hasPortraitUrl) {
    [output writeString:2 value:self.portraitUrl];
  }
  if (self.hasContent) {
    [output writeString:3 value:self.content];
  }
  if (self.hasMark1) {
    [output writeInt32:4 value:self.mark1];
  }
  if (self.hasMark2) {
    [output writeInt32:5 value:self.mark2];
  }
  if (self.hasMark3) {
    [output writeInt32:6 value:self.mark3];
  }
  if (self.hasMark4) {
    [output writeInt32:7 value:self.mark4];
  }
  if (self.hasMark5) {
    [output writeInt32:8 value:self.mark5];
  }
  if (self.hasCommentTime) {
    [output writeString:9 value:self.commentTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserName) {
    size_ += ES_computeStringSize(1, self.userName);
  }
  if (self.hasPortraitUrl) {
    size_ += ES_computeStringSize(2, self.portraitUrl);
  }
  if (self.hasContent) {
    size_ += ES_computeStringSize(3, self.content);
  }
  if (self.hasMark1) {
    size_ += ES_computeInt32Size(4, self.mark1);
  }
  if (self.hasMark2) {
    size_ += ES_computeInt32Size(5, self.mark2);
  }
  if (self.hasMark3) {
    size_ += ES_computeInt32Size(6, self.mark3);
  }
  if (self.hasMark4) {
    size_ += ES_computeInt32Size(7, self.mark4);
  }
  if (self.hasMark5) {
    size_ += ES_computeInt32Size(8, self.mark5);
  }
  if (self.hasCommentTime) {
    size_ += ES_computeStringSize(9, self.commentTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (QComment*) parseFromData:(NSData*) data {
  return (QComment*)[[[QComment builder] mergeFromData:data] build];
}
+ (QComment*) parseFromData:(NSData*) data extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (QComment*)[[[QComment builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (QComment*) parseFromInputStream:(NSInputStream*) input {
  return (QComment*)[[[QComment builder] mergeFromInputStream:input] build];
}
+ (QComment*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (QComment*)[[[QComment builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QComment*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return (QComment*)[[[QComment builder] mergeFromCodedInputStream:input] build];
}
+ (QComment*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (QComment*)[[[QComment builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QComment_Builder*) builder {
  return [[[QComment_Builder alloc] init] autorelease];
}
+ (QComment_Builder*) builderWithPrototype:(QComment*) prototype {
  return [[QComment builder] mergeFrom:prototype];
}
- (QComment_Builder*) builder {
  return [QComment builder];
}
- (QComment_Builder*) toBuilder {
  return [QComment builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userName", self.userName];
  }
  if (self.hasPortraitUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"portraitUrl", self.portraitUrl];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasMark1) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mark1", [NSNumber numberWithInt:self.mark1]];
  }
  if (self.hasMark2) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mark2", [NSNumber numberWithInt:self.mark2]];
  }
  if (self.hasMark3) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mark3", [NSNumber numberWithInt:self.mark3]];
  }
  if (self.hasMark4) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mark4", [NSNumber numberWithInt:self.mark4]];
  }
  if (self.hasMark5) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mark5", [NSNumber numberWithInt:self.mark5]];
  }
  if (self.hasCommentTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"commentTime", self.commentTime];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[QComment class]]) {
    return NO;
  }
  QComment *otherMessage = other;
  return
      self.hasUserName == otherMessage.hasUserName &&
      (!self.hasUserName || [self.userName isEqual:otherMessage.userName]) &&
      self.hasPortraitUrl == otherMessage.hasPortraitUrl &&
      (!self.hasPortraitUrl || [self.portraitUrl isEqual:otherMessage.portraitUrl]) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasMark1 == otherMessage.hasMark1 &&
      (!self.hasMark1 || self.mark1 == otherMessage.mark1) &&
      self.hasMark2 == otherMessage.hasMark2 &&
      (!self.hasMark2 || self.mark2 == otherMessage.mark2) &&
      self.hasMark3 == otherMessage.hasMark3 &&
      (!self.hasMark3 || self.mark3 == otherMessage.mark3) &&
      self.hasMark4 == otherMessage.hasMark4 &&
      (!self.hasMark4 || self.mark4 == otherMessage.mark4) &&
      self.hasMark5 == otherMessage.hasMark5 &&
      (!self.hasMark5 || self.mark5 == otherMessage.mark5) &&
      self.hasCommentTime == otherMessage.hasCommentTime &&
      (!self.hasCommentTime || [self.commentTime isEqual:otherMessage.commentTime]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasUserName) {
    hashCode = hashCode * 31 + [self.userName hash];
  }
  if (self.hasPortraitUrl) {
    hashCode = hashCode * 31 + [self.portraitUrl hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasMark1) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.mark1] hash];
  }
  if (self.hasMark2) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.mark2] hash];
  }
  if (self.hasMark3) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.mark3] hash];
  }
  if (self.hasMark4) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.mark4] hash];
  }
  if (self.hasMark5) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.mark5] hash];
  }
  if (self.hasCommentTime) {
    hashCode = hashCode * 31 + [self.commentTime hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface QComment_Builder()
@property (retain) QComment* result;
@end

@implementation QComment_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[QComment alloc] init] autorelease];
  }
  return self;
}
- (ES_PBGeneratedMessage*) internalGetResult {
  return result;
}
- (QComment_Builder*) clear {
  self.result = [[[QComment alloc] init] autorelease];
  return self;
}
- (QComment_Builder*) clone {
  return [QComment builderWithPrototype:result];
}
- (QComment*) defaultInstance {
  return [QComment defaultInstance];
}
- (QComment*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (QComment*) buildPartial {
  QComment* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (QComment_Builder*) mergeFrom:(QComment*) other {
  if (other == [QComment defaultInstance]) {
    return self;
  }
  if (other.hasUserName) {
    [self setUserName:other.userName];
  }
  if (other.hasPortraitUrl) {
    [self setPortraitUrl:other.portraitUrl];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasMark1) {
    [self setMark1:other.mark1];
  }
  if (other.hasMark2) {
    [self setMark2:other.mark2];
  }
  if (other.hasMark3) {
    [self setMark3:other.mark3];
  }
  if (other.hasMark4) {
    [self setMark4:other.mark4];
  }
  if (other.hasMark5) {
    [self setMark5:other.mark5];
  }
  if (other.hasCommentTime) {
    [self setCommentTime:other.commentTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (QComment_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[ES_PBExtensionRegistry emptyRegistry]];
}
- (QComment_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  ES_PBUnknownFieldSet_Builder* unknownFields = [ES_PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUserName:[input readString]];
        break;
      }
      case 18: {
        [self setPortraitUrl:[input readString]];
        break;
      }
      case 26: {
        [self setContent:[input readString]];
        break;
      }
      case 32: {
        [self setMark1:[input readInt32]];
        break;
      }
      case 40: {
        [self setMark2:[input readInt32]];
        break;
      }
      case 48: {
        [self setMark3:[input readInt32]];
        break;
      }
      case 56: {
        [self setMark4:[input readInt32]];
        break;
      }
      case 64: {
        [self setMark5:[input readInt32]];
        break;
      }
      case 74: {
        [self setCommentTime:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUserName {
  return result.hasUserName;
}
- (NSString*) userName {
  return result.userName;
}
- (QComment_Builder*) setUserName:(NSString*) value {
  result.hasUserName = YES;
  result.userName = value;
  return self;
}
- (QComment_Builder*) clearUserName {
  result.hasUserName = NO;
  result.userName = @"";
  return self;
}
- (BOOL) hasPortraitUrl {
  return result.hasPortraitUrl;
}
- (NSString*) portraitUrl {
  return result.portraitUrl;
}
- (QComment_Builder*) setPortraitUrl:(NSString*) value {
  result.hasPortraitUrl = YES;
  result.portraitUrl = value;
  return self;
}
- (QComment_Builder*) clearPortraitUrl {
  result.hasPortraitUrl = NO;
  result.portraitUrl = @"";
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSString*) content {
  return result.content;
}
- (QComment_Builder*) setContent:(NSString*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (QComment_Builder*) clearContent {
  result.hasContent = NO;
  result.content = @"";
  return self;
}
- (BOOL) hasMark1 {
  return result.hasMark1;
}
- (int32_t) mark1 {
  return result.mark1;
}
- (QComment_Builder*) setMark1:(int32_t) value {
  result.hasMark1 = YES;
  result.mark1 = value;
  return self;
}
- (QComment_Builder*) clearMark1 {
  result.hasMark1 = NO;
  result.mark1 = 5;
  return self;
}
- (BOOL) hasMark2 {
  return result.hasMark2;
}
- (int32_t) mark2 {
  return result.mark2;
}
- (QComment_Builder*) setMark2:(int32_t) value {
  result.hasMark2 = YES;
  result.mark2 = value;
  return self;
}
- (QComment_Builder*) clearMark2 {
  result.hasMark2 = NO;
  result.mark2 = 5;
  return self;
}
- (BOOL) hasMark3 {
  return result.hasMark3;
}
- (int32_t) mark3 {
  return result.mark3;
}
- (QComment_Builder*) setMark3:(int32_t) value {
  result.hasMark3 = YES;
  result.mark3 = value;
  return self;
}
- (QComment_Builder*) clearMark3 {
  result.hasMark3 = NO;
  result.mark3 = 5;
  return self;
}
- (BOOL) hasMark4 {
  return result.hasMark4;
}
- (int32_t) mark4 {
  return result.mark4;
}
- (QComment_Builder*) setMark4:(int32_t) value {
  result.hasMark4 = YES;
  result.mark4 = value;
  return self;
}
- (QComment_Builder*) clearMark4 {
  result.hasMark4 = NO;
  result.mark4 = 5;
  return self;
}
- (BOOL) hasMark5 {
  return result.hasMark5;
}
- (int32_t) mark5 {
  return result.mark5;
}
- (QComment_Builder*) setMark5:(int32_t) value {
  result.hasMark5 = YES;
  result.mark5 = value;
  return self;
}
- (QComment_Builder*) clearMark5 {
  result.hasMark5 = NO;
  result.mark5 = 5;
  return self;
}
- (BOOL) hasCommentTime {
  return result.hasCommentTime;
}
- (NSString*) commentTime {
  return result.commentTime;
}
- (QComment_Builder*) setCommentTime:(NSString*) value {
  result.hasCommentTime = YES;
  result.commentTime = value;
  return self;
}
- (QComment_Builder*) clearCommentTime {
  result.hasCommentTime = NO;
  result.commentTime = @"";
  return self;
}
@end

@interface CommentInfoRequest ()
@property (retain) NSString* companyId;
@property (retain) NSString* content;
@property int32_t mark1;
@property int32_t mark2;
@property int32_t mark3;
@property int32_t mark4;
@property int32_t mark5;
@property (retain) NSString* iPaddress;
@property int32_t start;
@property int32_t rows;
@end

@implementation CommentInfoRequest

- (BOOL) hasCompanyId {
  return !!hasCompanyId_;
}
- (void) setHasCompanyId:(BOOL) value_ {
  hasCompanyId_ = !!value_;
}
@synthesize companyId;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value_ {
  hasContent_ = !!value_;
}
@synthesize content;
- (BOOL) hasMark1 {
  return !!hasMark1_;
}
- (void) setHasMark1:(BOOL) value_ {
  hasMark1_ = !!value_;
}
@synthesize mark1;
- (BOOL) hasMark2 {
  return !!hasMark2_;
}
- (void) setHasMark2:(BOOL) value_ {
  hasMark2_ = !!value_;
}
@synthesize mark2;
- (BOOL) hasMark3 {
  return !!hasMark3_;
}
- (void) setHasMark3:(BOOL) value_ {
  hasMark3_ = !!value_;
}
@synthesize mark3;
- (BOOL) hasMark4 {
  return !!hasMark4_;
}
- (void) setHasMark4:(BOOL) value_ {
  hasMark4_ = !!value_;
}
@synthesize mark4;
- (BOOL) hasMark5 {
  return !!hasMark5_;
}
- (void) setHasMark5:(BOOL) value_ {
  hasMark5_ = !!value_;
}
@synthesize mark5;
- (BOOL) hasIPaddress {
  return !!hasIPaddress_;
}
- (void) setHasIPaddress:(BOOL) value_ {
  hasIPaddress_ = !!value_;
}
@synthesize iPaddress;
- (BOOL) hasStart {
  return !!hasStart_;
}
- (void) setHasStart:(BOOL) value_ {
  hasStart_ = !!value_;
}
@synthesize start;
- (BOOL) hasRows {
  return !!hasRows_;
}
- (void) setHasRows:(BOOL) value_ {
  hasRows_ = !!value_;
}
@synthesize rows;
- (void) dealloc {
  self.companyId = nil;
  self.content = nil;
  self.iPaddress = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.companyId = @"";
    self.content = @"";
    self.mark1 = 5;
    self.mark2 = 5;
    self.mark3 = 5;
    self.mark4 = 5;
    self.mark5 = 5;
    self.iPaddress = @"";
    self.start = 0;
    self.rows = 0;
  }
  return self;
}
static CommentInfoRequest* defaultCommentInfoRequestInstance = nil;
+ (void) initialize {
  if (self == [CommentInfoRequest class]) {
    defaultCommentInfoRequestInstance = [[CommentInfoRequest alloc] init];
  }
}
+ (CommentInfoRequest*) defaultInstance {
  return defaultCommentInfoRequestInstance;
}
- (CommentInfoRequest*) defaultInstance {
  return defaultCommentInfoRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCompanyId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(ES_PBCodedOutputStream*) output {
  if (self.hasCompanyId) {
    [output writeString:1 value:self.companyId];
  }
  if (self.hasContent) {
    [output writeString:2 value:self.content];
  }
  if (self.hasMark1) {
    [output writeInt32:3 value:self.mark1];
  }
  if (self.hasMark2) {
    [output writeInt32:4 value:self.mark2];
  }
  if (self.hasMark3) {
    [output writeInt32:5 value:self.mark3];
  }
  if (self.hasMark4) {
    [output writeInt32:6 value:self.mark4];
  }
  if (self.hasMark5) {
    [output writeInt32:7 value:self.mark5];
  }
  if (self.hasIPaddress) {
    [output writeString:8 value:self.iPaddress];
  }
  if (self.hasStart) {
    [output writeInt32:9 value:self.start];
  }
  if (self.hasRows) {
    [output writeInt32:10 value:self.rows];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCompanyId) {
    size_ += ES_computeStringSize(1, self.companyId);
  }
  if (self.hasContent) {
    size_ += ES_computeStringSize(2, self.content);
  }
  if (self.hasMark1) {
    size_ += ES_computeInt32Size(3, self.mark1);
  }
  if (self.hasMark2) {
    size_ += ES_computeInt32Size(4, self.mark2);
  }
  if (self.hasMark3) {
    size_ += ES_computeInt32Size(5, self.mark3);
  }
  if (self.hasMark4) {
    size_ += ES_computeInt32Size(6, self.mark4);
  }
  if (self.hasMark5) {
    size_ += ES_computeInt32Size(7, self.mark5);
  }
  if (self.hasIPaddress) {
    size_ += ES_computeStringSize(8, self.iPaddress);
  }
  if (self.hasStart) {
    size_ += ES_computeInt32Size(9, self.start);
  }
  if (self.hasRows) {
    size_ += ES_computeInt32Size(10, self.rows);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CommentInfoRequest*) parseFromData:(NSData*) data {
  return (CommentInfoRequest*)[[[CommentInfoRequest builder] mergeFromData:data] build];
}
+ (CommentInfoRequest*) parseFromData:(NSData*) data extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (CommentInfoRequest*)[[[CommentInfoRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CommentInfoRequest*) parseFromInputStream:(NSInputStream*) input {
  return (CommentInfoRequest*)[[[CommentInfoRequest builder] mergeFromInputStream:input] build];
}
+ (CommentInfoRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (CommentInfoRequest*)[[[CommentInfoRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommentInfoRequest*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return (CommentInfoRequest*)[[[CommentInfoRequest builder] mergeFromCodedInputStream:input] build];
}
+ (CommentInfoRequest*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (CommentInfoRequest*)[[[CommentInfoRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommentInfoRequest_Builder*) builder {
  return [[[CommentInfoRequest_Builder alloc] init] autorelease];
}
+ (CommentInfoRequest_Builder*) builderWithPrototype:(CommentInfoRequest*) prototype {
  return [[CommentInfoRequest builder] mergeFrom:prototype];
}
- (CommentInfoRequest_Builder*) builder {
  return [CommentInfoRequest builder];
}
- (CommentInfoRequest_Builder*) toBuilder {
  return [CommentInfoRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCompanyId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"companyId", self.companyId];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasMark1) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mark1", [NSNumber numberWithInt:self.mark1]];
  }
  if (self.hasMark2) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mark2", [NSNumber numberWithInt:self.mark2]];
  }
  if (self.hasMark3) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mark3", [NSNumber numberWithInt:self.mark3]];
  }
  if (self.hasMark4) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mark4", [NSNumber numberWithInt:self.mark4]];
  }
  if (self.hasMark5) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mark5", [NSNumber numberWithInt:self.mark5]];
  }
  if (self.hasIPaddress) {
    [output appendFormat:@"%@%@: %@\n", indent, @"iPaddress", self.iPaddress];
  }
  if (self.hasStart) {
    [output appendFormat:@"%@%@: %@\n", indent, @"start", [NSNumber numberWithInt:self.start]];
  }
  if (self.hasRows) {
    [output appendFormat:@"%@%@: %@\n", indent, @"rows", [NSNumber numberWithInt:self.rows]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CommentInfoRequest class]]) {
    return NO;
  }
  CommentInfoRequest *otherMessage = other;
  return
      self.hasCompanyId == otherMessage.hasCompanyId &&
      (!self.hasCompanyId || [self.companyId isEqual:otherMessage.companyId]) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasMark1 == otherMessage.hasMark1 &&
      (!self.hasMark1 || self.mark1 == otherMessage.mark1) &&
      self.hasMark2 == otherMessage.hasMark2 &&
      (!self.hasMark2 || self.mark2 == otherMessage.mark2) &&
      self.hasMark3 == otherMessage.hasMark3 &&
      (!self.hasMark3 || self.mark3 == otherMessage.mark3) &&
      self.hasMark4 == otherMessage.hasMark4 &&
      (!self.hasMark4 || self.mark4 == otherMessage.mark4) &&
      self.hasMark5 == otherMessage.hasMark5 &&
      (!self.hasMark5 || self.mark5 == otherMessage.mark5) &&
      self.hasIPaddress == otherMessage.hasIPaddress &&
      (!self.hasIPaddress || [self.iPaddress isEqual:otherMessage.iPaddress]) &&
      self.hasStart == otherMessage.hasStart &&
      (!self.hasStart || self.start == otherMessage.start) &&
      self.hasRows == otherMessage.hasRows &&
      (!self.hasRows || self.rows == otherMessage.rows) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasCompanyId) {
    hashCode = hashCode * 31 + [self.companyId hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasMark1) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.mark1] hash];
  }
  if (self.hasMark2) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.mark2] hash];
  }
  if (self.hasMark3) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.mark3] hash];
  }
  if (self.hasMark4) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.mark4] hash];
  }
  if (self.hasMark5) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.mark5] hash];
  }
  if (self.hasIPaddress) {
    hashCode = hashCode * 31 + [self.iPaddress hash];
  }
  if (self.hasStart) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.start] hash];
  }
  if (self.hasRows) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.rows] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CommentInfoRequest_Builder()
@property (retain) CommentInfoRequest* result;
@end

@implementation CommentInfoRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CommentInfoRequest alloc] init] autorelease];
  }
  return self;
}
- (ES_PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CommentInfoRequest_Builder*) clear {
  self.result = [[[CommentInfoRequest alloc] init] autorelease];
  return self;
}
- (CommentInfoRequest_Builder*) clone {
  return [CommentInfoRequest builderWithPrototype:result];
}
- (CommentInfoRequest*) defaultInstance {
  return [CommentInfoRequest defaultInstance];
}
- (CommentInfoRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CommentInfoRequest*) buildPartial {
  CommentInfoRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CommentInfoRequest_Builder*) mergeFrom:(CommentInfoRequest*) other {
  if (other == [CommentInfoRequest defaultInstance]) {
    return self;
  }
  if (other.hasCompanyId) {
    [self setCompanyId:other.companyId];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasMark1) {
    [self setMark1:other.mark1];
  }
  if (other.hasMark2) {
    [self setMark2:other.mark2];
  }
  if (other.hasMark3) {
    [self setMark3:other.mark3];
  }
  if (other.hasMark4) {
    [self setMark4:other.mark4];
  }
  if (other.hasMark5) {
    [self setMark5:other.mark5];
  }
  if (other.hasIPaddress) {
    [self setIPaddress:other.iPaddress];
  }
  if (other.hasStart) {
    [self setStart:other.start];
  }
  if (other.hasRows) {
    [self setRows:other.rows];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CommentInfoRequest_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[ES_PBExtensionRegistry emptyRegistry]];
}
- (CommentInfoRequest_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  ES_PBUnknownFieldSet_Builder* unknownFields = [ES_PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCompanyId:[input readString]];
        break;
      }
      case 18: {
        [self setContent:[input readString]];
        break;
      }
      case 24: {
        [self setMark1:[input readInt32]];
        break;
      }
      case 32: {
        [self setMark2:[input readInt32]];
        break;
      }
      case 40: {
        [self setMark3:[input readInt32]];
        break;
      }
      case 48: {
        [self setMark4:[input readInt32]];
        break;
      }
      case 56: {
        [self setMark5:[input readInt32]];
        break;
      }
      case 66: {
        [self setIPaddress:[input readString]];
        break;
      }
      case 72: {
        [self setStart:[input readInt32]];
        break;
      }
      case 80: {
        [self setRows:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCompanyId {
  return result.hasCompanyId;
}
- (NSString*) companyId {
  return result.companyId;
}
- (CommentInfoRequest_Builder*) setCompanyId:(NSString*) value {
  result.hasCompanyId = YES;
  result.companyId = value;
  return self;
}
- (CommentInfoRequest_Builder*) clearCompanyId {
  result.hasCompanyId = NO;
  result.companyId = @"";
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSString*) content {
  return result.content;
}
- (CommentInfoRequest_Builder*) setContent:(NSString*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (CommentInfoRequest_Builder*) clearContent {
  result.hasContent = NO;
  result.content = @"";
  return self;
}
- (BOOL) hasMark1 {
  return result.hasMark1;
}
- (int32_t) mark1 {
  return result.mark1;
}
- (CommentInfoRequest_Builder*) setMark1:(int32_t) value {
  result.hasMark1 = YES;
  result.mark1 = value;
  return self;
}
- (CommentInfoRequest_Builder*) clearMark1 {
  result.hasMark1 = NO;
  result.mark1 = 5;
  return self;
}
- (BOOL) hasMark2 {
  return result.hasMark2;
}
- (int32_t) mark2 {
  return result.mark2;
}
- (CommentInfoRequest_Builder*) setMark2:(int32_t) value {
  result.hasMark2 = YES;
  result.mark2 = value;
  return self;
}
- (CommentInfoRequest_Builder*) clearMark2 {
  result.hasMark2 = NO;
  result.mark2 = 5;
  return self;
}
- (BOOL) hasMark3 {
  return result.hasMark3;
}
- (int32_t) mark3 {
  return result.mark3;
}
- (CommentInfoRequest_Builder*) setMark3:(int32_t) value {
  result.hasMark3 = YES;
  result.mark3 = value;
  return self;
}
- (CommentInfoRequest_Builder*) clearMark3 {
  result.hasMark3 = NO;
  result.mark3 = 5;
  return self;
}
- (BOOL) hasMark4 {
  return result.hasMark4;
}
- (int32_t) mark4 {
  return result.mark4;
}
- (CommentInfoRequest_Builder*) setMark4:(int32_t) value {
  result.hasMark4 = YES;
  result.mark4 = value;
  return self;
}
- (CommentInfoRequest_Builder*) clearMark4 {
  result.hasMark4 = NO;
  result.mark4 = 5;
  return self;
}
- (BOOL) hasMark5 {
  return result.hasMark5;
}
- (int32_t) mark5 {
  return result.mark5;
}
- (CommentInfoRequest_Builder*) setMark5:(int32_t) value {
  result.hasMark5 = YES;
  result.mark5 = value;
  return self;
}
- (CommentInfoRequest_Builder*) clearMark5 {
  result.hasMark5 = NO;
  result.mark5 = 5;
  return self;
}
- (BOOL) hasIPaddress {
  return result.hasIPaddress;
}
- (NSString*) iPaddress {
  return result.iPaddress;
}
- (CommentInfoRequest_Builder*) setIPaddress:(NSString*) value {
  result.hasIPaddress = YES;
  result.iPaddress = value;
  return self;
}
- (CommentInfoRequest_Builder*) clearIPaddress {
  result.hasIPaddress = NO;
  result.iPaddress = @"";
  return self;
}
- (BOOL) hasStart {
  return result.hasStart;
}
- (int32_t) start {
  return result.start;
}
- (CommentInfoRequest_Builder*) setStart:(int32_t) value {
  result.hasStart = YES;
  result.start = value;
  return self;
}
- (CommentInfoRequest_Builder*) clearStart {
  result.hasStart = NO;
  result.start = 0;
  return self;
}
- (BOOL) hasRows {
  return result.hasRows;
}
- (int32_t) rows {
  return result.rows;
}
- (CommentInfoRequest_Builder*) setRows:(int32_t) value {
  result.hasRows = YES;
  result.rows = value;
  return self;
}
- (CommentInfoRequest_Builder*) clearRows {
  result.hasRows = NO;
  result.rows = 0;
  return self;
}
@end

@interface CommentInfoResponse ()
@property (retain) ES_PBAppendableArray * commentsArray;
@property int64_t numFound;
@property int32_t status;
@end

@implementation CommentInfoResponse

@synthesize commentsArray;
@dynamic comments;
- (BOOL) hasNumFound {
  return !!hasNumFound_;
}
- (void) setHasNumFound:(BOOL) value_ {
  hasNumFound_ = !!value_;
}
@synthesize numFound;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (void) dealloc {
  self.commentsArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.numFound = 0L;
    self.status = 0;
  }
  return self;
}
static CommentInfoResponse* defaultCommentInfoResponseInstance = nil;
+ (void) initialize {
  if (self == [CommentInfoResponse class]) {
    defaultCommentInfoResponseInstance = [[CommentInfoResponse alloc] init];
  }
}
+ (CommentInfoResponse*) defaultInstance {
  return defaultCommentInfoResponseInstance;
}
- (CommentInfoResponse*) defaultInstance {
  return defaultCommentInfoResponseInstance;
}
- (ES_PBArray *)comments {
  return commentsArray;
}
- (QComment*)commentsAtIndex:(NSUInteger)index {
  return [commentsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(ES_PBCodedOutputStream*) output {
  for (QComment *element in self.commentsArray) {
    [output writeMessage:1 value:element];
  }
  if (self.hasNumFound) {
    [output writeInt64:2 value:self.numFound];
  }
  if (self.hasStatus) {
    [output writeInt32:3 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  for (QComment *element in self.commentsArray) {
    size_ += ES_computeMessageSize(1, element);
  }
  if (self.hasNumFound) {
    size_ += ES_computeInt64Size(2, self.numFound);
  }
  if (self.hasStatus) {
    size_ += ES_computeInt32Size(3, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CommentInfoResponse*) parseFromData:(NSData*) data {
  return (CommentInfoResponse*)[[[CommentInfoResponse builder] mergeFromData:data] build];
}
+ (CommentInfoResponse*) parseFromData:(NSData*) data extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (CommentInfoResponse*)[[[CommentInfoResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CommentInfoResponse*) parseFromInputStream:(NSInputStream*) input {
  return (CommentInfoResponse*)[[[CommentInfoResponse builder] mergeFromInputStream:input] build];
}
+ (CommentInfoResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (CommentInfoResponse*)[[[CommentInfoResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommentInfoResponse*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return (CommentInfoResponse*)[[[CommentInfoResponse builder] mergeFromCodedInputStream:input] build];
}
+ (CommentInfoResponse*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (CommentInfoResponse*)[[[CommentInfoResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommentInfoResponse_Builder*) builder {
  return [[[CommentInfoResponse_Builder alloc] init] autorelease];
}
+ (CommentInfoResponse_Builder*) builderWithPrototype:(CommentInfoResponse*) prototype {
  return [[CommentInfoResponse builder] mergeFrom:prototype];
}
- (CommentInfoResponse_Builder*) builder {
  return [CommentInfoResponse builder];
}
- (CommentInfoResponse_Builder*) toBuilder {
  return [CommentInfoResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  for (QComment* element in self.commentsArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"comments"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasNumFound) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numFound", [NSNumber numberWithLongLong:self.numFound]];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInt:self.status]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CommentInfoResponse class]]) {
    return NO;
  }
  CommentInfoResponse *otherMessage = other;
  return
      [self.commentsArray isEqualToArray:otherMessage.commentsArray] &&
      self.hasNumFound == otherMessage.hasNumFound &&
      (!self.hasNumFound || self.numFound == otherMessage.numFound) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  for (QComment* element in self.commentsArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasNumFound) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.numFound] hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.status] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CommentInfoResponse_Builder()
@property (retain) CommentInfoResponse* result;
@end

@implementation CommentInfoResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CommentInfoResponse alloc] init] autorelease];
  }
  return self;
}
- (ES_PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CommentInfoResponse_Builder*) clear {
  self.result = [[[CommentInfoResponse alloc] init] autorelease];
  return self;
}
- (CommentInfoResponse_Builder*) clone {
  return [CommentInfoResponse builderWithPrototype:result];
}
- (CommentInfoResponse*) defaultInstance {
  return [CommentInfoResponse defaultInstance];
}
- (CommentInfoResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CommentInfoResponse*) buildPartial {
  CommentInfoResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CommentInfoResponse_Builder*) mergeFrom:(CommentInfoResponse*) other {
  if (other == [CommentInfoResponse defaultInstance]) {
    return self;
  }
  if (other.commentsArray.count > 0) {
    if (result.commentsArray == nil) {
      result.commentsArray = [[other.commentsArray copyWithZone:[other.commentsArray zone]] autorelease];
    } else {
      [result.commentsArray appendArray:other.commentsArray];
    }
  }
  if (other.hasNumFound) {
    [self setNumFound:other.numFound];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CommentInfoResponse_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[ES_PBExtensionRegistry emptyRegistry]];
}
- (CommentInfoResponse_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  ES_PBUnknownFieldSet_Builder* unknownFields = [ES_PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        QComment_Builder* subBuilder = [QComment builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addComments:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setNumFound:[input readInt64]];
        break;
      }
      case 24: {
        [self setStatus:[input readInt32]];
        break;
      }
    }
  }
}
- (ES_PBAppendableArray *)comments {
  return result.commentsArray;
}
- (QComment*)commentsAtIndex:(NSUInteger)index {
  return [result commentsAtIndex:index];
}
- (CommentInfoResponse_Builder *)addComments:(QComment*)value {
  if (result.commentsArray == nil) {
    result.commentsArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeObject];
  }
  [result.commentsArray addObject:value];
  return self;
}
- (CommentInfoResponse_Builder *)setCommentsArray:(NSArray *)array {
  result.commentsArray = [ES_PBAppendableArray arrayWithArray:array valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (CommentInfoResponse_Builder *)setCommentsValues:(const QComment* *)values count:(NSUInteger)count {
  result.commentsArray = [ES_PBAppendableArray arrayWithValues:values count:count valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (CommentInfoResponse_Builder *)clearComments {
  result.commentsArray = nil;
  return self;
}
- (BOOL) hasNumFound {
  return result.hasNumFound;
}
- (int64_t) numFound {
  return result.numFound;
}
- (CommentInfoResponse_Builder*) setNumFound:(int64_t) value {
  result.hasNumFound = YES;
  result.numFound = value;
  return self;
}
- (CommentInfoResponse_Builder*) clearNumFound {
  result.hasNumFound = NO;
  result.numFound = 0L;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (int32_t) status {
  return result.status;
}
- (CommentInfoResponse_Builder*) setStatus:(int32_t) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (CommentInfoResponse_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = 0;
  return self;
}
@end

