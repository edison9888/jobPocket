// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Query_public_info_proto.pb.h"

@implementation QueryPublicInfoProtoRoot
static ES_PBExtensionRegistry* extensionRegistry = nil;
+ (ES_PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [QueryPublicInfoProtoRoot class]) {
    ES_PBMutableExtensionRegistry* registry = [ES_PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(ES_PBMutableExtensionRegistry*) registry {
}
@end

@interface QCity ()
@property int32_t cityId;
@property (retain) NSString* cityName;
@property BOOL isHot;
@property (retain) NSString* firstWord;
@end

@implementation QCity

- (BOOL) hasCityId {
  return !!hasCityId_;
}
- (void) setHasCityId:(BOOL) value_ {
  hasCityId_ = !!value_;
}
@synthesize cityId;
- (BOOL) hasCityName {
  return !!hasCityName_;
}
- (void) setHasCityName:(BOOL) value_ {
  hasCityName_ = !!value_;
}
@synthesize cityName;
- (BOOL) hasIsHot {
  return !!hasIsHot_;
}
- (void) setHasIsHot:(BOOL) value_ {
  hasIsHot_ = !!value_;
}
- (BOOL) isHot {
  return !!isHot_;
}
- (void) setIsHot:(BOOL) value_ {
  isHot_ = !!value_;
}
- (BOOL) hasFirstWord {
  return !!hasFirstWord_;
}
- (void) setHasFirstWord:(BOOL) value_ {
  hasFirstWord_ = !!value_;
}
@synthesize firstWord;
- (void) dealloc {
  self.cityName = nil;
  self.firstWord = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.cityId = 0;
    self.cityName = @"";
    self.isHot = NO;
    self.firstWord = @"";
  }
  return self;
}
static QCity* defaultQCityInstance = nil;
+ (void) initialize {
  if (self == [QCity class]) {
    defaultQCityInstance = [[QCity alloc] init];
  }
}
+ (QCity*) defaultInstance {
  return defaultQCityInstance;
}
- (QCity*) defaultInstance {
  return defaultQCityInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCityId) {
    return NO;
  }
  if (!self.hasCityName) {
    return NO;
  }
  if (!self.hasIsHot) {
    return NO;
  }
  if (!self.hasFirstWord) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(ES_PBCodedOutputStream*) output {
  if (self.hasCityId) {
    [output writeInt32:1 value:self.cityId];
  }
  if (self.hasCityName) {
    [output writeString:2 value:self.cityName];
  }
  if (self.hasIsHot) {
    [output writeBool:3 value:self.isHot];
  }
  if (self.hasFirstWord) {
    [output writeString:4 value:self.firstWord];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCityId) {
    size_ += ES_computeInt32Size(1, self.cityId);
  }
  if (self.hasCityName) {
    size_ += ES_computeStringSize(2, self.cityName);
  }
  if (self.hasIsHot) {
    size_ += ES_computeBoolSize(3, self.isHot);
  }
  if (self.hasFirstWord) {
    size_ += ES_computeStringSize(4, self.firstWord);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (QCity*) parseFromData:(NSData*) data {
  return (QCity*)[[[QCity builder] mergeFromData:data] build];
}
+ (QCity*) parseFromData:(NSData*) data extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (QCity*)[[[QCity builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (QCity*) parseFromInputStream:(NSInputStream*) input {
  return (QCity*)[[[QCity builder] mergeFromInputStream:input] build];
}
+ (QCity*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (QCity*)[[[QCity builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QCity*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return (QCity*)[[[QCity builder] mergeFromCodedInputStream:input] build];
}
+ (QCity*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (QCity*)[[[QCity builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QCity_Builder*) builder {
  return [[[QCity_Builder alloc] init] autorelease];
}
+ (QCity_Builder*) builderWithPrototype:(QCity*) prototype {
  return [[QCity builder] mergeFrom:prototype];
}
- (QCity_Builder*) builder {
  return [QCity builder];
}
- (QCity_Builder*) toBuilder {
  return [QCity builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCityId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cityId", [NSNumber numberWithInt:self.cityId]];
  }
  if (self.hasCityName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cityName", self.cityName];
  }
  if (self.hasIsHot) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isHot", [NSNumber numberWithBool:self.isHot]];
  }
  if (self.hasFirstWord) {
    [output appendFormat:@"%@%@: %@\n", indent, @"firstWord", self.firstWord];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[QCity class]]) {
    return NO;
  }
  QCity *otherMessage = other;
  return
      self.hasCityId == otherMessage.hasCityId &&
      (!self.hasCityId || self.cityId == otherMessage.cityId) &&
      self.hasCityName == otherMessage.hasCityName &&
      (!self.hasCityName || [self.cityName isEqual:otherMessage.cityName]) &&
      self.hasIsHot == otherMessage.hasIsHot &&
      (!self.hasIsHot || self.isHot == otherMessage.isHot) &&
      self.hasFirstWord == otherMessage.hasFirstWord &&
      (!self.hasFirstWord || [self.firstWord isEqual:otherMessage.firstWord]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasCityId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.cityId] hash];
  }
  if (self.hasCityName) {
    hashCode = hashCode * 31 + [self.cityName hash];
  }
  if (self.hasIsHot) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isHot] hash];
  }
  if (self.hasFirstWord) {
    hashCode = hashCode * 31 + [self.firstWord hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface QCity_Builder()
@property (retain) QCity* result;
@end

@implementation QCity_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[QCity alloc] init] autorelease];
  }
  return self;
}
- (ES_PBGeneratedMessage*) internalGetResult {
  return result;
}
- (QCity_Builder*) clear {
  self.result = [[[QCity alloc] init] autorelease];
  return self;
}
- (QCity_Builder*) clone {
  return [QCity builderWithPrototype:result];
}
- (QCity*) defaultInstance {
  return [QCity defaultInstance];
}
- (QCity*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (QCity*) buildPartial {
  QCity* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (QCity_Builder*) mergeFrom:(QCity*) other {
  if (other == [QCity defaultInstance]) {
    return self;
  }
  if (other.hasCityId) {
    [self setCityId:other.cityId];
  }
  if (other.hasCityName) {
    [self setCityName:other.cityName];
  }
  if (other.hasIsHot) {
    [self setIsHot:other.isHot];
  }
  if (other.hasFirstWord) {
    [self setFirstWord:other.firstWord];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (QCity_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[ES_PBExtensionRegistry emptyRegistry]];
}
- (QCity_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  ES_PBUnknownFieldSet_Builder* unknownFields = [ES_PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCityId:[input readInt32]];
        break;
      }
      case 18: {
        [self setCityName:[input readString]];
        break;
      }
      case 24: {
        [self setIsHot:[input readBool]];
        break;
      }
      case 34: {
        [self setFirstWord:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCityId {
  return result.hasCityId;
}
- (int32_t) cityId {
  return result.cityId;
}
- (QCity_Builder*) setCityId:(int32_t) value {
  result.hasCityId = YES;
  result.cityId = value;
  return self;
}
- (QCity_Builder*) clearCityId {
  result.hasCityId = NO;
  result.cityId = 0;
  return self;
}
- (BOOL) hasCityName {
  return result.hasCityName;
}
- (NSString*) cityName {
  return result.cityName;
}
- (QCity_Builder*) setCityName:(NSString*) value {
  result.hasCityName = YES;
  result.cityName = value;
  return self;
}
- (QCity_Builder*) clearCityName {
  result.hasCityName = NO;
  result.cityName = @"";
  return self;
}
- (BOOL) hasIsHot {
  return result.hasIsHot;
}
- (BOOL) isHot {
  return result.isHot;
}
- (QCity_Builder*) setIsHot:(BOOL) value {
  result.hasIsHot = YES;
  result.isHot = value;
  return self;
}
- (QCity_Builder*) clearIsHot {
  result.hasIsHot = NO;
  result.isHot = NO;
  return self;
}
- (BOOL) hasFirstWord {
  return result.hasFirstWord;
}
- (NSString*) firstWord {
  return result.firstWord;
}
- (QCity_Builder*) setFirstWord:(NSString*) value {
  result.hasFirstWord = YES;
  result.firstWord = value;
  return self;
}
- (QCity_Builder*) clearFirstWord {
  result.hasFirstWord = NO;
  result.firstWord = @"";
  return self;
}
@end

@interface QCategory ()
@property int32_t categoryId;
@property (retain) NSString* categoryName;
@end

@implementation QCategory

- (BOOL) hasCategoryId {
  return !!hasCategoryId_;
}
- (void) setHasCategoryId:(BOOL) value_ {
  hasCategoryId_ = !!value_;
}
@synthesize categoryId;
- (BOOL) hasCategoryName {
  return !!hasCategoryName_;
}
- (void) setHasCategoryName:(BOOL) value_ {
  hasCategoryName_ = !!value_;
}
@synthesize categoryName;
- (void) dealloc {
  self.categoryName = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.categoryId = 0;
    self.categoryName = @"";
  }
  return self;
}
static QCategory* defaultQCategoryInstance = nil;
+ (void) initialize {
  if (self == [QCategory class]) {
    defaultQCategoryInstance = [[QCategory alloc] init];
  }
}
+ (QCategory*) defaultInstance {
  return defaultQCategoryInstance;
}
- (QCategory*) defaultInstance {
  return defaultQCategoryInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(ES_PBCodedOutputStream*) output {
  if (self.hasCategoryId) {
    [output writeInt32:1 value:self.categoryId];
  }
  if (self.hasCategoryName) {
    [output writeString:2 value:self.categoryName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCategoryId) {
    size_ += ES_computeInt32Size(1, self.categoryId);
  }
  if (self.hasCategoryName) {
    size_ += ES_computeStringSize(2, self.categoryName);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (QCategory*) parseFromData:(NSData*) data {
  return (QCategory*)[[[QCategory builder] mergeFromData:data] build];
}
+ (QCategory*) parseFromData:(NSData*) data extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (QCategory*)[[[QCategory builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (QCategory*) parseFromInputStream:(NSInputStream*) input {
  return (QCategory*)[[[QCategory builder] mergeFromInputStream:input] build];
}
+ (QCategory*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (QCategory*)[[[QCategory builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QCategory*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return (QCategory*)[[[QCategory builder] mergeFromCodedInputStream:input] build];
}
+ (QCategory*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (QCategory*)[[[QCategory builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QCategory_Builder*) builder {
  return [[[QCategory_Builder alloc] init] autorelease];
}
+ (QCategory_Builder*) builderWithPrototype:(QCategory*) prototype {
  return [[QCategory builder] mergeFrom:prototype];
}
- (QCategory_Builder*) builder {
  return [QCategory builder];
}
- (QCategory_Builder*) toBuilder {
  return [QCategory builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCategoryId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"categoryId", [NSNumber numberWithInt:self.categoryId]];
  }
  if (self.hasCategoryName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"categoryName", self.categoryName];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[QCategory class]]) {
    return NO;
  }
  QCategory *otherMessage = other;
  return
      self.hasCategoryId == otherMessage.hasCategoryId &&
      (!self.hasCategoryId || self.categoryId == otherMessage.categoryId) &&
      self.hasCategoryName == otherMessage.hasCategoryName &&
      (!self.hasCategoryName || [self.categoryName isEqual:otherMessage.categoryName]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasCategoryId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.categoryId] hash];
  }
  if (self.hasCategoryName) {
    hashCode = hashCode * 31 + [self.categoryName hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface QCategory_Builder()
@property (retain) QCategory* result;
@end

@implementation QCategory_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[QCategory alloc] init] autorelease];
  }
  return self;
}
- (ES_PBGeneratedMessage*) internalGetResult {
  return result;
}
- (QCategory_Builder*) clear {
  self.result = [[[QCategory alloc] init] autorelease];
  return self;
}
- (QCategory_Builder*) clone {
  return [QCategory builderWithPrototype:result];
}
- (QCategory*) defaultInstance {
  return [QCategory defaultInstance];
}
- (QCategory*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (QCategory*) buildPartial {
  QCategory* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (QCategory_Builder*) mergeFrom:(QCategory*) other {
  if (other == [QCategory defaultInstance]) {
    return self;
  }
  if (other.hasCategoryId) {
    [self setCategoryId:other.categoryId];
  }
  if (other.hasCategoryName) {
    [self setCategoryName:other.categoryName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (QCategory_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[ES_PBExtensionRegistry emptyRegistry]];
}
- (QCategory_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  ES_PBUnknownFieldSet_Builder* unknownFields = [ES_PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCategoryId:[input readInt32]];
        break;
      }
      case 18: {
        [self setCategoryName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCategoryId {
  return result.hasCategoryId;
}
- (int32_t) categoryId {
  return result.categoryId;
}
- (QCategory_Builder*) setCategoryId:(int32_t) value {
  result.hasCategoryId = YES;
  result.categoryId = value;
  return self;
}
- (QCategory_Builder*) clearCategoryId {
  result.hasCategoryId = NO;
  result.categoryId = 0;
  return self;
}
- (BOOL) hasCategoryName {
  return result.hasCategoryName;
}
- (NSString*) categoryName {
  return result.categoryName;
}
- (QCategory_Builder*) setCategoryName:(NSString*) value {
  result.hasCategoryName = YES;
  result.categoryName = value;
  return self;
}
- (QCategory_Builder*) clearCategoryName {
  result.hasCategoryName = NO;
  result.categoryName = @"";
  return self;
}
@end

@interface QCompany ()
@property (retain) NSString* companyId;
@property (retain) NSString* companyName;
@property (retain) NSString* compamyTel;
@property (retain) NSString* companyAdd;
@property (retain) NSString* companyDescription;
@property (retain) NSString* companyPicUrl;
@property Float32 gpsx;
@property Float32 gpsy;
@end

@implementation QCompany

- (BOOL) hasCompanyId {
  return !!hasCompanyId_;
}
- (void) setHasCompanyId:(BOOL) value_ {
  hasCompanyId_ = !!value_;
}
@synthesize companyId;
- (BOOL) hasCompanyName {
  return !!hasCompanyName_;
}
- (void) setHasCompanyName:(BOOL) value_ {
  hasCompanyName_ = !!value_;
}
@synthesize companyName;
- (BOOL) hasCompamyTel {
  return !!hasCompamyTel_;
}
- (void) setHasCompamyTel:(BOOL) value_ {
  hasCompamyTel_ = !!value_;
}
@synthesize compamyTel;
- (BOOL) hasCompanyAdd {
  return !!hasCompanyAdd_;
}
- (void) setHasCompanyAdd:(BOOL) value_ {
  hasCompanyAdd_ = !!value_;
}
@synthesize companyAdd;
- (BOOL) hasCompanyDescription {
  return !!hasCompanyDescription_;
}
- (void) setHasCompanyDescription:(BOOL) value_ {
  hasCompanyDescription_ = !!value_;
}
@synthesize companyDescription;
- (BOOL) hasCompanyPicUrl {
  return !!hasCompanyPicUrl_;
}
- (void) setHasCompanyPicUrl:(BOOL) value_ {
  hasCompanyPicUrl_ = !!value_;
}
@synthesize companyPicUrl;
- (BOOL) hasGpsx {
  return !!hasGpsx_;
}
- (void) setHasGpsx:(BOOL) value_ {
  hasGpsx_ = !!value_;
}
@synthesize gpsx;
- (BOOL) hasGpsy {
  return !!hasGpsy_;
}
- (void) setHasGpsy:(BOOL) value_ {
  hasGpsy_ = !!value_;
}
@synthesize gpsy;
- (void) dealloc {
  self.companyId = nil;
  self.companyName = nil;
  self.compamyTel = nil;
  self.companyAdd = nil;
  self.companyDescription = nil;
  self.companyPicUrl = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.companyId = @"";
    self.companyName = @"";
    self.compamyTel = @"";
    self.companyAdd = @"";
    self.companyDescription = @"";
    self.companyPicUrl = @"";
    self.gpsx = 0;
    self.gpsy = 0;
  }
  return self;
}
static QCompany* defaultQCompanyInstance = nil;
+ (void) initialize {
  if (self == [QCompany class]) {
    defaultQCompanyInstance = [[QCompany alloc] init];
  }
}
+ (QCompany*) defaultInstance {
  return defaultQCompanyInstance;
}
- (QCompany*) defaultInstance {
  return defaultQCompanyInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCompanyId) {
    return NO;
  }
  if (!self.hasCompanyName) {
    return NO;
  }
  if (!self.hasCompamyTel) {
    return NO;
  }
  if (!self.hasCompanyAdd) {
    return NO;
  }
  if (!self.hasCompanyDescription) {
    return NO;
  }
  if (!self.hasCompanyPicUrl) {
    return NO;
  }
  if (!self.hasGpsx) {
    return NO;
  }
  if (!self.hasGpsy) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(ES_PBCodedOutputStream*) output {
  if (self.hasCompanyId) {
    [output writeString:1 value:self.companyId];
  }
  if (self.hasCompanyName) {
    [output writeString:2 value:self.companyName];
  }
  if (self.hasCompamyTel) {
    [output writeString:3 value:self.compamyTel];
  }
  if (self.hasCompanyAdd) {
    [output writeString:4 value:self.companyAdd];
  }
  if (self.hasCompanyDescription) {
    [output writeString:5 value:self.companyDescription];
  }
  if (self.hasCompanyPicUrl) {
    [output writeString:6 value:self.companyPicUrl];
  }
  if (self.hasGpsx) {
    [output writeFloat:7 value:self.gpsx];
  }
  if (self.hasGpsy) {
    [output writeFloat:8 value:self.gpsy];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCompanyId) {
    size_ += ES_computeStringSize(1, self.companyId);
  }
  if (self.hasCompanyName) {
    size_ += ES_computeStringSize(2, self.companyName);
  }
  if (self.hasCompamyTel) {
    size_ += ES_computeStringSize(3, self.compamyTel);
  }
  if (self.hasCompanyAdd) {
    size_ += ES_computeStringSize(4, self.companyAdd);
  }
  if (self.hasCompanyDescription) {
    size_ += ES_computeStringSize(5, self.companyDescription);
  }
  if (self.hasCompanyPicUrl) {
    size_ += ES_computeStringSize(6, self.companyPicUrl);
  }
  if (self.hasGpsx) {
    size_ += ES_computeFloatSize(7, self.gpsx);
  }
  if (self.hasGpsy) {
    size_ += ES_computeFloatSize(8, self.gpsy);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (QCompany*) parseFromData:(NSData*) data {
  return (QCompany*)[[[QCompany builder] mergeFromData:data] build];
}
+ (QCompany*) parseFromData:(NSData*) data extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (QCompany*)[[[QCompany builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (QCompany*) parseFromInputStream:(NSInputStream*) input {
  return (QCompany*)[[[QCompany builder] mergeFromInputStream:input] build];
}
+ (QCompany*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (QCompany*)[[[QCompany builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QCompany*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return (QCompany*)[[[QCompany builder] mergeFromCodedInputStream:input] build];
}
+ (QCompany*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (QCompany*)[[[QCompany builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QCompany_Builder*) builder {
  return [[[QCompany_Builder alloc] init] autorelease];
}
+ (QCompany_Builder*) builderWithPrototype:(QCompany*) prototype {
  return [[QCompany builder] mergeFrom:prototype];
}
- (QCompany_Builder*) builder {
  return [QCompany builder];
}
- (QCompany_Builder*) toBuilder {
  return [QCompany builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCompanyId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"companyId", self.companyId];
  }
  if (self.hasCompanyName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"companyName", self.companyName];
  }
  if (self.hasCompamyTel) {
    [output appendFormat:@"%@%@: %@\n", indent, @"compamyTel", self.compamyTel];
  }
  if (self.hasCompanyAdd) {
    [output appendFormat:@"%@%@: %@\n", indent, @"companyAdd", self.companyAdd];
  }
  if (self.hasCompanyDescription) {
    [output appendFormat:@"%@%@: %@\n", indent, @"companyDescription", self.companyDescription];
  }
  if (self.hasCompanyPicUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"companyPicUrl", self.companyPicUrl];
  }
  if (self.hasGpsx) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gpsx", [NSNumber numberWithFloat:self.gpsx]];
  }
  if (self.hasGpsy) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gpsy", [NSNumber numberWithFloat:self.gpsy]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[QCompany class]]) {
    return NO;
  }
  QCompany *otherMessage = other;
  return
      self.hasCompanyId == otherMessage.hasCompanyId &&
      (!self.hasCompanyId || [self.companyId isEqual:otherMessage.companyId]) &&
      self.hasCompanyName == otherMessage.hasCompanyName &&
      (!self.hasCompanyName || [self.companyName isEqual:otherMessage.companyName]) &&
      self.hasCompamyTel == otherMessage.hasCompamyTel &&
      (!self.hasCompamyTel || [self.compamyTel isEqual:otherMessage.compamyTel]) &&
      self.hasCompanyAdd == otherMessage.hasCompanyAdd &&
      (!self.hasCompanyAdd || [self.companyAdd isEqual:otherMessage.companyAdd]) &&
      self.hasCompanyDescription == otherMessage.hasCompanyDescription &&
      (!self.hasCompanyDescription || [self.companyDescription isEqual:otherMessage.companyDescription]) &&
      self.hasCompanyPicUrl == otherMessage.hasCompanyPicUrl &&
      (!self.hasCompanyPicUrl || [self.companyPicUrl isEqual:otherMessage.companyPicUrl]) &&
      self.hasGpsx == otherMessage.hasGpsx &&
      (!self.hasGpsx || self.gpsx == otherMessage.gpsx) &&
      self.hasGpsy == otherMessage.hasGpsy &&
      (!self.hasGpsy || self.gpsy == otherMessage.gpsy) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasCompanyId) {
    hashCode = hashCode * 31 + [self.companyId hash];
  }
  if (self.hasCompanyName) {
    hashCode = hashCode * 31 + [self.companyName hash];
  }
  if (self.hasCompamyTel) {
    hashCode = hashCode * 31 + [self.compamyTel hash];
  }
  if (self.hasCompanyAdd) {
    hashCode = hashCode * 31 + [self.companyAdd hash];
  }
  if (self.hasCompanyDescription) {
    hashCode = hashCode * 31 + [self.companyDescription hash];
  }
  if (self.hasCompanyPicUrl) {
    hashCode = hashCode * 31 + [self.companyPicUrl hash];
  }
  if (self.hasGpsx) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.gpsx] hash];
  }
  if (self.hasGpsy) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.gpsy] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface QCompany_Builder()
@property (retain) QCompany* result;
@end

@implementation QCompany_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[QCompany alloc] init] autorelease];
  }
  return self;
}
- (ES_PBGeneratedMessage*) internalGetResult {
  return result;
}
- (QCompany_Builder*) clear {
  self.result = [[[QCompany alloc] init] autorelease];
  return self;
}
- (QCompany_Builder*) clone {
  return [QCompany builderWithPrototype:result];
}
- (QCompany*) defaultInstance {
  return [QCompany defaultInstance];
}
- (QCompany*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (QCompany*) buildPartial {
  QCompany* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (QCompany_Builder*) mergeFrom:(QCompany*) other {
  if (other == [QCompany defaultInstance]) {
    return self;
  }
  if (other.hasCompanyId) {
    [self setCompanyId:other.companyId];
  }
  if (other.hasCompanyName) {
    [self setCompanyName:other.companyName];
  }
  if (other.hasCompamyTel) {
    [self setCompamyTel:other.compamyTel];
  }
  if (other.hasCompanyAdd) {
    [self setCompanyAdd:other.companyAdd];
  }
  if (other.hasCompanyDescription) {
    [self setCompanyDescription:other.companyDescription];
  }
  if (other.hasCompanyPicUrl) {
    [self setCompanyPicUrl:other.companyPicUrl];
  }
  if (other.hasGpsx) {
    [self setGpsx:other.gpsx];
  }
  if (other.hasGpsy) {
    [self setGpsy:other.gpsy];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (QCompany_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[ES_PBExtensionRegistry emptyRegistry]];
}
- (QCompany_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  ES_PBUnknownFieldSet_Builder* unknownFields = [ES_PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCompanyId:[input readString]];
        break;
      }
      case 18: {
        [self setCompanyName:[input readString]];
        break;
      }
      case 26: {
        [self setCompamyTel:[input readString]];
        break;
      }
      case 34: {
        [self setCompanyAdd:[input readString]];
        break;
      }
      case 42: {
        [self setCompanyDescription:[input readString]];
        break;
      }
      case 50: {
        [self setCompanyPicUrl:[input readString]];
        break;
      }
      case 61: {
        [self setGpsx:[input readFloat]];
        break;
      }
      case 69: {
        [self setGpsy:[input readFloat]];
        break;
      }
    }
  }
}
- (BOOL) hasCompanyId {
  return result.hasCompanyId;
}
- (NSString*) companyId {
  return result.companyId;
}
- (QCompany_Builder*) setCompanyId:(NSString*) value {
  result.hasCompanyId = YES;
  result.companyId = value;
  return self;
}
- (QCompany_Builder*) clearCompanyId {
  result.hasCompanyId = NO;
  result.companyId = @"";
  return self;
}
- (BOOL) hasCompanyName {
  return result.hasCompanyName;
}
- (NSString*) companyName {
  return result.companyName;
}
- (QCompany_Builder*) setCompanyName:(NSString*) value {
  result.hasCompanyName = YES;
  result.companyName = value;
  return self;
}
- (QCompany_Builder*) clearCompanyName {
  result.hasCompanyName = NO;
  result.companyName = @"";
  return self;
}
- (BOOL) hasCompamyTel {
  return result.hasCompamyTel;
}
- (NSString*) compamyTel {
  return result.compamyTel;
}
- (QCompany_Builder*) setCompamyTel:(NSString*) value {
  result.hasCompamyTel = YES;
  result.compamyTel = value;
  return self;
}
- (QCompany_Builder*) clearCompamyTel {
  result.hasCompamyTel = NO;
  result.compamyTel = @"";
  return self;
}
- (BOOL) hasCompanyAdd {
  return result.hasCompanyAdd;
}
- (NSString*) companyAdd {
  return result.companyAdd;
}
- (QCompany_Builder*) setCompanyAdd:(NSString*) value {
  result.hasCompanyAdd = YES;
  result.companyAdd = value;
  return self;
}
- (QCompany_Builder*) clearCompanyAdd {
  result.hasCompanyAdd = NO;
  result.companyAdd = @"";
  return self;
}
- (BOOL) hasCompanyDescription {
  return result.hasCompanyDescription;
}
- (NSString*) companyDescription {
  return result.companyDescription;
}
- (QCompany_Builder*) setCompanyDescription:(NSString*) value {
  result.hasCompanyDescription = YES;
  result.companyDescription = value;
  return self;
}
- (QCompany_Builder*) clearCompanyDescription {
  result.hasCompanyDescription = NO;
  result.companyDescription = @"";
  return self;
}
- (BOOL) hasCompanyPicUrl {
  return result.hasCompanyPicUrl;
}
- (NSString*) companyPicUrl {
  return result.companyPicUrl;
}
- (QCompany_Builder*) setCompanyPicUrl:(NSString*) value {
  result.hasCompanyPicUrl = YES;
  result.companyPicUrl = value;
  return self;
}
- (QCompany_Builder*) clearCompanyPicUrl {
  result.hasCompanyPicUrl = NO;
  result.companyPicUrl = @"";
  return self;
}
- (BOOL) hasGpsx {
  return result.hasGpsx;
}
- (Float32) gpsx {
  return result.gpsx;
}
- (QCompany_Builder*) setGpsx:(Float32) value {
  result.hasGpsx = YES;
  result.gpsx = value;
  return self;
}
- (QCompany_Builder*) clearGpsx {
  result.hasGpsx = NO;
  result.gpsx = 0;
  return self;
}
- (BOOL) hasGpsy {
  return result.hasGpsy;
}
- (Float32) gpsy {
  return result.gpsy;
}
- (QCompany_Builder*) setGpsy:(Float32) value {
  result.hasGpsy = YES;
  result.gpsy = value;
  return self;
}
- (QCompany_Builder*) clearGpsy {
  result.hasGpsy = NO;
  result.gpsy = 0;
  return self;
}
@end

@interface QueryPublicInfoRequest ()
@property int32_t type;
@property int32_t cityId;
@property (retain) ES_PBAppendableArray * categoryIdsArray;
@property (retain) NSString* keyword;
@property int32_t start;
@property int32_t rows;
@property (retain) ES_PBAppendableArray * companyIdsArray;
@property (retain) NSString* mobileNum;
@property (retain) NSString* imsi;
@property (retain) NSString* mobileManufacturer;
@property (retain) NSString* mobileType;
@end

@implementation QueryPublicInfoRequest

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value_ {
  hasType_ = !!value_;
}
@synthesize type;
- (BOOL) hasCityId {
  return !!hasCityId_;
}
- (void) setHasCityId:(BOOL) value_ {
  hasCityId_ = !!value_;
}
@synthesize cityId;
@synthesize categoryIdsArray;
@dynamic categoryIds;
- (BOOL) hasKeyword {
  return !!hasKeyword_;
}
- (void) setHasKeyword:(BOOL) value_ {
  hasKeyword_ = !!value_;
}
@synthesize keyword;
- (BOOL) hasStart {
  return !!hasStart_;
}
- (void) setHasStart:(BOOL) value_ {
  hasStart_ = !!value_;
}
@synthesize start;
- (BOOL) hasRows {
  return !!hasRows_;
}
- (void) setHasRows:(BOOL) value_ {
  hasRows_ = !!value_;
}
@synthesize rows;
@synthesize companyIdsArray;
@dynamic companyIds;
- (BOOL) hasMobileNum {
  return !!hasMobileNum_;
}
- (void) setHasMobileNum:(BOOL) value_ {
  hasMobileNum_ = !!value_;
}
@synthesize mobileNum;
- (BOOL) hasImsi {
  return !!hasImsi_;
}
- (void) setHasImsi:(BOOL) value_ {
  hasImsi_ = !!value_;
}
@synthesize imsi;
- (BOOL) hasMobileManufacturer {
  return !!hasMobileManufacturer_;
}
- (void) setHasMobileManufacturer:(BOOL) value_ {
  hasMobileManufacturer_ = !!value_;
}
@synthesize mobileManufacturer;
- (BOOL) hasMobileType {
  return !!hasMobileType_;
}
- (void) setHasMobileType:(BOOL) value_ {
  hasMobileType_ = !!value_;
}
@synthesize mobileType;
- (void) dealloc {
  self.categoryIdsArray = nil;
  self.keyword = nil;
  self.companyIdsArray = nil;
  self.mobileNum = nil;
  self.imsi = nil;
  self.mobileManufacturer = nil;
  self.mobileType = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.type = 0;
    self.cityId = 0;
    self.keyword = @"";
    self.start = 0;
    self.rows = 10;
    self.mobileNum = @"";
    self.imsi = @"";
    self.mobileManufacturer = @"";
    self.mobileType = @"";
  }
  return self;
}
static QueryPublicInfoRequest* defaultQueryPublicInfoRequestInstance = nil;
+ (void) initialize {
  if (self == [QueryPublicInfoRequest class]) {
    defaultQueryPublicInfoRequestInstance = [[QueryPublicInfoRequest alloc] init];
  }
}
+ (QueryPublicInfoRequest*) defaultInstance {
  return defaultQueryPublicInfoRequestInstance;
}
- (QueryPublicInfoRequest*) defaultInstance {
  return defaultQueryPublicInfoRequestInstance;
}
- (ES_PBArray *)categoryIds {
  return categoryIdsArray;
}
- (int32_t)categoryIdsAtIndex:(NSUInteger)index {
  return [categoryIdsArray int32AtIndex:index];
}
- (ES_PBArray *)companyIds {
  return companyIdsArray;
}
- (NSString*)companyIdsAtIndex:(NSUInteger)index {
  return [companyIdsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasType) {
    return NO;
  }
  if (!self.hasCityId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(ES_PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeInt32:1 value:self.type];
  }
  if (self.hasCityId) {
    [output writeInt32:2 value:self.cityId];
  }
  const NSUInteger categoryIdsArrayCount = self.categoryIdsArray.count;
  if (categoryIdsArrayCount > 0) {
    const int32_t *values = (const int32_t *)self.categoryIdsArray.data;
    for (NSUInteger i = 0; i < categoryIdsArrayCount; ++i) {
      [output writeInt32:3 value:values[i]];
    }
  }
  if (self.hasKeyword) {
    [output writeString:4 value:self.keyword];
  }
  if (self.hasStart) {
    [output writeInt32:5 value:self.start];
  }
  if (self.hasRows) {
    [output writeInt32:6 value:self.rows];
  }
  const NSUInteger companyIdsArrayCount = self.companyIdsArray.count;
  if (companyIdsArrayCount > 0) {
    const NSString* *values = (const NSString* *)self.companyIdsArray.data;
    for (NSUInteger i = 0; i < companyIdsArrayCount; ++i) {
      [output writeString:7 value:values[i]];
    }
  }
  if (self.hasMobileNum) {
    [output writeString:8 value:self.mobileNum];
  }
  if (self.hasImsi) {
    [output writeString:9 value:self.imsi];
  }
  if (self.hasMobileManufacturer) {
    [output writeString:10 value:self.mobileManufacturer];
  }
  if (self.hasMobileType) {
    [output writeString:11 value:self.mobileType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasType) {
    size_ += ES_computeInt32Size(1, self.type);
  }
  if (self.hasCityId) {
    size_ += ES_computeInt32Size(2, self.cityId);
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.categoryIdsArray.count;
    const int32_t *values = (const int32_t *)self.categoryIdsArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += ES_computeInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 1 * count;
  }
  if (self.hasKeyword) {
    size_ += ES_computeStringSize(4, self.keyword);
  }
  if (self.hasStart) {
    size_ += ES_computeInt32Size(5, self.start);
  }
  if (self.hasRows) {
    size_ += ES_computeInt32Size(6, self.rows);
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.companyIdsArray.count;
    const NSString* *values = (const NSString* *)self.companyIdsArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += ES_computeStringSizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 1 * count;
  }
  if (self.hasMobileNum) {
    size_ += ES_computeStringSize(8, self.mobileNum);
  }
  if (self.hasImsi) {
    size_ += ES_computeStringSize(9, self.imsi);
  }
  if (self.hasMobileManufacturer) {
    size_ += ES_computeStringSize(10, self.mobileManufacturer);
  }
  if (self.hasMobileType) {
    size_ += ES_computeStringSize(11, self.mobileType);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (QueryPublicInfoRequest*) parseFromData:(NSData*) data {
  return (QueryPublicInfoRequest*)[[[QueryPublicInfoRequest builder] mergeFromData:data] build];
}
+ (QueryPublicInfoRequest*) parseFromData:(NSData*) data extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (QueryPublicInfoRequest*)[[[QueryPublicInfoRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (QueryPublicInfoRequest*) parseFromInputStream:(NSInputStream*) input {
  return (QueryPublicInfoRequest*)[[[QueryPublicInfoRequest builder] mergeFromInputStream:input] build];
}
+ (QueryPublicInfoRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (QueryPublicInfoRequest*)[[[QueryPublicInfoRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QueryPublicInfoRequest*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return (QueryPublicInfoRequest*)[[[QueryPublicInfoRequest builder] mergeFromCodedInputStream:input] build];
}
+ (QueryPublicInfoRequest*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (QueryPublicInfoRequest*)[[[QueryPublicInfoRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QueryPublicInfoRequest_Builder*) builder {
  return [[[QueryPublicInfoRequest_Builder alloc] init] autorelease];
}
+ (QueryPublicInfoRequest_Builder*) builderWithPrototype:(QueryPublicInfoRequest*) prototype {
  return [[QueryPublicInfoRequest builder] mergeFrom:prototype];
}
- (QueryPublicInfoRequest_Builder*) builder {
  return [QueryPublicInfoRequest builder];
}
- (QueryPublicInfoRequest_Builder*) toBuilder {
  return [QueryPublicInfoRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", [NSNumber numberWithInt:self.type]];
  }
  if (self.hasCityId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cityId", [NSNumber numberWithInt:self.cityId]];
  }
  for (NSNumber* value in self.categoryIdsArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"categoryIds", value];
  }
  if (self.hasKeyword) {
    [output appendFormat:@"%@%@: %@\n", indent, @"keyword", self.keyword];
  }
  if (self.hasStart) {
    [output appendFormat:@"%@%@: %@\n", indent, @"start", [NSNumber numberWithInt:self.start]];
  }
  if (self.hasRows) {
    [output appendFormat:@"%@%@: %@\n", indent, @"rows", [NSNumber numberWithInt:self.rows]];
  }
  for (NSString* element in self.companyIdsArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"companyIds", element];
  }
  if (self.hasMobileNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mobileNum", self.mobileNum];
  }
  if (self.hasImsi) {
    [output appendFormat:@"%@%@: %@\n", indent, @"imsi", self.imsi];
  }
  if (self.hasMobileManufacturer) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mobileManufacturer", self.mobileManufacturer];
  }
  if (self.hasMobileType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mobileType", self.mobileType];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[QueryPublicInfoRequest class]]) {
    return NO;
  }
  QueryPublicInfoRequest *otherMessage = other;
  return
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasCityId == otherMessage.hasCityId &&
      (!self.hasCityId || self.cityId == otherMessage.cityId) &&
      [self.categoryIdsArray isEqualToArray:otherMessage.categoryIdsArray] &&
      self.hasKeyword == otherMessage.hasKeyword &&
      (!self.hasKeyword || [self.keyword isEqual:otherMessage.keyword]) &&
      self.hasStart == otherMessage.hasStart &&
      (!self.hasStart || self.start == otherMessage.start) &&
      self.hasRows == otherMessage.hasRows &&
      (!self.hasRows || self.rows == otherMessage.rows) &&
      [self.companyIdsArray isEqualToArray:otherMessage.companyIdsArray] &&
      self.hasMobileNum == otherMessage.hasMobileNum &&
      (!self.hasMobileNum || [self.mobileNum isEqual:otherMessage.mobileNum]) &&
      self.hasImsi == otherMessage.hasImsi &&
      (!self.hasImsi || [self.imsi isEqual:otherMessage.imsi]) &&
      self.hasMobileManufacturer == otherMessage.hasMobileManufacturer &&
      (!self.hasMobileManufacturer || [self.mobileManufacturer isEqual:otherMessage.mobileManufacturer]) &&
      self.hasMobileType == otherMessage.hasMobileType &&
      (!self.hasMobileType || [self.mobileType isEqual:otherMessage.mobileType]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.type] hash];
  }
  if (self.hasCityId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.cityId] hash];
  }
  for (NSNumber* value in self.categoryIdsArray) {
    hashCode = hashCode * 31 + [value intValue];
  }
  if (self.hasKeyword) {
    hashCode = hashCode * 31 + [self.keyword hash];
  }
  if (self.hasStart) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.start] hash];
  }
  if (self.hasRows) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.rows] hash];
  }
  for (NSString* element in self.companyIdsArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasMobileNum) {
    hashCode = hashCode * 31 + [self.mobileNum hash];
  }
  if (self.hasImsi) {
    hashCode = hashCode * 31 + [self.imsi hash];
  }
  if (self.hasMobileManufacturer) {
    hashCode = hashCode * 31 + [self.mobileManufacturer hash];
  }
  if (self.hasMobileType) {
    hashCode = hashCode * 31 + [self.mobileType hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface QueryPublicInfoRequest_Builder()
@property (retain) QueryPublicInfoRequest* result;
@end

@implementation QueryPublicInfoRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[QueryPublicInfoRequest alloc] init] autorelease];
  }
  return self;
}
- (ES_PBGeneratedMessage*) internalGetResult {
  return result;
}
- (QueryPublicInfoRequest_Builder*) clear {
  self.result = [[[QueryPublicInfoRequest alloc] init] autorelease];
  return self;
}
- (QueryPublicInfoRequest_Builder*) clone {
  return [QueryPublicInfoRequest builderWithPrototype:result];
}
- (QueryPublicInfoRequest*) defaultInstance {
  return [QueryPublicInfoRequest defaultInstance];
}
- (QueryPublicInfoRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (QueryPublicInfoRequest*) buildPartial {
  QueryPublicInfoRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (QueryPublicInfoRequest_Builder*) mergeFrom:(QueryPublicInfoRequest*) other {
  if (other == [QueryPublicInfoRequest defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasCityId) {
    [self setCityId:other.cityId];
  }
  if (other.categoryIdsArray.count > 0) {
    if (result.categoryIdsArray == nil) {
      result.categoryIdsArray = [[other.categoryIdsArray copyWithZone:[other.categoryIdsArray zone]] autorelease];
    } else {
      [result.categoryIdsArray appendArray:other.categoryIdsArray];
    }
  }
  if (other.hasKeyword) {
    [self setKeyword:other.keyword];
  }
  if (other.hasStart) {
    [self setStart:other.start];
  }
  if (other.hasRows) {
    [self setRows:other.rows];
  }
  if (other.companyIdsArray.count > 0) {
    if (result.companyIdsArray == nil) {
      result.companyIdsArray = [[other.companyIdsArray copyWithZone:[other.companyIdsArray zone]] autorelease];
    } else {
      [result.companyIdsArray appendArray:other.companyIdsArray];
    }
  }
  if (other.hasMobileNum) {
    [self setMobileNum:other.mobileNum];
  }
  if (other.hasImsi) {
    [self setImsi:other.imsi];
  }
  if (other.hasMobileManufacturer) {
    [self setMobileManufacturer:other.mobileManufacturer];
  }
  if (other.hasMobileType) {
    [self setMobileType:other.mobileType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (QueryPublicInfoRequest_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[ES_PBExtensionRegistry emptyRegistry]];
}
- (QueryPublicInfoRequest_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  ES_PBUnknownFieldSet_Builder* unknownFields = [ES_PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setType:[input readInt32]];
        break;
      }
      case 16: {
        [self setCityId:[input readInt32]];
        break;
      }
      case 24: {
        [self addCategoryIds:[input readInt32]];
        break;
      }
      case 34: {
        [self setKeyword:[input readString]];
        break;
      }
      case 40: {
        [self setStart:[input readInt32]];
        break;
      }
      case 48: {
        [self setRows:[input readInt32]];
        break;
      }
      case 58: {
        [self addCompanyIds:[input readString]];
        break;
      }
      case 66: {
        [self setMobileNum:[input readString]];
        break;
      }
      case 74: {
        [self setImsi:[input readString]];
        break;
      }
      case 82: {
        [self setMobileManufacturer:[input readString]];
        break;
      }
      case 90: {
        [self setMobileType:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return result.hasType;
}
- (int32_t) type {
  return result.type;
}
- (QueryPublicInfoRequest_Builder*) setType:(int32_t) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (QueryPublicInfoRequest_Builder*) clearType {
  result.hasType = NO;
  result.type = 0;
  return self;
}
- (BOOL) hasCityId {
  return result.hasCityId;
}
- (int32_t) cityId {
  return result.cityId;
}
- (QueryPublicInfoRequest_Builder*) setCityId:(int32_t) value {
  result.hasCityId = YES;
  result.cityId = value;
  return self;
}
- (QueryPublicInfoRequest_Builder*) clearCityId {
  result.hasCityId = NO;
  result.cityId = 0;
  return self;
}
- (ES_PBAppendableArray *)categoryIds {
  return result.categoryIdsArray;
}
- (int32_t)categoryIdsAtIndex:(NSUInteger)index {
  return [result categoryIdsAtIndex:index];
}
- (QueryPublicInfoRequest_Builder *)addCategoryIds:(int32_t)value {
  if (result.categoryIdsArray == nil) {
    result.categoryIdsArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeInt32];
  }
  [result.categoryIdsArray addInt32:value];
  return self;
}
- (QueryPublicInfoRequest_Builder *)setCategoryIdsArray:(NSArray *)array {
  result.categoryIdsArray = [ES_PBAppendableArray arrayWithArray:array valueType:ES_PBArrayValueTypeInt32];
  return self;
}
- (QueryPublicInfoRequest_Builder *)setCategoryIdsValues:(const int32_t *)values count:(NSUInteger)count {
  result.categoryIdsArray = [ES_PBAppendableArray arrayWithValues:values count:count valueType:ES_PBArrayValueTypeInt32];
  return self;
}
- (QueryPublicInfoRequest_Builder *)clearCategoryIds {
  result.categoryIdsArray = nil;
  return self;
}
- (BOOL) hasKeyword {
  return result.hasKeyword;
}
- (NSString*) keyword {
  return result.keyword;
}
- (QueryPublicInfoRequest_Builder*) setKeyword:(NSString*) value {
  result.hasKeyword = YES;
  result.keyword = value;
  return self;
}
- (QueryPublicInfoRequest_Builder*) clearKeyword {
  result.hasKeyword = NO;
  result.keyword = @"";
  return self;
}
- (BOOL) hasStart {
  return result.hasStart;
}
- (int32_t) start {
  return result.start;
}
- (QueryPublicInfoRequest_Builder*) setStart:(int32_t) value {
  result.hasStart = YES;
  result.start = value;
  return self;
}
- (QueryPublicInfoRequest_Builder*) clearStart {
  result.hasStart = NO;
  result.start = 0;
  return self;
}
- (BOOL) hasRows {
  return result.hasRows;
}
- (int32_t) rows {
  return result.rows;
}
- (QueryPublicInfoRequest_Builder*) setRows:(int32_t) value {
  result.hasRows = YES;
  result.rows = value;
  return self;
}
- (QueryPublicInfoRequest_Builder*) clearRows {
  result.hasRows = NO;
  result.rows = 10;
  return self;
}
- (ES_PBAppendableArray *)companyIds {
  return result.companyIdsArray;
}
- (NSString*)companyIdsAtIndex:(NSUInteger)index {
  return [result companyIdsAtIndex:index];
}
- (QueryPublicInfoRequest_Builder *)addCompanyIds:(NSString*)value {
  if (result.companyIdsArray == nil) {
    result.companyIdsArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeObject];
  }
  [result.companyIdsArray addObject:value];
  return self;
}
- (QueryPublicInfoRequest_Builder *)setCompanyIdsArray:(NSArray *)array {
  result.companyIdsArray = [ES_PBAppendableArray arrayWithArray:array valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (QueryPublicInfoRequest_Builder *)setCompanyIdsValues:(const NSString* *)values count:(NSUInteger)count {
  result.companyIdsArray = [ES_PBAppendableArray arrayWithValues:values count:count valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (QueryPublicInfoRequest_Builder *)clearCompanyIds {
  result.companyIdsArray = nil;
  return self;
}
- (BOOL) hasMobileNum {
  return result.hasMobileNum;
}
- (NSString*) mobileNum {
  return result.mobileNum;
}
- (QueryPublicInfoRequest_Builder*) setMobileNum:(NSString*) value {
  result.hasMobileNum = YES;
  result.mobileNum = value;
  return self;
}
- (QueryPublicInfoRequest_Builder*) clearMobileNum {
  result.hasMobileNum = NO;
  result.mobileNum = @"";
  return self;
}
- (BOOL) hasImsi {
  return result.hasImsi;
}
- (NSString*) imsi {
  return result.imsi;
}
- (QueryPublicInfoRequest_Builder*) setImsi:(NSString*) value {
  result.hasImsi = YES;
  result.imsi = value;
  return self;
}
- (QueryPublicInfoRequest_Builder*) clearImsi {
  result.hasImsi = NO;
  result.imsi = @"";
  return self;
}
- (BOOL) hasMobileManufacturer {
  return result.hasMobileManufacturer;
}
- (NSString*) mobileManufacturer {
  return result.mobileManufacturer;
}
- (QueryPublicInfoRequest_Builder*) setMobileManufacturer:(NSString*) value {
  result.hasMobileManufacturer = YES;
  result.mobileManufacturer = value;
  return self;
}
- (QueryPublicInfoRequest_Builder*) clearMobileManufacturer {
  result.hasMobileManufacturer = NO;
  result.mobileManufacturer = @"";
  return self;
}
- (BOOL) hasMobileType {
  return result.hasMobileType;
}
- (NSString*) mobileType {
  return result.mobileType;
}
- (QueryPublicInfoRequest_Builder*) setMobileType:(NSString*) value {
  result.hasMobileType = YES;
  result.mobileType = value;
  return self;
}
- (QueryPublicInfoRequest_Builder*) clearMobileType {
  result.hasMobileType = NO;
  result.mobileType = @"";
  return self;
}
@end

@interface QueryPublicInfoResponse ()
@property int32_t status;
@property int64_t numfound;
@property (retain) ES_PBAppendableArray * citiesArray;
@property (retain) ES_PBAppendableArray * categoriesArray;
@property (retain) ES_PBAppendableArray * companiesArray;
@end

@implementation QueryPublicInfoResponse

- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (BOOL) hasNumfound {
  return !!hasNumfound_;
}
- (void) setHasNumfound:(BOOL) value_ {
  hasNumfound_ = !!value_;
}
@synthesize numfound;
@synthesize citiesArray;
@dynamic cities;
@synthesize categoriesArray;
@dynamic categories;
@synthesize companiesArray;
@dynamic companies;
- (void) dealloc {
  self.citiesArray = nil;
  self.categoriesArray = nil;
  self.companiesArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.status = 0;
    self.numfound = 0L;
  }
  return self;
}
static QueryPublicInfoResponse* defaultQueryPublicInfoResponseInstance = nil;
+ (void) initialize {
  if (self == [QueryPublicInfoResponse class]) {
    defaultQueryPublicInfoResponseInstance = [[QueryPublicInfoResponse alloc] init];
  }
}
+ (QueryPublicInfoResponse*) defaultInstance {
  return defaultQueryPublicInfoResponseInstance;
}
- (QueryPublicInfoResponse*) defaultInstance {
  return defaultQueryPublicInfoResponseInstance;
}
- (ES_PBArray *)cities {
  return citiesArray;
}
- (QCity*)citiesAtIndex:(NSUInteger)index {
  return [citiesArray objectAtIndex:index];
}
- (ES_PBArray *)categories {
  return categoriesArray;
}
- (QCategory*)categoriesAtIndex:(NSUInteger)index {
  return [categoriesArray objectAtIndex:index];
}
- (ES_PBArray *)companies {
  return companiesArray;
}
- (QCompany*)companiesAtIndex:(NSUInteger)index {
  return [companiesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasStatus) {
    return NO;
  }
  if (!self.hasNumfound) {
    return NO;
  }
  for (QCity* element in self.cities) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (QCompany* element in self.companies) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(ES_PBCodedOutputStream*) output {
  if (self.hasStatus) {
    [output writeInt32:1 value:self.status];
  }
  if (self.hasNumfound) {
    [output writeInt64:2 value:self.numfound];
  }
  for (QCity *element in self.citiesArray) {
    [output writeMessage:3 value:element];
  }
  for (QCategory *element in self.categoriesArray) {
    [output writeMessage:4 value:element];
  }
  for (QCompany *element in self.companiesArray) {
    [output writeMessage:5 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStatus) {
    size_ += ES_computeInt32Size(1, self.status);
  }
  if (self.hasNumfound) {
    size_ += ES_computeInt64Size(2, self.numfound);
  }
  for (QCity *element in self.citiesArray) {
    size_ += ES_computeMessageSize(3, element);
  }
  for (QCategory *element in self.categoriesArray) {
    size_ += ES_computeMessageSize(4, element);
  }
  for (QCompany *element in self.companiesArray) {
    size_ += ES_computeMessageSize(5, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (QueryPublicInfoResponse*) parseFromData:(NSData*) data {
  return (QueryPublicInfoResponse*)[[[QueryPublicInfoResponse builder] mergeFromData:data] build];
}
+ (QueryPublicInfoResponse*) parseFromData:(NSData*) data extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (QueryPublicInfoResponse*)[[[QueryPublicInfoResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (QueryPublicInfoResponse*) parseFromInputStream:(NSInputStream*) input {
  return (QueryPublicInfoResponse*)[[[QueryPublicInfoResponse builder] mergeFromInputStream:input] build];
}
+ (QueryPublicInfoResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (QueryPublicInfoResponse*)[[[QueryPublicInfoResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QueryPublicInfoResponse*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return (QueryPublicInfoResponse*)[[[QueryPublicInfoResponse builder] mergeFromCodedInputStream:input] build];
}
+ (QueryPublicInfoResponse*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (QueryPublicInfoResponse*)[[[QueryPublicInfoResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QueryPublicInfoResponse_Builder*) builder {
  return [[[QueryPublicInfoResponse_Builder alloc] init] autorelease];
}
+ (QueryPublicInfoResponse_Builder*) builderWithPrototype:(QueryPublicInfoResponse*) prototype {
  return [[QueryPublicInfoResponse builder] mergeFrom:prototype];
}
- (QueryPublicInfoResponse_Builder*) builder {
  return [QueryPublicInfoResponse builder];
}
- (QueryPublicInfoResponse_Builder*) toBuilder {
  return [QueryPublicInfoResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInt:self.status]];
  }
  if (self.hasNumfound) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numfound", [NSNumber numberWithLongLong:self.numfound]];
  }
  for (QCity* element in self.citiesArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"cities"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (QCategory* element in self.categoriesArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"categories"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (QCompany* element in self.companiesArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"companies"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[QueryPublicInfoResponse class]]) {
    return NO;
  }
  QueryPublicInfoResponse *otherMessage = other;
  return
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasNumfound == otherMessage.hasNumfound &&
      (!self.hasNumfound || self.numfound == otherMessage.numfound) &&
      [self.citiesArray isEqualToArray:otherMessage.citiesArray] &&
      [self.categoriesArray isEqualToArray:otherMessage.categoriesArray] &&
      [self.companiesArray isEqualToArray:otherMessage.companiesArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.status] hash];
  }
  if (self.hasNumfound) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.numfound] hash];
  }
  for (QCity* element in self.citiesArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (QCategory* element in self.categoriesArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (QCompany* element in self.companiesArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface QueryPublicInfoResponse_Builder()
@property (retain) QueryPublicInfoResponse* result;
@end

@implementation QueryPublicInfoResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[QueryPublicInfoResponse alloc] init] autorelease];
  }
  return self;
}
- (ES_PBGeneratedMessage*) internalGetResult {
  return result;
}
- (QueryPublicInfoResponse_Builder*) clear {
  self.result = [[[QueryPublicInfoResponse alloc] init] autorelease];
  return self;
}
- (QueryPublicInfoResponse_Builder*) clone {
  return [QueryPublicInfoResponse builderWithPrototype:result];
}
- (QueryPublicInfoResponse*) defaultInstance {
  return [QueryPublicInfoResponse defaultInstance];
}
- (QueryPublicInfoResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (QueryPublicInfoResponse*) buildPartial {
  QueryPublicInfoResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (QueryPublicInfoResponse_Builder*) mergeFrom:(QueryPublicInfoResponse*) other {
  if (other == [QueryPublicInfoResponse defaultInstance]) {
    return self;
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasNumfound) {
    [self setNumfound:other.numfound];
  }
  if (other.citiesArray.count > 0) {
    if (result.citiesArray == nil) {
      result.citiesArray = [[other.citiesArray copyWithZone:[other.citiesArray zone]] autorelease];
    } else {
      [result.citiesArray appendArray:other.citiesArray];
    }
  }
  if (other.categoriesArray.count > 0) {
    if (result.categoriesArray == nil) {
      result.categoriesArray = [[other.categoriesArray copyWithZone:[other.categoriesArray zone]] autorelease];
    } else {
      [result.categoriesArray appendArray:other.categoriesArray];
    }
  }
  if (other.companiesArray.count > 0) {
    if (result.companiesArray == nil) {
      result.companiesArray = [[other.companiesArray copyWithZone:[other.companiesArray zone]] autorelease];
    } else {
      [result.companiesArray appendArray:other.companiesArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (QueryPublicInfoResponse_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[ES_PBExtensionRegistry emptyRegistry]];
}
- (QueryPublicInfoResponse_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  ES_PBUnknownFieldSet_Builder* unknownFields = [ES_PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setStatus:[input readInt32]];
        break;
      }
      case 16: {
        [self setNumfound:[input readInt64]];
        break;
      }
      case 26: {
        QCity_Builder* subBuilder = [QCity builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCities:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        QCategory_Builder* subBuilder = [QCategory builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCategories:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        QCompany_Builder* subBuilder = [QCompany builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCompanies:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (int32_t) status {
  return result.status;
}
- (QueryPublicInfoResponse_Builder*) setStatus:(int32_t) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (QueryPublicInfoResponse_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = 0;
  return self;
}
- (BOOL) hasNumfound {
  return result.hasNumfound;
}
- (int64_t) numfound {
  return result.numfound;
}
- (QueryPublicInfoResponse_Builder*) setNumfound:(int64_t) value {
  result.hasNumfound = YES;
  result.numfound = value;
  return self;
}
- (QueryPublicInfoResponse_Builder*) clearNumfound {
  result.hasNumfound = NO;
  result.numfound = 0L;
  return self;
}
- (ES_PBAppendableArray *)cities {
  return result.citiesArray;
}
- (QCity*)citiesAtIndex:(NSUInteger)index {
  return [result citiesAtIndex:index];
}
- (QueryPublicInfoResponse_Builder *)addCities:(QCity*)value {
  if (result.citiesArray == nil) {
    result.citiesArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeObject];
  }
  [result.citiesArray addObject:value];
  return self;
}
- (QueryPublicInfoResponse_Builder *)setCitiesArray:(NSArray *)array {
  result.citiesArray = [ES_PBAppendableArray arrayWithArray:array valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (QueryPublicInfoResponse_Builder *)setCitiesValues:(const QCity* *)values count:(NSUInteger)count {
  result.citiesArray = [ES_PBAppendableArray arrayWithValues:values count:count valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (QueryPublicInfoResponse_Builder *)clearCities {
  result.citiesArray = nil;
  return self;
}
- (ES_PBAppendableArray *)categories {
  return result.categoriesArray;
}
- (QCategory*)categoriesAtIndex:(NSUInteger)index {
  return [result categoriesAtIndex:index];
}
- (QueryPublicInfoResponse_Builder *)addCategories:(QCategory*)value {
  if (result.categoriesArray == nil) {
    result.categoriesArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeObject];
  }
  [result.categoriesArray addObject:value];
  return self;
}
- (QueryPublicInfoResponse_Builder *)setCategoriesArray:(NSArray *)array {
  result.categoriesArray = [ES_PBAppendableArray arrayWithArray:array valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (QueryPublicInfoResponse_Builder *)setCategoriesValues:(const QCategory* *)values count:(NSUInteger)count {
  result.categoriesArray = [ES_PBAppendableArray arrayWithValues:values count:count valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (QueryPublicInfoResponse_Builder *)clearCategories {
  result.categoriesArray = nil;
  return self;
}
- (ES_PBAppendableArray *)companies {
  return result.companiesArray;
}
- (QCompany*)companiesAtIndex:(NSUInteger)index {
  return [result companiesAtIndex:index];
}
- (QueryPublicInfoResponse_Builder *)addCompanies:(QCompany*)value {
  if (result.companiesArray == nil) {
    result.companiesArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeObject];
  }
  [result.companiesArray addObject:value];
  return self;
}
- (QueryPublicInfoResponse_Builder *)setCompaniesArray:(NSArray *)array {
  result.companiesArray = [ES_PBAppendableArray arrayWithArray:array valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (QueryPublicInfoResponse_Builder *)setCompaniesValues:(const QCompany* *)values count:(NSUInteger)count {
  result.companiesArray = [ES_PBAppendableArray arrayWithValues:values count:count valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (QueryPublicInfoResponse_Builder *)clearCompanies {
  result.companiesArray = nil;
  return self;
}
@end

