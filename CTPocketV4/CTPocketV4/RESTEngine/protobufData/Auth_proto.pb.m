// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Auth_proto.pb.h"

@implementation AuthProtoRoot
static ES_PBExtensionRegistry* extensionRegistry = nil;
+ (ES_PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [AuthProtoRoot class]) {
    ES_PBMutableExtensionRegistry* registry = [ES_PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(ES_PBMutableExtensionRegistry*) registry {
}
@end

BOOL AuthMethodIsValidValue(AuthMethod value) {
  switch (value) {
    case AuthMethodImsi:
    case AuthMethodCtpassport:
    case AuthMethodMdn:
    case AuthMethodSurfingtoken:
      return YES;
    default:
      return NO;
  }
}
@interface AuthRequest ()
@property AuthMethod method;
@property (retain) NSString* account;
@property (retain) NSString* password;
@property (retain) NSString* verifySign;
@end

@implementation AuthRequest

- (BOOL) hasMethod {
  return !!hasMethod_;
}
- (void) setHasMethod:(BOOL) value_ {
  hasMethod_ = !!value_;
}
@synthesize method;
- (BOOL) hasAccount {
  return !!hasAccount_;
}
- (void) setHasAccount:(BOOL) value_ {
  hasAccount_ = !!value_;
}
@synthesize account;
- (BOOL) hasPassword {
  return !!hasPassword_;
}
- (void) setHasPassword:(BOOL) value_ {
  hasPassword_ = !!value_;
}
@synthesize password;
- (BOOL) hasVerifySign {
  return !!hasVerifySign_;
}
- (void) setHasVerifySign:(BOOL) value_ {
  hasVerifySign_ = !!value_;
}
@synthesize verifySign;
- (void) dealloc {
  self.account = nil;
  self.password = nil;
  self.verifySign = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.method = AuthMethodImsi;
    self.account = @"";
    self.password = @"";
    self.verifySign = @"";
  }
  return self;
}
static AuthRequest* defaultAuthRequestInstance = nil;
+ (void) initialize {
  if (self == [AuthRequest class]) {
    defaultAuthRequestInstance = [[AuthRequest alloc] init];
  }
}
+ (AuthRequest*) defaultInstance {
  return defaultAuthRequestInstance;
}
- (AuthRequest*) defaultInstance {
  return defaultAuthRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasMethod) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(ES_PBCodedOutputStream*) output {
  if (self.hasMethod) {
    [output writeEnum:1 value:self.method];
  }
  if (self.hasAccount) {
    [output writeString:2 value:self.account];
  }
  if (self.hasPassword) {
    [output writeString:3 value:self.password];
  }
  if (self.hasVerifySign) {
    [output writeString:4 value:self.verifySign];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMethod) {
    size_ += ES_computeEnumSize(1, self.method);
  }
  if (self.hasAccount) {
    size_ += ES_computeStringSize(2, self.account);
  }
  if (self.hasPassword) {
    size_ += ES_computeStringSize(3, self.password);
  }
  if (self.hasVerifySign) {
    size_ += ES_computeStringSize(4, self.verifySign);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AuthRequest*) parseFromData:(NSData*) data {
  return (AuthRequest*)[[[AuthRequest builder] mergeFromData:data] build];
}
+ (AuthRequest*) parseFromData:(NSData*) data extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (AuthRequest*)[[[AuthRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AuthRequest*) parseFromInputStream:(NSInputStream*) input {
  return (AuthRequest*)[[[AuthRequest builder] mergeFromInputStream:input] build];
}
+ (AuthRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (AuthRequest*)[[[AuthRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AuthRequest*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return (AuthRequest*)[[[AuthRequest builder] mergeFromCodedInputStream:input] build];
}
+ (AuthRequest*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (AuthRequest*)[[[AuthRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AuthRequest_Builder*) builder {
  return [[[AuthRequest_Builder alloc] init] autorelease];
}
+ (AuthRequest_Builder*) builderWithPrototype:(AuthRequest*) prototype {
  return [[AuthRequest builder] mergeFrom:prototype];
}
- (AuthRequest_Builder*) builder {
  return [AuthRequest builder];
}
- (AuthRequest_Builder*) toBuilder {
  return [AuthRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMethod) {
    [output appendFormat:@"%@%@: %d\n", indent, @"method", self.method];
  }
  if (self.hasAccount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"account", self.account];
  }
  if (self.hasPassword) {
    [output appendFormat:@"%@%@: %@\n", indent, @"password", self.password];
  }
  if (self.hasVerifySign) {
    [output appendFormat:@"%@%@: %@\n", indent, @"verifySign", self.verifySign];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AuthRequest class]]) {
    return NO;
  }
  AuthRequest *otherMessage = other;
  return
      self.hasMethod == otherMessage.hasMethod &&
      (!self.hasMethod || self.method == otherMessage.method) &&
      self.hasAccount == otherMessage.hasAccount &&
      (!self.hasAccount || [self.account isEqual:otherMessage.account]) &&
      self.hasPassword == otherMessage.hasPassword &&
      (!self.hasPassword || [self.password isEqual:otherMessage.password]) &&
      self.hasVerifySign == otherMessage.hasVerifySign &&
      (!self.hasVerifySign || [self.verifySign isEqual:otherMessage.verifySign]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasMethod) {
    hashCode = hashCode * 31 + self.method;
  }
  if (self.hasAccount) {
    hashCode = hashCode * 31 + [self.account hash];
  }
  if (self.hasPassword) {
    hashCode = hashCode * 31 + [self.password hash];
  }
  if (self.hasVerifySign) {
    hashCode = hashCode * 31 + [self.verifySign hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface AuthRequest_Builder()
@property (retain) AuthRequest* result;
@end

@implementation AuthRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[AuthRequest alloc] init] autorelease];
  }
  return self;
}
- (ES_PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AuthRequest_Builder*) clear {
  self.result = [[[AuthRequest alloc] init] autorelease];
  return self;
}
- (AuthRequest_Builder*) clone {
  return [AuthRequest builderWithPrototype:result];
}
- (AuthRequest*) defaultInstance {
  return [AuthRequest defaultInstance];
}
- (AuthRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AuthRequest*) buildPartial {
  AuthRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (AuthRequest_Builder*) mergeFrom:(AuthRequest*) other {
  if (other == [AuthRequest defaultInstance]) {
    return self;
  }
  if (other.hasMethod) {
    [self setMethod:other.method];
  }
  if (other.hasAccount) {
    [self setAccount:other.account];
  }
  if (other.hasPassword) {
    [self setPassword:other.password];
  }
  if (other.hasVerifySign) {
    [self setVerifySign:other.verifySign];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AuthRequest_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[ES_PBExtensionRegistry emptyRegistry]];
}
- (AuthRequest_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  ES_PBUnknownFieldSet_Builder* unknownFields = [ES_PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        int32_t value = [input readEnum];
        if (AuthMethodIsValidValue(value)) {
          [self setMethod:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 18: {
        [self setAccount:[input readString]];
        break;
      }
      case 26: {
        [self setPassword:[input readString]];
        break;
      }
      case 34: {
        [self setVerifySign:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasMethod {
  return result.hasMethod;
}
- (AuthMethod) method {
  return result.method;
}
- (AuthRequest_Builder*) setMethod:(AuthMethod) value {
  result.hasMethod = YES;
  result.method = value;
  return self;
}
- (AuthRequest_Builder*) clearMethod {
  result.hasMethod = NO;
  result.method = AuthMethodImsi;
  return self;
}
- (BOOL) hasAccount {
  return result.hasAccount;
}
- (NSString*) account {
  return result.account;
}
- (AuthRequest_Builder*) setAccount:(NSString*) value {
  result.hasAccount = YES;
  result.account = value;
  return self;
}
- (AuthRequest_Builder*) clearAccount {
  result.hasAccount = NO;
  result.account = @"";
  return self;
}
- (BOOL) hasPassword {
  return result.hasPassword;
}
- (NSString*) password {
  return result.password;
}
- (AuthRequest_Builder*) setPassword:(NSString*) value {
  result.hasPassword = YES;
  result.password = value;
  return self;
}
- (AuthRequest_Builder*) clearPassword {
  result.hasPassword = NO;
  result.password = @"";
  return self;
}
- (BOOL) hasVerifySign {
  return result.hasVerifySign;
}
- (NSString*) verifySign {
  return result.verifySign;
}
- (AuthRequest_Builder*) setVerifySign:(NSString*) value {
  result.hasVerifySign = YES;
  result.verifySign = value;
  return self;
}
- (AuthRequest_Builder*) clearVerifySign {
  result.hasVerifySign = NO;
  result.verifySign = @"";
  return self;
}
@end

@interface AuthResponse ()
@property (retain) NSString* token;
@property uint32_t tokenExpires;
@property (retain) NSString* pUserId;
@property int64_t syncUserId;
@property (retain) NSString* mobileNum;
@end

@implementation AuthResponse

- (BOOL) hasToken {
  return !!hasToken_;
}
- (void) setHasToken:(BOOL) value_ {
  hasToken_ = !!value_;
}
@synthesize token;
- (BOOL) hasTokenExpires {
  return !!hasTokenExpires_;
}
- (void) setHasTokenExpires:(BOOL) value_ {
  hasTokenExpires_ = !!value_;
}
@synthesize tokenExpires;
- (BOOL) hasPUserId {
  return !!hasPUserId_;
}
- (void) setHasPUserId:(BOOL) value_ {
  hasPUserId_ = !!value_;
}
@synthesize pUserId;
- (BOOL) hasSyncUserId {
  return !!hasSyncUserId_;
}
- (void) setHasSyncUserId:(BOOL) value_ {
  hasSyncUserId_ = !!value_;
}
@synthesize syncUserId;
- (BOOL) hasMobileNum {
  return !!hasMobileNum_;
}
- (void) setHasMobileNum:(BOOL) value_ {
  hasMobileNum_ = !!value_;
}
@synthesize mobileNum;
- (void) dealloc {
  self.token = nil;
  self.pUserId = nil;
  self.mobileNum = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.token = @"";
    self.tokenExpires = 0;
    self.pUserId = @"";
    self.syncUserId = 0L;
    self.mobileNum = @"";
  }
  return self;
}
static AuthResponse* defaultAuthResponseInstance = nil;
+ (void) initialize {
  if (self == [AuthResponse class]) {
    defaultAuthResponseInstance = [[AuthResponse alloc] init];
  }
}
+ (AuthResponse*) defaultInstance {
  return defaultAuthResponseInstance;
}
- (AuthResponse*) defaultInstance {
  return defaultAuthResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasToken) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(ES_PBCodedOutputStream*) output {
  if (self.hasToken) {
    [output writeString:1 value:self.token];
  }
  if (self.hasTokenExpires) {
    [output writeUInt32:2 value:self.tokenExpires];
  }
  if (self.hasPUserId) {
    [output writeString:3 value:self.pUserId];
  }
  if (self.hasSyncUserId) {
    [output writeInt64:4 value:self.syncUserId];
  }
  if (self.hasMobileNum) {
    [output writeString:5 value:self.mobileNum];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasToken) {
    size_ += ES_computeStringSize(1, self.token);
  }
  if (self.hasTokenExpires) {
    size_ += ES_computeUInt32Size(2, self.tokenExpires);
  }
  if (self.hasPUserId) {
    size_ += ES_computeStringSize(3, self.pUserId);
  }
  if (self.hasSyncUserId) {
    size_ += ES_computeInt64Size(4, self.syncUserId);
  }
  if (self.hasMobileNum) {
    size_ += ES_computeStringSize(5, self.mobileNum);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AuthResponse*) parseFromData:(NSData*) data {
  return (AuthResponse*)[[[AuthResponse builder] mergeFromData:data] build];
}
+ (AuthResponse*) parseFromData:(NSData*) data extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (AuthResponse*)[[[AuthResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AuthResponse*) parseFromInputStream:(NSInputStream*) input {
  return (AuthResponse*)[[[AuthResponse builder] mergeFromInputStream:input] build];
}
+ (AuthResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (AuthResponse*)[[[AuthResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AuthResponse*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return (AuthResponse*)[[[AuthResponse builder] mergeFromCodedInputStream:input] build];
}
+ (AuthResponse*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (AuthResponse*)[[[AuthResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AuthResponse_Builder*) builder {
  return [[[AuthResponse_Builder alloc] init] autorelease];
}
+ (AuthResponse_Builder*) builderWithPrototype:(AuthResponse*) prototype {
  return [[AuthResponse builder] mergeFrom:prototype];
}
- (AuthResponse_Builder*) builder {
  return [AuthResponse builder];
}
- (AuthResponse_Builder*) toBuilder {
  return [AuthResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasToken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"token", self.token];
  }
  if (self.hasTokenExpires) {
    [output appendFormat:@"%@%@: %@\n", indent, @"tokenExpires", [NSNumber numberWithInt:self.tokenExpires]];
  }
  if (self.hasPUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pUserId", self.pUserId];
  }
  if (self.hasSyncUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"syncUserId", [NSNumber numberWithLongLong:self.syncUserId]];
  }
  if (self.hasMobileNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mobileNum", self.mobileNum];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AuthResponse class]]) {
    return NO;
  }
  AuthResponse *otherMessage = other;
  return
      self.hasToken == otherMessage.hasToken &&
      (!self.hasToken || [self.token isEqual:otherMessage.token]) &&
      self.hasTokenExpires == otherMessage.hasTokenExpires &&
      (!self.hasTokenExpires || self.tokenExpires == otherMessage.tokenExpires) &&
      self.hasPUserId == otherMessage.hasPUserId &&
      (!self.hasPUserId || [self.pUserId isEqual:otherMessage.pUserId]) &&
      self.hasSyncUserId == otherMessage.hasSyncUserId &&
      (!self.hasSyncUserId || self.syncUserId == otherMessage.syncUserId) &&
      self.hasMobileNum == otherMessage.hasMobileNum &&
      (!self.hasMobileNum || [self.mobileNum isEqual:otherMessage.mobileNum]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasToken) {
    hashCode = hashCode * 31 + [self.token hash];
  }
  if (self.hasTokenExpires) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.tokenExpires] hash];
  }
  if (self.hasPUserId) {
    hashCode = hashCode * 31 + [self.pUserId hash];
  }
  if (self.hasSyncUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.syncUserId] hash];
  }
  if (self.hasMobileNum) {
    hashCode = hashCode * 31 + [self.mobileNum hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface AuthResponse_Builder()
@property (retain) AuthResponse* result;
@end

@implementation AuthResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[AuthResponse alloc] init] autorelease];
  }
  return self;
}
- (ES_PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AuthResponse_Builder*) clear {
  self.result = [[[AuthResponse alloc] init] autorelease];
  return self;
}
- (AuthResponse_Builder*) clone {
  return [AuthResponse builderWithPrototype:result];
}
- (AuthResponse*) defaultInstance {
  return [AuthResponse defaultInstance];
}
- (AuthResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AuthResponse*) buildPartial {
  AuthResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (AuthResponse_Builder*) mergeFrom:(AuthResponse*) other {
  if (other == [AuthResponse defaultInstance]) {
    return self;
  }
  if (other.hasToken) {
    [self setToken:other.token];
  }
  if (other.hasTokenExpires) {
    [self setTokenExpires:other.tokenExpires];
  }
  if (other.hasPUserId) {
    [self setPUserId:other.pUserId];
  }
  if (other.hasSyncUserId) {
    [self setSyncUserId:other.syncUserId];
  }
  if (other.hasMobileNum) {
    [self setMobileNum:other.mobileNum];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AuthResponse_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[ES_PBExtensionRegistry emptyRegistry]];
}
- (AuthResponse_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  ES_PBUnknownFieldSet_Builder* unknownFields = [ES_PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setToken:[input readString]];
        break;
      }
      case 16: {
        [self setTokenExpires:[input readUInt32]];
        break;
      }
      case 26: {
        [self setPUserId:[input readString]];
        break;
      }
      case 32: {
        [self setSyncUserId:[input readInt64]];
        break;
      }
      case 42: {
        [self setMobileNum:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasToken {
  return result.hasToken;
}
- (NSString*) token {
  return result.token;
}
- (AuthResponse_Builder*) setToken:(NSString*) value {
  result.hasToken = YES;
  result.token = value;
  return self;
}
- (AuthResponse_Builder*) clearToken {
  result.hasToken = NO;
  result.token = @"";
  return self;
}
- (BOOL) hasTokenExpires {
  return result.hasTokenExpires;
}
- (uint32_t) tokenExpires {
  return result.tokenExpires;
}
- (AuthResponse_Builder*) setTokenExpires:(uint32_t) value {
  result.hasTokenExpires = YES;
  result.tokenExpires = value;
  return self;
}
- (AuthResponse_Builder*) clearTokenExpires {
  result.hasTokenExpires = NO;
  result.tokenExpires = 0;
  return self;
}
- (BOOL) hasPUserId {
  return result.hasPUserId;
}
- (NSString*) pUserId {
  return result.pUserId;
}
- (AuthResponse_Builder*) setPUserId:(NSString*) value {
  result.hasPUserId = YES;
  result.pUserId = value;
  return self;
}
- (AuthResponse_Builder*) clearPUserId {
  result.hasPUserId = NO;
  result.pUserId = @"";
  return self;
}
- (BOOL) hasSyncUserId {
  return result.hasSyncUserId;
}
- (int64_t) syncUserId {
  return result.syncUserId;
}
- (AuthResponse_Builder*) setSyncUserId:(int64_t) value {
  result.hasSyncUserId = YES;
  result.syncUserId = value;
  return self;
}
- (AuthResponse_Builder*) clearSyncUserId {
  result.hasSyncUserId = NO;
  result.syncUserId = 0L;
  return self;
}
- (BOOL) hasMobileNum {
  return result.hasMobileNum;
}
- (NSString*) mobileNum {
  return result.mobileNum;
}
- (AuthResponse_Builder*) setMobileNum:(NSString*) value {
  result.hasMobileNum = YES;
  result.mobileNum = value;
  return self;
}
- (AuthResponse_Builder*) clearMobileNum {
  result.hasMobileNum = NO;
  result.mobileNum = @"";
  return self;
}
@end

