// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Get_contact_list_summary_proto.pb.h"

@implementation GetContactListSummaryProtoRoot
static ES_PBExtensionRegistry* extensionRegistry = nil;
+ (ES_PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [GetContactListSummaryProtoRoot class]) {
    ES_PBMutableExtensionRegistry* registry = [ES_PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(ES_PBMutableExtensionRegistry*) registry {
}
@end

@interface ContactListSummaryResponse ()
@property (retain) ES_PBAppendableArray * contactSummaryArray;
@property (retain) ES_PBAppendableArray * groupSummaryArray;
@property int32_t contactListVersion;
@property (retain) ES_PBAppendableArray * contactVersionArray;
@property (retain) ES_PBAppendableArray * groupVersionArray;
@property int32_t businessCardVersion;
@end

@implementation ContactListSummaryResponse

@synthesize contactSummaryArray;
@dynamic contactSummary;
@synthesize groupSummaryArray;
@dynamic groupSummary;
- (BOOL) hasContactListVersion {
  return !!hasContactListVersion_;
}
- (void) setHasContactListVersion:(BOOL) value_ {
  hasContactListVersion_ = !!value_;
}
@synthesize contactListVersion;
@synthesize contactVersionArray;
@dynamic contactVersion;
@synthesize groupVersionArray;
@dynamic groupVersion;
- (BOOL) hasBusinessCardVersion {
  return !!hasBusinessCardVersion_;
}
- (void) setHasBusinessCardVersion:(BOOL) value_ {
  hasBusinessCardVersion_ = !!value_;
}
@synthesize businessCardVersion;
- (void) dealloc {
  self.contactSummaryArray = nil;
  self.groupSummaryArray = nil;
  self.contactVersionArray = nil;
  self.groupVersionArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.contactListVersion = 0;
    self.businessCardVersion = 0;
  }
  return self;
}
static ContactListSummaryResponse* defaultContactListSummaryResponseInstance = nil;
+ (void) initialize {
  if (self == [ContactListSummaryResponse class]) {
    defaultContactListSummaryResponseInstance = [[ContactListSummaryResponse alloc] init];
  }
}
+ (ContactListSummaryResponse*) defaultInstance {
  return defaultContactListSummaryResponseInstance;
}
- (ContactListSummaryResponse*) defaultInstance {
  return defaultContactListSummaryResponseInstance;
}
- (ES_PBArray *)contactSummary {
  return contactSummaryArray;
}
- (int32_t)contactSummaryAtIndex:(NSUInteger)index {
  return [contactSummaryArray int32AtIndex:index];
}
- (ES_PBArray *)groupSummary {
  return groupSummaryArray;
}
- (int32_t)groupSummaryAtIndex:(NSUInteger)index {
  return [groupSummaryArray int32AtIndex:index];
}
- (ES_PBArray *)contactVersion {
  return contactVersionArray;
}
- (int32_t)contactVersionAtIndex:(NSUInteger)index {
  return [contactVersionArray int32AtIndex:index];
}
- (ES_PBArray *)groupVersion {
  return groupVersionArray;
}
- (int32_t)groupVersionAtIndex:(NSUInteger)index {
  return [groupVersionArray int32AtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(ES_PBCodedOutputStream*) output {
  const NSUInteger contactSummaryArrayCount = self.contactSummaryArray.count;
  if (contactSummaryArrayCount > 0) {
    const int32_t *values = (const int32_t *)self.contactSummaryArray.data;
    [output writeRawVarint32:10];
    [output writeRawVarint32:contactSummaryMemoizedSerializedSize];
    for (NSUInteger i = 0; i < contactSummaryArrayCount; ++i) {
      [output writeInt32NoTag:values[i]];
    }
  }
  const NSUInteger groupSummaryArrayCount = self.groupSummaryArray.count;
  if (groupSummaryArrayCount > 0) {
    const int32_t *values = (const int32_t *)self.groupSummaryArray.data;
    [output writeRawVarint32:18];
    [output writeRawVarint32:groupSummaryMemoizedSerializedSize];
    for (NSUInteger i = 0; i < groupSummaryArrayCount; ++i) {
      [output writeInt32NoTag:values[i]];
    }
  }
  if (self.hasContactListVersion) {
    [output writeInt32:3 value:self.contactListVersion];
  }
  const NSUInteger contactVersionArrayCount = self.contactVersionArray.count;
  if (contactVersionArrayCount > 0) {
    const int32_t *values = (const int32_t *)self.contactVersionArray.data;
    [output writeRawVarint32:34];
    [output writeRawVarint32:contactVersionMemoizedSerializedSize];
    for (NSUInteger i = 0; i < contactVersionArrayCount; ++i) {
      [output writeInt32NoTag:values[i]];
    }
  }
  const NSUInteger groupVersionArrayCount = self.groupVersionArray.count;
  if (groupVersionArrayCount > 0) {
    const int32_t *values = (const int32_t *)self.groupVersionArray.data;
    [output writeRawVarint32:42];
    [output writeRawVarint32:groupVersionMemoizedSerializedSize];
    for (NSUInteger i = 0; i < groupVersionArrayCount; ++i) {
      [output writeInt32NoTag:values[i]];
    }
  }
  if (self.hasBusinessCardVersion) {
    [output writeInt32:6 value:self.businessCardVersion];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.contactSummaryArray.count;
    const int32_t *values = (const int32_t *)self.contactSummaryArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += ES_computeInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    if (count > 0) {
      size_ += 1;
      size_ += ES_computeInt32SizeNoTag(dataSize);
    }
    contactSummaryMemoizedSerializedSize = dataSize;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.groupSummaryArray.count;
    const int32_t *values = (const int32_t *)self.groupSummaryArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += ES_computeInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    if (count > 0) {
      size_ += 1;
      size_ += ES_computeInt32SizeNoTag(dataSize);
    }
    groupSummaryMemoizedSerializedSize = dataSize;
  }
  if (self.hasContactListVersion) {
    size_ += ES_computeInt32Size(3, self.contactListVersion);
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.contactVersionArray.count;
    const int32_t *values = (const int32_t *)self.contactVersionArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += ES_computeInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    if (count > 0) {
      size_ += 1;
      size_ += ES_computeInt32SizeNoTag(dataSize);
    }
    contactVersionMemoizedSerializedSize = dataSize;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.groupVersionArray.count;
    const int32_t *values = (const int32_t *)self.groupVersionArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += ES_computeInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    if (count > 0) {
      size_ += 1;
      size_ += ES_computeInt32SizeNoTag(dataSize);
    }
    groupVersionMemoizedSerializedSize = dataSize;
  }
  if (self.hasBusinessCardVersion) {
    size_ += ES_computeInt32Size(6, self.businessCardVersion);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ContactListSummaryResponse*) parseFromData:(NSData*) data {
  return (ContactListSummaryResponse*)[[[ContactListSummaryResponse builder] mergeFromData:data] build];
}
+ (ContactListSummaryResponse*) parseFromData:(NSData*) data extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (ContactListSummaryResponse*)[[[ContactListSummaryResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ContactListSummaryResponse*) parseFromInputStream:(NSInputStream*) input {
  return (ContactListSummaryResponse*)[[[ContactListSummaryResponse builder] mergeFromInputStream:input] build];
}
+ (ContactListSummaryResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (ContactListSummaryResponse*)[[[ContactListSummaryResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ContactListSummaryResponse*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return (ContactListSummaryResponse*)[[[ContactListSummaryResponse builder] mergeFromCodedInputStream:input] build];
}
+ (ContactListSummaryResponse*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (ContactListSummaryResponse*)[[[ContactListSummaryResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ContactListSummaryResponse_Builder*) builder {
  return [[[ContactListSummaryResponse_Builder alloc] init] autorelease];
}
+ (ContactListSummaryResponse_Builder*) builderWithPrototype:(ContactListSummaryResponse*) prototype {
  return [[ContactListSummaryResponse builder] mergeFrom:prototype];
}
- (ContactListSummaryResponse_Builder*) builder {
  return [ContactListSummaryResponse builder];
}
- (ContactListSummaryResponse_Builder*) toBuilder {
  return [ContactListSummaryResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  for (NSNumber* value in self.contactSummaryArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"contactSummary", value];
  }
  for (NSNumber* value in self.groupSummaryArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupSummary", value];
  }
  if (self.hasContactListVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"contactListVersion", [NSNumber numberWithInt:self.contactListVersion]];
  }
  for (NSNumber* value in self.contactVersionArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"contactVersion", value];
  }
  for (NSNumber* value in self.groupVersionArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupVersion", value];
  }
  if (self.hasBusinessCardVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"businessCardVersion", [NSNumber numberWithInt:self.businessCardVersion]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ContactListSummaryResponse class]]) {
    return NO;
  }
  ContactListSummaryResponse *otherMessage = other;
  return
      [self.contactSummaryArray isEqualToArray:otherMessage.contactSummaryArray] &&
      [self.groupSummaryArray isEqualToArray:otherMessage.groupSummaryArray] &&
      self.hasContactListVersion == otherMessage.hasContactListVersion &&
      (!self.hasContactListVersion || self.contactListVersion == otherMessage.contactListVersion) &&
      [self.contactVersionArray isEqualToArray:otherMessage.contactVersionArray] &&
      [self.groupVersionArray isEqualToArray:otherMessage.groupVersionArray] &&
      self.hasBusinessCardVersion == otherMessage.hasBusinessCardVersion &&
      (!self.hasBusinessCardVersion || self.businessCardVersion == otherMessage.businessCardVersion) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  for (NSNumber* value in self.contactSummaryArray) {
    hashCode = hashCode * 31 + [value intValue];
  }
  for (NSNumber* value in self.groupSummaryArray) {
    hashCode = hashCode * 31 + [value intValue];
  }
  if (self.hasContactListVersion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.contactListVersion] hash];
  }
  for (NSNumber* value in self.contactVersionArray) {
    hashCode = hashCode * 31 + [value intValue];
  }
  for (NSNumber* value in self.groupVersionArray) {
    hashCode = hashCode * 31 + [value intValue];
  }
  if (self.hasBusinessCardVersion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.businessCardVersion] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ContactListSummaryResponse_Builder()
@property (retain) ContactListSummaryResponse* result;
@end

@implementation ContactListSummaryResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ContactListSummaryResponse alloc] init] autorelease];
  }
  return self;
}
- (ES_PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ContactListSummaryResponse_Builder*) clear {
  self.result = [[[ContactListSummaryResponse alloc] init] autorelease];
  return self;
}
- (ContactListSummaryResponse_Builder*) clone {
  return [ContactListSummaryResponse builderWithPrototype:result];
}
- (ContactListSummaryResponse*) defaultInstance {
  return [ContactListSummaryResponse defaultInstance];
}
- (ContactListSummaryResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ContactListSummaryResponse*) buildPartial {
  ContactListSummaryResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ContactListSummaryResponse_Builder*) mergeFrom:(ContactListSummaryResponse*) other {
  if (other == [ContactListSummaryResponse defaultInstance]) {
    return self;
  }
  if (other.contactSummaryArray.count > 0) {
    if (result.contactSummaryArray == nil) {
      result.contactSummaryArray = [[other.contactSummaryArray copyWithZone:[other.contactSummaryArray zone]] autorelease];
    } else {
      [result.contactSummaryArray appendArray:other.contactSummaryArray];
    }
  }
  if (other.groupSummaryArray.count > 0) {
    if (result.groupSummaryArray == nil) {
      result.groupSummaryArray = [[other.groupSummaryArray copyWithZone:[other.groupSummaryArray zone]] autorelease];
    } else {
      [result.groupSummaryArray appendArray:other.groupSummaryArray];
    }
  }
  if (other.hasContactListVersion) {
    [self setContactListVersion:other.contactListVersion];
  }
  if (other.contactVersionArray.count > 0) {
    if (result.contactVersionArray == nil) {
      result.contactVersionArray = [[other.contactVersionArray copyWithZone:[other.contactVersionArray zone]] autorelease];
    } else {
      [result.contactVersionArray appendArray:other.contactVersionArray];
    }
  }
  if (other.groupVersionArray.count > 0) {
    if (result.groupVersionArray == nil) {
      result.groupVersionArray = [[other.groupVersionArray copyWithZone:[other.groupVersionArray zone]] autorelease];
    } else {
      [result.groupVersionArray appendArray:other.groupVersionArray];
    }
  }
  if (other.hasBusinessCardVersion) {
    [self setBusinessCardVersion:other.businessCardVersion];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ContactListSummaryResponse_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[ES_PBExtensionRegistry emptyRegistry]];
}
- (ContactListSummaryResponse_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  ES_PBUnknownFieldSet_Builder* unknownFields = [ES_PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        if (result.contactSummaryArray == nil) {
          result.contactSummaryArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeInt32];
        }
        while (input.bytesUntilLimit > 0) {
          [result.contactSummaryArray addInt32:[input readInt32]];
        }
        [input popLimit:limit];
        break;
      }
      case 18: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        if (result.groupSummaryArray == nil) {
          result.groupSummaryArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeInt32];
        }
        while (input.bytesUntilLimit > 0) {
          [result.groupSummaryArray addInt32:[input readInt32]];
        }
        [input popLimit:limit];
        break;
      }
      case 24: {
        [self setContactListVersion:[input readInt32]];
        break;
      }
      case 34: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        if (result.contactVersionArray == nil) {
          result.contactVersionArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeInt32];
        }
        while (input.bytesUntilLimit > 0) {
          [result.contactVersionArray addInt32:[input readInt32]];
        }
        [input popLimit:limit];
        break;
      }
      case 42: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        if (result.groupVersionArray == nil) {
          result.groupVersionArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeInt32];
        }
        while (input.bytesUntilLimit > 0) {
          [result.groupVersionArray addInt32:[input readInt32]];
        }
        [input popLimit:limit];
        break;
      }
      case 48: {
        [self setBusinessCardVersion:[input readInt32]];
        break;
      }
    }
  }
}
- (ES_PBAppendableArray *)contactSummary {
  return result.contactSummaryArray;
}
- (int32_t)contactSummaryAtIndex:(NSUInteger)index {
  return [result contactSummaryAtIndex:index];
}
- (ContactListSummaryResponse_Builder *)addContactSummary:(int32_t)value {
  if (result.contactSummaryArray == nil) {
    result.contactSummaryArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeInt32];
  }
  [result.contactSummaryArray addInt32:value];
  return self;
}
- (ContactListSummaryResponse_Builder *)setContactSummaryArray:(NSArray *)array {
  result.contactSummaryArray = [ES_PBAppendableArray arrayWithArray:array valueType:ES_PBArrayValueTypeInt32];
  return self;
}
- (ContactListSummaryResponse_Builder *)setContactSummaryValues:(const int32_t *)values count:(NSUInteger)count {
  result.contactSummaryArray = [ES_PBAppendableArray arrayWithValues:values count:count valueType:ES_PBArrayValueTypeInt32];
  return self;
}
- (ContactListSummaryResponse_Builder *)clearContactSummary {
  result.contactSummaryArray = nil;
  return self;
}
- (ES_PBAppendableArray *)groupSummary {
  return result.groupSummaryArray;
}
- (int32_t)groupSummaryAtIndex:(NSUInteger)index {
  return [result groupSummaryAtIndex:index];
}
- (ContactListSummaryResponse_Builder *)addGroupSummary:(int32_t)value {
  if (result.groupSummaryArray == nil) {
    result.groupSummaryArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeInt32];
  }
  [result.groupSummaryArray addInt32:value];
  return self;
}
- (ContactListSummaryResponse_Builder *)setGroupSummaryArray:(NSArray *)array {
  result.groupSummaryArray = [ES_PBAppendableArray arrayWithArray:array valueType:ES_PBArrayValueTypeInt32];
  return self;
}
- (ContactListSummaryResponse_Builder *)setGroupSummaryValues:(const int32_t *)values count:(NSUInteger)count {
  result.groupSummaryArray = [ES_PBAppendableArray arrayWithValues:values count:count valueType:ES_PBArrayValueTypeInt32];
  return self;
}
- (ContactListSummaryResponse_Builder *)clearGroupSummary {
  result.groupSummaryArray = nil;
  return self;
}
- (BOOL) hasContactListVersion {
  return result.hasContactListVersion;
}
- (int32_t) contactListVersion {
  return result.contactListVersion;
}
- (ContactListSummaryResponse_Builder*) setContactListVersion:(int32_t) value {
  result.hasContactListVersion = YES;
  result.contactListVersion = value;
  return self;
}
- (ContactListSummaryResponse_Builder*) clearContactListVersion {
  result.hasContactListVersion = NO;
  result.contactListVersion = 0;
  return self;
}
- (ES_PBAppendableArray *)contactVersion {
  return result.contactVersionArray;
}
- (int32_t)contactVersionAtIndex:(NSUInteger)index {
  return [result contactVersionAtIndex:index];
}
- (ContactListSummaryResponse_Builder *)addContactVersion:(int32_t)value {
  if (result.contactVersionArray == nil) {
    result.contactVersionArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeInt32];
  }
  [result.contactVersionArray addInt32:value];
  return self;
}
- (ContactListSummaryResponse_Builder *)setContactVersionArray:(NSArray *)array {
  result.contactVersionArray = [ES_PBAppendableArray arrayWithArray:array valueType:ES_PBArrayValueTypeInt32];
  return self;
}
- (ContactListSummaryResponse_Builder *)setContactVersionValues:(const int32_t *)values count:(NSUInteger)count {
  result.contactVersionArray = [ES_PBAppendableArray arrayWithValues:values count:count valueType:ES_PBArrayValueTypeInt32];
  return self;
}
- (ContactListSummaryResponse_Builder *)clearContactVersion {
  result.contactVersionArray = nil;
  return self;
}
- (ES_PBAppendableArray *)groupVersion {
  return result.groupVersionArray;
}
- (int32_t)groupVersionAtIndex:(NSUInteger)index {
  return [result groupVersionAtIndex:index];
}
- (ContactListSummaryResponse_Builder *)addGroupVersion:(int32_t)value {
  if (result.groupVersionArray == nil) {
    result.groupVersionArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeInt32];
  }
  [result.groupVersionArray addInt32:value];
  return self;
}
- (ContactListSummaryResponse_Builder *)setGroupVersionArray:(NSArray *)array {
  result.groupVersionArray = [ES_PBAppendableArray arrayWithArray:array valueType:ES_PBArrayValueTypeInt32];
  return self;
}
- (ContactListSummaryResponse_Builder *)setGroupVersionValues:(const int32_t *)values count:(NSUInteger)count {
  result.groupVersionArray = [ES_PBAppendableArray arrayWithValues:values count:count valueType:ES_PBArrayValueTypeInt32];
  return self;
}
- (ContactListSummaryResponse_Builder *)clearGroupVersion {
  result.groupVersionArray = nil;
  return self;
}
- (BOOL) hasBusinessCardVersion {
  return result.hasBusinessCardVersion;
}
- (int32_t) businessCardVersion {
  return result.businessCardVersion;
}
- (ContactListSummaryResponse_Builder*) setBusinessCardVersion:(int32_t) value {
  result.hasBusinessCardVersion = YES;
  result.businessCardVersion = value;
  return self;
}
- (ContactListSummaryResponse_Builder*) clearBusinessCardVersion {
  result.hasBusinessCardVersion = NO;
  result.businessCardVersion = 0;
  return self;
}
@end

