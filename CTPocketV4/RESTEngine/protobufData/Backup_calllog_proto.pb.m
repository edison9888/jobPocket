// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Backup_calllog_proto.pb.h"

@implementation BackupCalllogProtoRoot
static ES_PBExtensionRegistry* extensionRegistry = nil;
+ (ES_PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [BackupCalllogProtoRoot class]) {
    ES_PBMutableExtensionRegistry* registry = [ES_PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [BaseTypeProtoRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(ES_PBMutableExtensionRegistry*) registry {
}
@end

@interface BackupCallLogRequest ()
@property (retain) ES_PBAppendableArray * calllogArray;
@end

@implementation BackupCallLogRequest

@synthesize calllogArray;
@dynamic calllog;
- (void) dealloc {
  self.calllogArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static BackupCallLogRequest* defaultBackupCallLogRequestInstance = nil;
+ (void) initialize {
  if (self == [BackupCallLogRequest class]) {
    defaultBackupCallLogRequestInstance = [[BackupCallLogRequest alloc] init];
  }
}
+ (BackupCallLogRequest*) defaultInstance {
  return defaultBackupCallLogRequestInstance;
}
- (BackupCallLogRequest*) defaultInstance {
  return defaultBackupCallLogRequestInstance;
}
- (ES_PBArray *)calllog {
  return calllogArray;
}
- (CallLog*)calllogAtIndex:(NSUInteger)index {
  return [calllogArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  for (CallLog* element in self.calllog) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(ES_PBCodedOutputStream*) output {
  for (CallLog *element in self.calllogArray) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  for (CallLog *element in self.calllogArray) {
    size_ += ES_computeMessageSize(1, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BackupCallLogRequest*) parseFromData:(NSData*) data {
  return (BackupCallLogRequest*)[[[BackupCallLogRequest builder] mergeFromData:data] build];
}
+ (BackupCallLogRequest*) parseFromData:(NSData*) data extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (BackupCallLogRequest*)[[[BackupCallLogRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BackupCallLogRequest*) parseFromInputStream:(NSInputStream*) input {
  return (BackupCallLogRequest*)[[[BackupCallLogRequest builder] mergeFromInputStream:input] build];
}
+ (BackupCallLogRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (BackupCallLogRequest*)[[[BackupCallLogRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BackupCallLogRequest*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return (BackupCallLogRequest*)[[[BackupCallLogRequest builder] mergeFromCodedInputStream:input] build];
}
+ (BackupCallLogRequest*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (BackupCallLogRequest*)[[[BackupCallLogRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BackupCallLogRequest_Builder*) builder {
  return [[[BackupCallLogRequest_Builder alloc] init] autorelease];
}
+ (BackupCallLogRequest_Builder*) builderWithPrototype:(BackupCallLogRequest*) prototype {
  return [[BackupCallLogRequest builder] mergeFrom:prototype];
}
- (BackupCallLogRequest_Builder*) builder {
  return [BackupCallLogRequest builder];
}
- (BackupCallLogRequest_Builder*) toBuilder {
  return [BackupCallLogRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  for (CallLog* element in self.calllogArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"calllog"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BackupCallLogRequest class]]) {
    return NO;
  }
  BackupCallLogRequest *otherMessage = other;
  return
      [self.calllogArray isEqualToArray:otherMessage.calllogArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  for (CallLog* element in self.calllogArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BackupCallLogRequest_Builder()
@property (retain) BackupCallLogRequest* result;
@end

@implementation BackupCallLogRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BackupCallLogRequest alloc] init] autorelease];
  }
  return self;
}
- (ES_PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BackupCallLogRequest_Builder*) clear {
  self.result = [[[BackupCallLogRequest alloc] init] autorelease];
  return self;
}
- (BackupCallLogRequest_Builder*) clone {
  return [BackupCallLogRequest builderWithPrototype:result];
}
- (BackupCallLogRequest*) defaultInstance {
  return [BackupCallLogRequest defaultInstance];
}
- (BackupCallLogRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BackupCallLogRequest*) buildPartial {
  BackupCallLogRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BackupCallLogRequest_Builder*) mergeFrom:(BackupCallLogRequest*) other {
  if (other == [BackupCallLogRequest defaultInstance]) {
    return self;
  }
  if (other.calllogArray.count > 0) {
    if (result.calllogArray == nil) {
      result.calllogArray = [[other.calllogArray copyWithZone:[other.calllogArray zone]] autorelease];
    } else {
      [result.calllogArray appendArray:other.calllogArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BackupCallLogRequest_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[ES_PBExtensionRegistry emptyRegistry]];
}
- (BackupCallLogRequest_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  ES_PBUnknownFieldSet_Builder* unknownFields = [ES_PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        CallLog_Builder* subBuilder = [CallLog builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCalllog:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (ES_PBAppendableArray *)calllog {
  return result.calllogArray;
}
- (CallLog*)calllogAtIndex:(NSUInteger)index {
  return [result calllogAtIndex:index];
}
- (BackupCallLogRequest_Builder *)addCalllog:(CallLog*)value {
  if (result.calllogArray == nil) {
    result.calllogArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeObject];
  }
  [result.calllogArray addObject:value];
  return self;
}
- (BackupCallLogRequest_Builder *)setCalllogArray:(NSArray *)array {
  result.calllogArray = [ES_PBAppendableArray arrayWithArray:array valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (BackupCallLogRequest_Builder *)setCalllogValues:(const CallLog* *)values count:(NSUInteger)count {
  result.calllogArray = [ES_PBAppendableArray arrayWithValues:values count:count valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (BackupCallLogRequest_Builder *)clearCalllog {
  result.calllogArray = nil;
  return self;
}
@end

