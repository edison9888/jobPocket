// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Query_client_version_proto.pb.h"

@implementation QueryClientVersionProtoRoot
static ES_PBExtensionRegistry* extensionRegistry = nil;
+ (ES_PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [QueryClientVersionProtoRoot class]) {
    ES_PBMutableExtensionRegistry* registry = [ES_PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(ES_PBMutableExtensionRegistry*) registry {
}
@end

@interface QueryClientVersionRequest ()
@property (retain) NSString* currentVersion;
@property (retain) NSString* imsi;
@property (retain) NSString* mobileNum;
@property (retain) NSString* deviceType;
@end

@implementation QueryClientVersionRequest

- (BOOL) hasCurrentVersion {
  return !!hasCurrentVersion_;
}
- (void) setHasCurrentVersion:(BOOL) value_ {
  hasCurrentVersion_ = !!value_;
}
@synthesize currentVersion;
- (BOOL) hasImsi {
  return !!hasImsi_;
}
- (void) setHasImsi:(BOOL) value_ {
  hasImsi_ = !!value_;
}
@synthesize imsi;
- (BOOL) hasMobileNum {
  return !!hasMobileNum_;
}
- (void) setHasMobileNum:(BOOL) value_ {
  hasMobileNum_ = !!value_;
}
@synthesize mobileNum;
- (BOOL) hasDeviceType {
  return !!hasDeviceType_;
}
- (void) setHasDeviceType:(BOOL) value_ {
  hasDeviceType_ = !!value_;
}
@synthesize deviceType;
- (void) dealloc {
  self.currentVersion = nil;
  self.imsi = nil;
  self.mobileNum = nil;
  self.deviceType = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.currentVersion = @"";
    self.imsi = @"";
    self.mobileNum = @"";
    self.deviceType = @"";
  }
  return self;
}
static QueryClientVersionRequest* defaultQueryClientVersionRequestInstance = nil;
+ (void) initialize {
  if (self == [QueryClientVersionRequest class]) {
    defaultQueryClientVersionRequestInstance = [[QueryClientVersionRequest alloc] init];
  }
}
+ (QueryClientVersionRequest*) defaultInstance {
  return defaultQueryClientVersionRequestInstance;
}
- (QueryClientVersionRequest*) defaultInstance {
  return defaultQueryClientVersionRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCurrentVersion) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(ES_PBCodedOutputStream*) output {
  if (self.hasCurrentVersion) {
    [output writeString:1 value:self.currentVersion];
  }
  if (self.hasImsi) {
    [output writeString:2 value:self.imsi];
  }
  if (self.hasMobileNum) {
    [output writeString:3 value:self.mobileNum];
  }
  if (self.hasDeviceType) {
    [output writeString:4 value:self.deviceType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCurrentVersion) {
    size_ += ES_computeStringSize(1, self.currentVersion);
  }
  if (self.hasImsi) {
    size_ += ES_computeStringSize(2, self.imsi);
  }
  if (self.hasMobileNum) {
    size_ += ES_computeStringSize(3, self.mobileNum);
  }
  if (self.hasDeviceType) {
    size_ += ES_computeStringSize(4, self.deviceType);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (QueryClientVersionRequest*) parseFromData:(NSData*) data {
  return (QueryClientVersionRequest*)[[[QueryClientVersionRequest builder] mergeFromData:data] build];
}
+ (QueryClientVersionRequest*) parseFromData:(NSData*) data extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (QueryClientVersionRequest*)[[[QueryClientVersionRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (QueryClientVersionRequest*) parseFromInputStream:(NSInputStream*) input {
  return (QueryClientVersionRequest*)[[[QueryClientVersionRequest builder] mergeFromInputStream:input] build];
}
+ (QueryClientVersionRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (QueryClientVersionRequest*)[[[QueryClientVersionRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QueryClientVersionRequest*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return (QueryClientVersionRequest*)[[[QueryClientVersionRequest builder] mergeFromCodedInputStream:input] build];
}
+ (QueryClientVersionRequest*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (QueryClientVersionRequest*)[[[QueryClientVersionRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QueryClientVersionRequest_Builder*) builder {
  return [[[QueryClientVersionRequest_Builder alloc] init] autorelease];
}
+ (QueryClientVersionRequest_Builder*) builderWithPrototype:(QueryClientVersionRequest*) prototype {
  return [[QueryClientVersionRequest builder] mergeFrom:prototype];
}
- (QueryClientVersionRequest_Builder*) builder {
  return [QueryClientVersionRequest builder];
}
- (QueryClientVersionRequest_Builder*) toBuilder {
  return [QueryClientVersionRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCurrentVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"currentVersion", self.currentVersion];
  }
  if (self.hasImsi) {
    [output appendFormat:@"%@%@: %@\n", indent, @"imsi", self.imsi];
  }
  if (self.hasMobileNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mobileNum", self.mobileNum];
  }
  if (self.hasDeviceType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deviceType", self.deviceType];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[QueryClientVersionRequest class]]) {
    return NO;
  }
  QueryClientVersionRequest *otherMessage = other;
  return
      self.hasCurrentVersion == otherMessage.hasCurrentVersion &&
      (!self.hasCurrentVersion || [self.currentVersion isEqual:otherMessage.currentVersion]) &&
      self.hasImsi == otherMessage.hasImsi &&
      (!self.hasImsi || [self.imsi isEqual:otherMessage.imsi]) &&
      self.hasMobileNum == otherMessage.hasMobileNum &&
      (!self.hasMobileNum || [self.mobileNum isEqual:otherMessage.mobileNum]) &&
      self.hasDeviceType == otherMessage.hasDeviceType &&
      (!self.hasDeviceType || [self.deviceType isEqual:otherMessage.deviceType]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasCurrentVersion) {
    hashCode = hashCode * 31 + [self.currentVersion hash];
  }
  if (self.hasImsi) {
    hashCode = hashCode * 31 + [self.imsi hash];
  }
  if (self.hasMobileNum) {
    hashCode = hashCode * 31 + [self.mobileNum hash];
  }
  if (self.hasDeviceType) {
    hashCode = hashCode * 31 + [self.deviceType hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface QueryClientVersionRequest_Builder()
@property (retain) QueryClientVersionRequest* result;
@end

@implementation QueryClientVersionRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[QueryClientVersionRequest alloc] init] autorelease];
  }
  return self;
}
- (ES_PBGeneratedMessage*) internalGetResult {
  return result;
}
- (QueryClientVersionRequest_Builder*) clear {
  self.result = [[[QueryClientVersionRequest alloc] init] autorelease];
  return self;
}
- (QueryClientVersionRequest_Builder*) clone {
  return [QueryClientVersionRequest builderWithPrototype:result];
}
- (QueryClientVersionRequest*) defaultInstance {
  return [QueryClientVersionRequest defaultInstance];
}
- (QueryClientVersionRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (QueryClientVersionRequest*) buildPartial {
  QueryClientVersionRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (QueryClientVersionRequest_Builder*) mergeFrom:(QueryClientVersionRequest*) other {
  if (other == [QueryClientVersionRequest defaultInstance]) {
    return self;
  }
  if (other.hasCurrentVersion) {
    [self setCurrentVersion:other.currentVersion];
  }
  if (other.hasImsi) {
    [self setImsi:other.imsi];
  }
  if (other.hasMobileNum) {
    [self setMobileNum:other.mobileNum];
  }
  if (other.hasDeviceType) {
    [self setDeviceType:other.deviceType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (QueryClientVersionRequest_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[ES_PBExtensionRegistry emptyRegistry]];
}
- (QueryClientVersionRequest_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  ES_PBUnknownFieldSet_Builder* unknownFields = [ES_PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCurrentVersion:[input readString]];
        break;
      }
      case 18: {
        [self setImsi:[input readString]];
        break;
      }
      case 26: {
        [self setMobileNum:[input readString]];
        break;
      }
      case 34: {
        [self setDeviceType:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCurrentVersion {
  return result.hasCurrentVersion;
}
- (NSString*) currentVersion {
  return result.currentVersion;
}
- (QueryClientVersionRequest_Builder*) setCurrentVersion:(NSString*) value {
  result.hasCurrentVersion = YES;
  result.currentVersion = value;
  return self;
}
- (QueryClientVersionRequest_Builder*) clearCurrentVersion {
  result.hasCurrentVersion = NO;
  result.currentVersion = @"";
  return self;
}
- (BOOL) hasImsi {
  return result.hasImsi;
}
- (NSString*) imsi {
  return result.imsi;
}
- (QueryClientVersionRequest_Builder*) setImsi:(NSString*) value {
  result.hasImsi = YES;
  result.imsi = value;
  return self;
}
- (QueryClientVersionRequest_Builder*) clearImsi {
  result.hasImsi = NO;
  result.imsi = @"";
  return self;
}
- (BOOL) hasMobileNum {
  return result.hasMobileNum;
}
- (NSString*) mobileNum {
  return result.mobileNum;
}
- (QueryClientVersionRequest_Builder*) setMobileNum:(NSString*) value {
  result.hasMobileNum = YES;
  result.mobileNum = value;
  return self;
}
- (QueryClientVersionRequest_Builder*) clearMobileNum {
  result.hasMobileNum = NO;
  result.mobileNum = @"";
  return self;
}
- (BOOL) hasDeviceType {
  return result.hasDeviceType;
}
- (NSString*) deviceType {
  return result.deviceType;
}
- (QueryClientVersionRequest_Builder*) setDeviceType:(NSString*) value {
  result.hasDeviceType = YES;
  result.deviceType = value;
  return self;
}
- (QueryClientVersionRequest_Builder*) clearDeviceType {
  result.hasDeviceType = NO;
  result.deviceType = @"";
  return self;
}
@end

@interface QueryClientVersionResponse ()
@property (retain) NSString* latestVersion;
@property (retain) NSString* displayName;
@property BOOL mandatoryUpgrade;
@property (retain) NSString* publishTime;
@property (retain) NSString* updateSummary;
@property (retain) NSString* updateUrl;
@end

@implementation QueryClientVersionResponse

- (BOOL) hasLatestVersion {
  return !!hasLatestVersion_;
}
- (void) setHasLatestVersion:(BOOL) value_ {
  hasLatestVersion_ = !!value_;
}
@synthesize latestVersion;
- (BOOL) hasDisplayName {
  return !!hasDisplayName_;
}
- (void) setHasDisplayName:(BOOL) value_ {
  hasDisplayName_ = !!value_;
}
@synthesize displayName;
- (BOOL) hasMandatoryUpgrade {
  return !!hasMandatoryUpgrade_;
}
- (void) setHasMandatoryUpgrade:(BOOL) value_ {
  hasMandatoryUpgrade_ = !!value_;
}
- (BOOL) mandatoryUpgrade {
  return !!mandatoryUpgrade_;
}
- (void) setMandatoryUpgrade:(BOOL) value_ {
  mandatoryUpgrade_ = !!value_;
}
- (BOOL) hasPublishTime {
  return !!hasPublishTime_;
}
- (void) setHasPublishTime:(BOOL) value_ {
  hasPublishTime_ = !!value_;
}
@synthesize publishTime;
- (BOOL) hasUpdateSummary {
  return !!hasUpdateSummary_;
}
- (void) setHasUpdateSummary:(BOOL) value_ {
  hasUpdateSummary_ = !!value_;
}
@synthesize updateSummary;
- (BOOL) hasUpdateUrl {
  return !!hasUpdateUrl_;
}
- (void) setHasUpdateUrl:(BOOL) value_ {
  hasUpdateUrl_ = !!value_;
}
@synthesize updateUrl;
- (void) dealloc {
  self.latestVersion = nil;
  self.displayName = nil;
  self.publishTime = nil;
  self.updateSummary = nil;
  self.updateUrl = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.latestVersion = @"";
    self.displayName = @"";
    self.mandatoryUpgrade = NO;
    self.publishTime = @"";
    self.updateSummary = @"";
    self.updateUrl = @"";
  }
  return self;
}
static QueryClientVersionResponse* defaultQueryClientVersionResponseInstance = nil;
+ (void) initialize {
  if (self == [QueryClientVersionResponse class]) {
    defaultQueryClientVersionResponseInstance = [[QueryClientVersionResponse alloc] init];
  }
}
+ (QueryClientVersionResponse*) defaultInstance {
  return defaultQueryClientVersionResponseInstance;
}
- (QueryClientVersionResponse*) defaultInstance {
  return defaultQueryClientVersionResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasLatestVersion) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(ES_PBCodedOutputStream*) output {
  if (self.hasLatestVersion) {
    [output writeString:1 value:self.latestVersion];
  }
  if (self.hasDisplayName) {
    [output writeString:2 value:self.displayName];
  }
  if (self.hasMandatoryUpgrade) {
    [output writeBool:3 value:self.mandatoryUpgrade];
  }
  if (self.hasPublishTime) {
    [output writeString:4 value:self.publishTime];
  }
  if (self.hasUpdateSummary) {
    [output writeString:5 value:self.updateSummary];
  }
  if (self.hasUpdateUrl) {
    [output writeString:6 value:self.updateUrl];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasLatestVersion) {
    size_ += ES_computeStringSize(1, self.latestVersion);
  }
  if (self.hasDisplayName) {
    size_ += ES_computeStringSize(2, self.displayName);
  }
  if (self.hasMandatoryUpgrade) {
    size_ += ES_computeBoolSize(3, self.mandatoryUpgrade);
  }
  if (self.hasPublishTime) {
    size_ += ES_computeStringSize(4, self.publishTime);
  }
  if (self.hasUpdateSummary) {
    size_ += ES_computeStringSize(5, self.updateSummary);
  }
  if (self.hasUpdateUrl) {
    size_ += ES_computeStringSize(6, self.updateUrl);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (QueryClientVersionResponse*) parseFromData:(NSData*) data {
  return (QueryClientVersionResponse*)[[[QueryClientVersionResponse builder] mergeFromData:data] build];
}
+ (QueryClientVersionResponse*) parseFromData:(NSData*) data extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (QueryClientVersionResponse*)[[[QueryClientVersionResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (QueryClientVersionResponse*) parseFromInputStream:(NSInputStream*) input {
  return (QueryClientVersionResponse*)[[[QueryClientVersionResponse builder] mergeFromInputStream:input] build];
}
+ (QueryClientVersionResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (QueryClientVersionResponse*)[[[QueryClientVersionResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QueryClientVersionResponse*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return (QueryClientVersionResponse*)[[[QueryClientVersionResponse builder] mergeFromCodedInputStream:input] build];
}
+ (QueryClientVersionResponse*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (QueryClientVersionResponse*)[[[QueryClientVersionResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QueryClientVersionResponse_Builder*) builder {
  return [[[QueryClientVersionResponse_Builder alloc] init] autorelease];
}
+ (QueryClientVersionResponse_Builder*) builderWithPrototype:(QueryClientVersionResponse*) prototype {
  return [[QueryClientVersionResponse builder] mergeFrom:prototype];
}
- (QueryClientVersionResponse_Builder*) builder {
  return [QueryClientVersionResponse builder];
}
- (QueryClientVersionResponse_Builder*) toBuilder {
  return [QueryClientVersionResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasLatestVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"latestVersion", self.latestVersion];
  }
  if (self.hasDisplayName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"displayName", self.displayName];
  }
  if (self.hasMandatoryUpgrade) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mandatoryUpgrade", [NSNumber numberWithBool:self.mandatoryUpgrade]];
  }
  if (self.hasPublishTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"publishTime", self.publishTime];
  }
  if (self.hasUpdateSummary) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updateSummary", self.updateSummary];
  }
  if (self.hasUpdateUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updateUrl", self.updateUrl];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[QueryClientVersionResponse class]]) {
    return NO;
  }
  QueryClientVersionResponse *otherMessage = other;
  return
      self.hasLatestVersion == otherMessage.hasLatestVersion &&
      (!self.hasLatestVersion || [self.latestVersion isEqual:otherMessage.latestVersion]) &&
      self.hasDisplayName == otherMessage.hasDisplayName &&
      (!self.hasDisplayName || [self.displayName isEqual:otherMessage.displayName]) &&
      self.hasMandatoryUpgrade == otherMessage.hasMandatoryUpgrade &&
      (!self.hasMandatoryUpgrade || self.mandatoryUpgrade == otherMessage.mandatoryUpgrade) &&
      self.hasPublishTime == otherMessage.hasPublishTime &&
      (!self.hasPublishTime || [self.publishTime isEqual:otherMessage.publishTime]) &&
      self.hasUpdateSummary == otherMessage.hasUpdateSummary &&
      (!self.hasUpdateSummary || [self.updateSummary isEqual:otherMessage.updateSummary]) &&
      self.hasUpdateUrl == otherMessage.hasUpdateUrl &&
      (!self.hasUpdateUrl || [self.updateUrl isEqual:otherMessage.updateUrl]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasLatestVersion) {
    hashCode = hashCode * 31 + [self.latestVersion hash];
  }
  if (self.hasDisplayName) {
    hashCode = hashCode * 31 + [self.displayName hash];
  }
  if (self.hasMandatoryUpgrade) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.mandatoryUpgrade] hash];
  }
  if (self.hasPublishTime) {
    hashCode = hashCode * 31 + [self.publishTime hash];
  }
  if (self.hasUpdateSummary) {
    hashCode = hashCode * 31 + [self.updateSummary hash];
  }
  if (self.hasUpdateUrl) {
    hashCode = hashCode * 31 + [self.updateUrl hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface QueryClientVersionResponse_Builder()
@property (retain) QueryClientVersionResponse* result;
@end

@implementation QueryClientVersionResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[QueryClientVersionResponse alloc] init] autorelease];
  }
  return self;
}
- (ES_PBGeneratedMessage*) internalGetResult {
  return result;
}
- (QueryClientVersionResponse_Builder*) clear {
  self.result = [[[QueryClientVersionResponse alloc] init] autorelease];
  return self;
}
- (QueryClientVersionResponse_Builder*) clone {
  return [QueryClientVersionResponse builderWithPrototype:result];
}
- (QueryClientVersionResponse*) defaultInstance {
  return [QueryClientVersionResponse defaultInstance];
}
- (QueryClientVersionResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (QueryClientVersionResponse*) buildPartial {
  QueryClientVersionResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (QueryClientVersionResponse_Builder*) mergeFrom:(QueryClientVersionResponse*) other {
  if (other == [QueryClientVersionResponse defaultInstance]) {
    return self;
  }
  if (other.hasLatestVersion) {
    [self setLatestVersion:other.latestVersion];
  }
  if (other.hasDisplayName) {
    [self setDisplayName:other.displayName];
  }
  if (other.hasMandatoryUpgrade) {
    [self setMandatoryUpgrade:other.mandatoryUpgrade];
  }
  if (other.hasPublishTime) {
    [self setPublishTime:other.publishTime];
  }
  if (other.hasUpdateSummary) {
    [self setUpdateSummary:other.updateSummary];
  }
  if (other.hasUpdateUrl) {
    [self setUpdateUrl:other.updateUrl];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (QueryClientVersionResponse_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[ES_PBExtensionRegistry emptyRegistry]];
}
- (QueryClientVersionResponse_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  ES_PBUnknownFieldSet_Builder* unknownFields = [ES_PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setLatestVersion:[input readString]];
        break;
      }
      case 18: {
        [self setDisplayName:[input readString]];
        break;
      }
      case 24: {
        [self setMandatoryUpgrade:[input readBool]];
        break;
      }
      case 34: {
        [self setPublishTime:[input readString]];
        break;
      }
      case 42: {
        [self setUpdateSummary:[input readString]];
        break;
      }
      case 50: {
        [self setUpdateUrl:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasLatestVersion {
  return result.hasLatestVersion;
}
- (NSString*) latestVersion {
  return result.latestVersion;
}
- (QueryClientVersionResponse_Builder*) setLatestVersion:(NSString*) value {
  result.hasLatestVersion = YES;
  result.latestVersion = value;
  return self;
}
- (QueryClientVersionResponse_Builder*) clearLatestVersion {
  result.hasLatestVersion = NO;
  result.latestVersion = @"";
  return self;
}
- (BOOL) hasDisplayName {
  return result.hasDisplayName;
}
- (NSString*) displayName {
  return result.displayName;
}
- (QueryClientVersionResponse_Builder*) setDisplayName:(NSString*) value {
  result.hasDisplayName = YES;
  result.displayName = value;
  return self;
}
- (QueryClientVersionResponse_Builder*) clearDisplayName {
  result.hasDisplayName = NO;
  result.displayName = @"";
  return self;
}
- (BOOL) hasMandatoryUpgrade {
  return result.hasMandatoryUpgrade;
}
- (BOOL) mandatoryUpgrade {
  return result.mandatoryUpgrade;
}
- (QueryClientVersionResponse_Builder*) setMandatoryUpgrade:(BOOL) value {
  result.hasMandatoryUpgrade = YES;
  result.mandatoryUpgrade = value;
  return self;
}
- (QueryClientVersionResponse_Builder*) clearMandatoryUpgrade {
  result.hasMandatoryUpgrade = NO;
  result.mandatoryUpgrade = NO;
  return self;
}
- (BOOL) hasPublishTime {
  return result.hasPublishTime;
}
- (NSString*) publishTime {
  return result.publishTime;
}
- (QueryClientVersionResponse_Builder*) setPublishTime:(NSString*) value {
  result.hasPublishTime = YES;
  result.publishTime = value;
  return self;
}
- (QueryClientVersionResponse_Builder*) clearPublishTime {
  result.hasPublishTime = NO;
  result.publishTime = @"";
  return self;
}
- (BOOL) hasUpdateSummary {
  return result.hasUpdateSummary;
}
- (NSString*) updateSummary {
  return result.updateSummary;
}
- (QueryClientVersionResponse_Builder*) setUpdateSummary:(NSString*) value {
  result.hasUpdateSummary = YES;
  result.updateSummary = value;
  return self;
}
- (QueryClientVersionResponse_Builder*) clearUpdateSummary {
  result.hasUpdateSummary = NO;
  result.updateSummary = @"";
  return self;
}
- (BOOL) hasUpdateUrl {
  return result.hasUpdateUrl;
}
- (NSString*) updateUrl {
  return result.updateUrl;
}
- (QueryClientVersionResponse_Builder*) setUpdateUrl:(NSString*) value {
  result.hasUpdateUrl = YES;
  result.updateUrl = value;
  return self;
}
- (QueryClientVersionResponse_Builder*) clearUpdateUrl {
  result.hasUpdateUrl = NO;
  result.updateUrl = @"";
  return self;
}
@end

