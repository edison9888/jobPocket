// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Sync_upload_contact_proto.pb.h"

@implementation SyncUploadContactProtoRoot
static ES_PBExtensionRegistry* extensionRegistry = nil;
+ (ES_PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [SyncUploadContactProtoRoot class]) {
    ES_PBMutableExtensionRegistry* registry = [ES_PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [ContactProtoRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(ES_PBMutableExtensionRegistry*) registry {
}
@end

@interface SyncUploadContactRequest ()
@property (retain) ES_PBAppendableArray * contactAddArray;
@property (retain) ES_PBAppendableArray * contactUpdArray;
@property (retain) ES_PBAppendableArray * contactDelArray;
@property (retain) ES_PBAppendableArray * contactSyncSummaryArray;
@property (retain) ES_PBAppendableArray * groupAddArray;
@property (retain) ES_PBAppendableArray * groupUpdArray;
@property (retain) ES_PBAppendableArray * groupDelArray;
@property (retain) ES_PBAppendableArray * groupSyncSummaryArray;
@property (retain) Contact* businessCard;
@property int32_t businessCardVersion;
@end

@implementation SyncUploadContactRequest

@synthesize contactAddArray;
@dynamic contactAdd;
@synthesize contactUpdArray;
@dynamic contactUpd;
@synthesize contactDelArray;
@dynamic contactDel;
@synthesize contactSyncSummaryArray;
@dynamic contactSyncSummary;
@synthesize groupAddArray;
@dynamic groupAdd;
@synthesize groupUpdArray;
@dynamic groupUpd;
@synthesize groupDelArray;
@dynamic groupDel;
@synthesize groupSyncSummaryArray;
@dynamic groupSyncSummary;
- (BOOL) hasBusinessCard {
  return !!hasBusinessCard_;
}
- (void) setHasBusinessCard:(BOOL) value_ {
  hasBusinessCard_ = !!value_;
}
@synthesize businessCard;
- (BOOL) hasBusinessCardVersion {
  return !!hasBusinessCardVersion_;
}
- (void) setHasBusinessCardVersion:(BOOL) value_ {
  hasBusinessCardVersion_ = !!value_;
}
@synthesize businessCardVersion;
- (void) dealloc {
  self.contactAddArray = nil;
  self.contactUpdArray = nil;
  self.contactDelArray = nil;
  self.contactSyncSummaryArray = nil;
  self.groupAddArray = nil;
  self.groupUpdArray = nil;
  self.groupDelArray = nil;
  self.groupSyncSummaryArray = nil;
  self.businessCard = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.businessCard = [Contact defaultInstance];
    self.businessCardVersion = 0;
  }
  return self;
}
static SyncUploadContactRequest* defaultSyncUploadContactRequestInstance = nil;
+ (void) initialize {
  if (self == [SyncUploadContactRequest class]) {
    defaultSyncUploadContactRequestInstance = [[SyncUploadContactRequest alloc] init];
  }
}
+ (SyncUploadContactRequest*) defaultInstance {
  return defaultSyncUploadContactRequestInstance;
}
- (SyncUploadContactRequest*) defaultInstance {
  return defaultSyncUploadContactRequestInstance;
}
- (ES_PBArray *)contactAdd {
  return contactAddArray;
}
- (Contact*)contactAddAtIndex:(NSUInteger)index {
  return [contactAddArray objectAtIndex:index];
}
- (ES_PBArray *)contactUpd {
  return contactUpdArray;
}
- (Contact*)contactUpdAtIndex:(NSUInteger)index {
  return [contactUpdArray objectAtIndex:index];
}
- (ES_PBArray *)contactDel {
  return contactDelArray;
}
- (int32_t)contactDelAtIndex:(NSUInteger)index {
  return [contactDelArray int32AtIndex:index];
}
- (ES_PBArray *)contactSyncSummary {
  return contactSyncSummaryArray;
}
- (SyncSummary*)contactSyncSummaryAtIndex:(NSUInteger)index {
  return [contactSyncSummaryArray objectAtIndex:index];
}
- (ES_PBArray *)groupAdd {
  return groupAddArray;
}
- (Group*)groupAddAtIndex:(NSUInteger)index {
  return [groupAddArray objectAtIndex:index];
}
- (ES_PBArray *)groupUpd {
  return groupUpdArray;
}
- (Group*)groupUpdAtIndex:(NSUInteger)index {
  return [groupUpdArray objectAtIndex:index];
}
- (ES_PBArray *)groupDel {
  return groupDelArray;
}
- (int32_t)groupDelAtIndex:(NSUInteger)index {
  return [groupDelArray int32AtIndex:index];
}
- (ES_PBArray *)groupSyncSummary {
  return groupSyncSummaryArray;
}
- (SyncSummary*)groupSyncSummaryAtIndex:(NSUInteger)index {
  return [groupSyncSummaryArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  for (SyncSummary* element in self.contactSyncSummary) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (SyncSummary* element in self.groupSyncSummary) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(ES_PBCodedOutputStream*) output {
  for (Contact *element in self.contactAddArray) {
    [output writeMessage:1 value:element];
  }
  for (Contact *element in self.contactUpdArray) {
    [output writeMessage:2 value:element];
  }
  const NSUInteger contactDelArrayCount = self.contactDelArray.count;
  if (contactDelArrayCount > 0) {
    const int32_t *values = (const int32_t *)self.contactDelArray.data;
    [output writeRawVarint32:26];
    [output writeRawVarint32:contactDelMemoizedSerializedSize];
    for (NSUInteger i = 0; i < contactDelArrayCount; ++i) {
      [output writeInt32NoTag:values[i]];
    }
  }
  for (SyncSummary *element in self.contactSyncSummaryArray) {
    [output writeMessage:4 value:element];
  }
  for (Group *element in self.groupAddArray) {
    [output writeMessage:5 value:element];
  }
  for (Group *element in self.groupUpdArray) {
    [output writeMessage:6 value:element];
  }
  const NSUInteger groupDelArrayCount = self.groupDelArray.count;
  if (groupDelArrayCount > 0) {
    const int32_t *values = (const int32_t *)self.groupDelArray.data;
    [output writeRawVarint32:58];
    [output writeRawVarint32:groupDelMemoizedSerializedSize];
    for (NSUInteger i = 0; i < groupDelArrayCount; ++i) {
      [output writeInt32NoTag:values[i]];
    }
  }
  for (SyncSummary *element in self.groupSyncSummaryArray) {
    [output writeMessage:8 value:element];
  }
  if (self.hasBusinessCard) {
    [output writeMessage:9 value:self.businessCard];
  }
  if (self.hasBusinessCardVersion) {
    [output writeInt32:10 value:self.businessCardVersion];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  for (Contact *element in self.contactAddArray) {
    size_ += ES_computeMessageSize(1, element);
  }
  for (Contact *element in self.contactUpdArray) {
    size_ += ES_computeMessageSize(2, element);
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.contactDelArray.count;
    const int32_t *values = (const int32_t *)self.contactDelArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += ES_computeInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    if (count > 0) {
      size_ += 1;
      size_ += ES_computeInt32SizeNoTag(dataSize);
    }
    contactDelMemoizedSerializedSize = dataSize;
  }
  for (SyncSummary *element in self.contactSyncSummaryArray) {
    size_ += ES_computeMessageSize(4, element);
  }
  for (Group *element in self.groupAddArray) {
    size_ += ES_computeMessageSize(5, element);
  }
  for (Group *element in self.groupUpdArray) {
    size_ += ES_computeMessageSize(6, element);
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.groupDelArray.count;
    const int32_t *values = (const int32_t *)self.groupDelArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += ES_computeInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    if (count > 0) {
      size_ += 1;
      size_ += ES_computeInt32SizeNoTag(dataSize);
    }
    groupDelMemoizedSerializedSize = dataSize;
  }
  for (SyncSummary *element in self.groupSyncSummaryArray) {
    size_ += ES_computeMessageSize(8, element);
  }
  if (self.hasBusinessCard) {
    size_ += ES_computeMessageSize(9, self.businessCard);
  }
  if (self.hasBusinessCardVersion) {
    size_ += ES_computeInt32Size(10, self.businessCardVersion);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SyncUploadContactRequest*) parseFromData:(NSData*) data {
  return (SyncUploadContactRequest*)[[[SyncUploadContactRequest builder] mergeFromData:data] build];
}
+ (SyncUploadContactRequest*) parseFromData:(NSData*) data extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (SyncUploadContactRequest*)[[[SyncUploadContactRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SyncUploadContactRequest*) parseFromInputStream:(NSInputStream*) input {
  return (SyncUploadContactRequest*)[[[SyncUploadContactRequest builder] mergeFromInputStream:input] build];
}
+ (SyncUploadContactRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (SyncUploadContactRequest*)[[[SyncUploadContactRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncUploadContactRequest*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return (SyncUploadContactRequest*)[[[SyncUploadContactRequest builder] mergeFromCodedInputStream:input] build];
}
+ (SyncUploadContactRequest*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (SyncUploadContactRequest*)[[[SyncUploadContactRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncUploadContactRequest_Builder*) builder {
  return [[[SyncUploadContactRequest_Builder alloc] init] autorelease];
}
+ (SyncUploadContactRequest_Builder*) builderWithPrototype:(SyncUploadContactRequest*) prototype {
  return [[SyncUploadContactRequest builder] mergeFrom:prototype];
}
- (SyncUploadContactRequest_Builder*) builder {
  return [SyncUploadContactRequest builder];
}
- (SyncUploadContactRequest_Builder*) toBuilder {
  return [SyncUploadContactRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  for (Contact* element in self.contactAddArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"contactAdd"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (Contact* element in self.contactUpdArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"contactUpd"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (NSNumber* value in self.contactDelArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"contactDel", value];
  }
  for (SyncSummary* element in self.contactSyncSummaryArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"contactSyncSummary"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (Group* element in self.groupAddArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"groupAdd"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (Group* element in self.groupUpdArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"groupUpd"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (NSNumber* value in self.groupDelArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupDel", value];
  }
  for (SyncSummary* element in self.groupSyncSummaryArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"groupSyncSummary"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasBusinessCard) {
    [output appendFormat:@"%@%@ {\n", indent, @"businessCard"];
    [self.businessCard writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasBusinessCardVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"businessCardVersion", [NSNumber numberWithInt:self.businessCardVersion]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SyncUploadContactRequest class]]) {
    return NO;
  }
  SyncUploadContactRequest *otherMessage = other;
  return
      [self.contactAddArray isEqualToArray:otherMessage.contactAddArray] &&
      [self.contactUpdArray isEqualToArray:otherMessage.contactUpdArray] &&
      [self.contactDelArray isEqualToArray:otherMessage.contactDelArray] &&
      [self.contactSyncSummaryArray isEqualToArray:otherMessage.contactSyncSummaryArray] &&
      [self.groupAddArray isEqualToArray:otherMessage.groupAddArray] &&
      [self.groupUpdArray isEqualToArray:otherMessage.groupUpdArray] &&
      [self.groupDelArray isEqualToArray:otherMessage.groupDelArray] &&
      [self.groupSyncSummaryArray isEqualToArray:otherMessage.groupSyncSummaryArray] &&
      self.hasBusinessCard == otherMessage.hasBusinessCard &&
      (!self.hasBusinessCard || [self.businessCard isEqual:otherMessage.businessCard]) &&
      self.hasBusinessCardVersion == otherMessage.hasBusinessCardVersion &&
      (!self.hasBusinessCardVersion || self.businessCardVersion == otherMessage.businessCardVersion) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  for (Contact* element in self.contactAddArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (Contact* element in self.contactUpdArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (NSNumber* value in self.contactDelArray) {
    hashCode = hashCode * 31 + [value intValue];
  }
  for (SyncSummary* element in self.contactSyncSummaryArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (Group* element in self.groupAddArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (Group* element in self.groupUpdArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (NSNumber* value in self.groupDelArray) {
    hashCode = hashCode * 31 + [value intValue];
  }
  for (SyncSummary* element in self.groupSyncSummaryArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasBusinessCard) {
    hashCode = hashCode * 31 + [self.businessCard hash];
  }
  if (self.hasBusinessCardVersion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.businessCardVersion] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SyncUploadContactRequest_Builder()
@property (retain) SyncUploadContactRequest* result;
@end

@implementation SyncUploadContactRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SyncUploadContactRequest alloc] init] autorelease];
  }
  return self;
}
- (ES_PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SyncUploadContactRequest_Builder*) clear {
  self.result = [[[SyncUploadContactRequest alloc] init] autorelease];
  return self;
}
- (SyncUploadContactRequest_Builder*) clone {
  return [SyncUploadContactRequest builderWithPrototype:result];
}
- (SyncUploadContactRequest*) defaultInstance {
  return [SyncUploadContactRequest defaultInstance];
}
- (SyncUploadContactRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SyncUploadContactRequest*) buildPartial {
  SyncUploadContactRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SyncUploadContactRequest_Builder*) mergeFrom:(SyncUploadContactRequest*) other {
  if (other == [SyncUploadContactRequest defaultInstance]) {
    return self;
  }
  if (other.contactAddArray.count > 0) {
    if (result.contactAddArray == nil) {
      result.contactAddArray = [[other.contactAddArray copyWithZone:[other.contactAddArray zone]] autorelease];
    } else {
      [result.contactAddArray appendArray:other.contactAddArray];
    }
  }
  if (other.contactUpdArray.count > 0) {
    if (result.contactUpdArray == nil) {
      result.contactUpdArray = [[other.contactUpdArray copyWithZone:[other.contactUpdArray zone]] autorelease];
    } else {
      [result.contactUpdArray appendArray:other.contactUpdArray];
    }
  }
  if (other.contactDelArray.count > 0) {
    if (result.contactDelArray == nil) {
      result.contactDelArray = [[other.contactDelArray copyWithZone:[other.contactDelArray zone]] autorelease];
    } else {
      [result.contactDelArray appendArray:other.contactDelArray];
    }
  }
  if (other.contactSyncSummaryArray.count > 0) {
    if (result.contactSyncSummaryArray == nil) {
      result.contactSyncSummaryArray = [[other.contactSyncSummaryArray copyWithZone:[other.contactSyncSummaryArray zone]] autorelease];
    } else {
      [result.contactSyncSummaryArray appendArray:other.contactSyncSummaryArray];
    }
  }
  if (other.groupAddArray.count > 0) {
    if (result.groupAddArray == nil) {
      result.groupAddArray = [[other.groupAddArray copyWithZone:[other.groupAddArray zone]] autorelease];
    } else {
      [result.groupAddArray appendArray:other.groupAddArray];
    }
  }
  if (other.groupUpdArray.count > 0) {
    if (result.groupUpdArray == nil) {
      result.groupUpdArray = [[other.groupUpdArray copyWithZone:[other.groupUpdArray zone]] autorelease];
    } else {
      [result.groupUpdArray appendArray:other.groupUpdArray];
    }
  }
  if (other.groupDelArray.count > 0) {
    if (result.groupDelArray == nil) {
      result.groupDelArray = [[other.groupDelArray copyWithZone:[other.groupDelArray zone]] autorelease];
    } else {
      [result.groupDelArray appendArray:other.groupDelArray];
    }
  }
  if (other.groupSyncSummaryArray.count > 0) {
    if (result.groupSyncSummaryArray == nil) {
      result.groupSyncSummaryArray = [[other.groupSyncSummaryArray copyWithZone:[other.groupSyncSummaryArray zone]] autorelease];
    } else {
      [result.groupSyncSummaryArray appendArray:other.groupSyncSummaryArray];
    }
  }
  if (other.hasBusinessCard) {
    [self mergeBusinessCard:other.businessCard];
  }
  if (other.hasBusinessCardVersion) {
    [self setBusinessCardVersion:other.businessCardVersion];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SyncUploadContactRequest_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[ES_PBExtensionRegistry emptyRegistry]];
}
- (SyncUploadContactRequest_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  ES_PBUnknownFieldSet_Builder* unknownFields = [ES_PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Contact_Builder* subBuilder = [Contact builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addContactAdd:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        Contact_Builder* subBuilder = [Contact builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addContactUpd:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        if (result.contactDelArray == nil) {
          result.contactDelArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeInt32];
        }
        while (input.bytesUntilLimit > 0) {
          [result.contactDelArray addInt32:[input readInt32]];
        }
        [input popLimit:limit];
        break;
      }
      case 34: {
        SyncSummary_Builder* subBuilder = [SyncSummary builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addContactSyncSummary:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        Group_Builder* subBuilder = [Group builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGroupAdd:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        Group_Builder* subBuilder = [Group builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGroupUpd:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        if (result.groupDelArray == nil) {
          result.groupDelArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeInt32];
        }
        while (input.bytesUntilLimit > 0) {
          [result.groupDelArray addInt32:[input readInt32]];
        }
        [input popLimit:limit];
        break;
      }
      case 66: {
        SyncSummary_Builder* subBuilder = [SyncSummary builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGroupSyncSummary:[subBuilder buildPartial]];
        break;
      }
      case 74: {
        Contact_Builder* subBuilder = [Contact builder];
        if (self.hasBusinessCard) {
          [subBuilder mergeFrom:self.businessCard];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setBusinessCard:[subBuilder buildPartial]];
        break;
      }
      case 80: {
        [self setBusinessCardVersion:[input readInt32]];
        break;
      }
    }
  }
}
- (ES_PBAppendableArray *)contactAdd {
  return result.contactAddArray;
}
- (Contact*)contactAddAtIndex:(NSUInteger)index {
  return [result contactAddAtIndex:index];
}
- (SyncUploadContactRequest_Builder *)addContactAdd:(Contact*)value {
  if (result.contactAddArray == nil) {
    result.contactAddArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeObject];
  }
  [result.contactAddArray addObject:value];
  return self;
}
- (SyncUploadContactRequest_Builder *)setContactAddArray:(NSArray *)array {
  result.contactAddArray = [ES_PBAppendableArray arrayWithArray:array valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (SyncUploadContactRequest_Builder *)setContactAddValues:(const Contact* *)values count:(NSUInteger)count {
  result.contactAddArray = [ES_PBAppendableArray arrayWithValues:values count:count valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (SyncUploadContactRequest_Builder *)clearContactAdd {
  result.contactAddArray = nil;
  return self;
}
- (ES_PBAppendableArray *)contactUpd {
  return result.contactUpdArray;
}
- (Contact*)contactUpdAtIndex:(NSUInteger)index {
  return [result contactUpdAtIndex:index];
}
- (SyncUploadContactRequest_Builder *)addContactUpd:(Contact*)value {
  if (result.contactUpdArray == nil) {
    result.contactUpdArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeObject];
  }
  [result.contactUpdArray addObject:value];
  return self;
}
- (SyncUploadContactRequest_Builder *)setContactUpdArray:(NSArray *)array {
  result.contactUpdArray = [ES_PBAppendableArray arrayWithArray:array valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (SyncUploadContactRequest_Builder *)setContactUpdValues:(const Contact* *)values count:(NSUInteger)count {
  result.contactUpdArray = [ES_PBAppendableArray arrayWithValues:values count:count valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (SyncUploadContactRequest_Builder *)clearContactUpd {
  result.contactUpdArray = nil;
  return self;
}
- (ES_PBAppendableArray *)contactDel {
  return result.contactDelArray;
}
- (int32_t)contactDelAtIndex:(NSUInteger)index {
  return [result contactDelAtIndex:index];
}
- (SyncUploadContactRequest_Builder *)addContactDel:(int32_t)value {
  if (result.contactDelArray == nil) {
    result.contactDelArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeInt32];
  }
  [result.contactDelArray addInt32:value];
  return self;
}
- (SyncUploadContactRequest_Builder *)setContactDelArray:(NSArray *)array {
  result.contactDelArray = [ES_PBAppendableArray arrayWithArray:array valueType:ES_PBArrayValueTypeInt32];
  return self;
}
- (SyncUploadContactRequest_Builder *)setContactDelValues:(const int32_t *)values count:(NSUInteger)count {
  result.contactDelArray = [ES_PBAppendableArray arrayWithValues:values count:count valueType:ES_PBArrayValueTypeInt32];
  return self;
}
- (SyncUploadContactRequest_Builder *)clearContactDel {
  result.contactDelArray = nil;
  return self;
}
- (ES_PBAppendableArray *)contactSyncSummary {
  return result.contactSyncSummaryArray;
}
- (SyncSummary*)contactSyncSummaryAtIndex:(NSUInteger)index {
  return [result contactSyncSummaryAtIndex:index];
}
- (SyncUploadContactRequest_Builder *)addContactSyncSummary:(SyncSummary*)value {
  if (result.contactSyncSummaryArray == nil) {
    result.contactSyncSummaryArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeObject];
  }
  [result.contactSyncSummaryArray addObject:value];
  return self;
}
- (SyncUploadContactRequest_Builder *)setContactSyncSummaryArray:(NSArray *)array {
  result.contactSyncSummaryArray = [ES_PBAppendableArray arrayWithArray:array valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (SyncUploadContactRequest_Builder *)setContactSyncSummaryValues:(const SyncSummary* *)values count:(NSUInteger)count {
  result.contactSyncSummaryArray = [ES_PBAppendableArray arrayWithValues:values count:count valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (SyncUploadContactRequest_Builder *)clearContactSyncSummary {
  result.contactSyncSummaryArray = nil;
  return self;
}
- (ES_PBAppendableArray *)groupAdd {
  return result.groupAddArray;
}
- (Group*)groupAddAtIndex:(NSUInteger)index {
  return [result groupAddAtIndex:index];
}
- (SyncUploadContactRequest_Builder *)addGroupAdd:(Group*)value {
  if (result.groupAddArray == nil) {
    result.groupAddArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeObject];
  }
  [result.groupAddArray addObject:value];
  return self;
}
- (SyncUploadContactRequest_Builder *)setGroupAddArray:(NSArray *)array {
  result.groupAddArray = [ES_PBAppendableArray arrayWithArray:array valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (SyncUploadContactRequest_Builder *)setGroupAddValues:(const Group* *)values count:(NSUInteger)count {
  result.groupAddArray = [ES_PBAppendableArray arrayWithValues:values count:count valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (SyncUploadContactRequest_Builder *)clearGroupAdd {
  result.groupAddArray = nil;
  return self;
}
- (ES_PBAppendableArray *)groupUpd {
  return result.groupUpdArray;
}
- (Group*)groupUpdAtIndex:(NSUInteger)index {
  return [result groupUpdAtIndex:index];
}
- (SyncUploadContactRequest_Builder *)addGroupUpd:(Group*)value {
  if (result.groupUpdArray == nil) {
    result.groupUpdArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeObject];
  }
  [result.groupUpdArray addObject:value];
  return self;
}
- (SyncUploadContactRequest_Builder *)setGroupUpdArray:(NSArray *)array {
  result.groupUpdArray = [ES_PBAppendableArray arrayWithArray:array valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (SyncUploadContactRequest_Builder *)setGroupUpdValues:(const Group* *)values count:(NSUInteger)count {
  result.groupUpdArray = [ES_PBAppendableArray arrayWithValues:values count:count valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (SyncUploadContactRequest_Builder *)clearGroupUpd {
  result.groupUpdArray = nil;
  return self;
}
- (ES_PBAppendableArray *)groupDel {
  return result.groupDelArray;
}
- (int32_t)groupDelAtIndex:(NSUInteger)index {
  return [result groupDelAtIndex:index];
}
- (SyncUploadContactRequest_Builder *)addGroupDel:(int32_t)value {
  if (result.groupDelArray == nil) {
    result.groupDelArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeInt32];
  }
  [result.groupDelArray addInt32:value];
  return self;
}
- (SyncUploadContactRequest_Builder *)setGroupDelArray:(NSArray *)array {
  result.groupDelArray = [ES_PBAppendableArray arrayWithArray:array valueType:ES_PBArrayValueTypeInt32];
  return self;
}
- (SyncUploadContactRequest_Builder *)setGroupDelValues:(const int32_t *)values count:(NSUInteger)count {
  result.groupDelArray = [ES_PBAppendableArray arrayWithValues:values count:count valueType:ES_PBArrayValueTypeInt32];
  return self;
}
- (SyncUploadContactRequest_Builder *)clearGroupDel {
  result.groupDelArray = nil;
  return self;
}
- (ES_PBAppendableArray *)groupSyncSummary {
  return result.groupSyncSummaryArray;
}
- (SyncSummary*)groupSyncSummaryAtIndex:(NSUInteger)index {
  return [result groupSyncSummaryAtIndex:index];
}
- (SyncUploadContactRequest_Builder *)addGroupSyncSummary:(SyncSummary*)value {
  if (result.groupSyncSummaryArray == nil) {
    result.groupSyncSummaryArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeObject];
  }
  [result.groupSyncSummaryArray addObject:value];
  return self;
}
- (SyncUploadContactRequest_Builder *)setGroupSyncSummaryArray:(NSArray *)array {
  result.groupSyncSummaryArray = [ES_PBAppendableArray arrayWithArray:array valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (SyncUploadContactRequest_Builder *)setGroupSyncSummaryValues:(const SyncSummary* *)values count:(NSUInteger)count {
  result.groupSyncSummaryArray = [ES_PBAppendableArray arrayWithValues:values count:count valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (SyncUploadContactRequest_Builder *)clearGroupSyncSummary {
  result.groupSyncSummaryArray = nil;
  return self;
}
- (BOOL) hasBusinessCard {
  return result.hasBusinessCard;
}
- (Contact*) businessCard {
  return result.businessCard;
}
- (SyncUploadContactRequest_Builder*) setBusinessCard:(Contact*) value {
  result.hasBusinessCard = YES;
  result.businessCard = value;
  return self;
}
- (SyncUploadContactRequest_Builder*) setBusinessCardBuilder:(Contact_Builder*) builderForValue {
  return [self setBusinessCard:[builderForValue build]];
}
- (SyncUploadContactRequest_Builder*) mergeBusinessCard:(Contact*) value {
  if (result.hasBusinessCard &&
      result.businessCard != [Contact defaultInstance]) {
    result.businessCard =
      [[[Contact builderWithPrototype:result.businessCard] mergeFrom:value] buildPartial];
  } else {
    result.businessCard = value;
  }
  result.hasBusinessCard = YES;
  return self;
}
- (SyncUploadContactRequest_Builder*) clearBusinessCard {
  result.hasBusinessCard = NO;
  result.businessCard = [Contact defaultInstance];
  return self;
}
- (BOOL) hasBusinessCardVersion {
  return result.hasBusinessCardVersion;
}
- (int32_t) businessCardVersion {
  return result.businessCardVersion;
}
- (SyncUploadContactRequest_Builder*) setBusinessCardVersion:(int32_t) value {
  result.hasBusinessCardVersion = YES;
  result.businessCardVersion = value;
  return self;
}
- (SyncUploadContactRequest_Builder*) clearBusinessCardVersion {
  result.hasBusinessCardVersion = NO;
  result.businessCardVersion = 0;
  return self;
}
@end

@interface SyncUploadContactResponse ()
@property int32_t contactListVersion;
@property (retain) NSString* sessionId;
@property (retain) ES_PBAppendableArray * contactMappingInfoArray;
@property (retain) ES_PBAppendableArray * deletedContactIdArray;
@property (retain) ES_PBAppendableArray * updatedContactIdArray;
@property (retain) ES_PBAppendableArray * groupMappingInfoArray;
@property (retain) ES_PBAppendableArray * deletedGroupIdArray;
@property (retain) ES_PBAppendableArray * updatedGroupIdArray;
@property int32_t businessCardVersion;
@end

@implementation SyncUploadContactResponse

- (BOOL) hasContactListVersion {
  return !!hasContactListVersion_;
}
- (void) setHasContactListVersion:(BOOL) value_ {
  hasContactListVersion_ = !!value_;
}
@synthesize contactListVersion;
- (BOOL) hasSessionId {
  return !!hasSessionId_;
}
- (void) setHasSessionId:(BOOL) value_ {
  hasSessionId_ = !!value_;
}
@synthesize sessionId;
@synthesize contactMappingInfoArray;
@dynamic contactMappingInfo;
@synthesize deletedContactIdArray;
@dynamic deletedContactId;
@synthesize updatedContactIdArray;
@dynamic updatedContactId;
@synthesize groupMappingInfoArray;
@dynamic groupMappingInfo;
@synthesize deletedGroupIdArray;
@dynamic deletedGroupId;
@synthesize updatedGroupIdArray;
@dynamic updatedGroupId;
- (BOOL) hasBusinessCardVersion {
  return !!hasBusinessCardVersion_;
}
- (void) setHasBusinessCardVersion:(BOOL) value_ {
  hasBusinessCardVersion_ = !!value_;
}
@synthesize businessCardVersion;
- (void) dealloc {
  self.sessionId = nil;
  self.contactMappingInfoArray = nil;
  self.deletedContactIdArray = nil;
  self.updatedContactIdArray = nil;
  self.groupMappingInfoArray = nil;
  self.deletedGroupIdArray = nil;
  self.updatedGroupIdArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.contactListVersion = 0;
    self.sessionId = @"";
    self.businessCardVersion = 0;
  }
  return self;
}
static SyncUploadContactResponse* defaultSyncUploadContactResponseInstance = nil;
+ (void) initialize {
  if (self == [SyncUploadContactResponse class]) {
    defaultSyncUploadContactResponseInstance = [[SyncUploadContactResponse alloc] init];
  }
}
+ (SyncUploadContactResponse*) defaultInstance {
  return defaultSyncUploadContactResponseInstance;
}
- (SyncUploadContactResponse*) defaultInstance {
  return defaultSyncUploadContactResponseInstance;
}
- (ES_PBArray *)contactMappingInfo {
  return contactMappingInfoArray;
}
- (SyncMappingInfo*)contactMappingInfoAtIndex:(NSUInteger)index {
  return [contactMappingInfoArray objectAtIndex:index];
}
- (ES_PBArray *)deletedContactId {
  return deletedContactIdArray;
}
- (int32_t)deletedContactIdAtIndex:(NSUInteger)index {
  return [deletedContactIdArray int32AtIndex:index];
}
- (ES_PBArray *)updatedContactId {
  return updatedContactIdArray;
}
- (int32_t)updatedContactIdAtIndex:(NSUInteger)index {
  return [updatedContactIdArray int32AtIndex:index];
}
- (ES_PBArray *)groupMappingInfo {
  return groupMappingInfoArray;
}
- (SyncMappingInfo*)groupMappingInfoAtIndex:(NSUInteger)index {
  return [groupMappingInfoArray objectAtIndex:index];
}
- (ES_PBArray *)deletedGroupId {
  return deletedGroupIdArray;
}
- (int32_t)deletedGroupIdAtIndex:(NSUInteger)index {
  return [deletedGroupIdArray int32AtIndex:index];
}
- (ES_PBArray *)updatedGroupId {
  return updatedGroupIdArray;
}
- (int32_t)updatedGroupIdAtIndex:(NSUInteger)index {
  return [updatedGroupIdArray int32AtIndex:index];
}
- (BOOL) isInitialized {
  for (SyncMappingInfo* element in self.contactMappingInfo) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (SyncMappingInfo* element in self.groupMappingInfo) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(ES_PBCodedOutputStream*) output {
  if (self.hasContactListVersion) {
    [output writeInt32:1 value:self.contactListVersion];
  }
  if (self.hasSessionId) {
    [output writeString:2 value:self.sessionId];
  }
  for (SyncMappingInfo *element in self.contactMappingInfoArray) {
    [output writeMessage:3 value:element];
  }
  const NSUInteger deletedContactIdArrayCount = self.deletedContactIdArray.count;
  if (deletedContactIdArrayCount > 0) {
    const int32_t *values = (const int32_t *)self.deletedContactIdArray.data;
    [output writeRawVarint32:34];
    [output writeRawVarint32:deletedContactIdMemoizedSerializedSize];
    for (NSUInteger i = 0; i < deletedContactIdArrayCount; ++i) {
      [output writeInt32NoTag:values[i]];
    }
  }
  const NSUInteger updatedContactIdArrayCount = self.updatedContactIdArray.count;
  if (updatedContactIdArrayCount > 0) {
    const int32_t *values = (const int32_t *)self.updatedContactIdArray.data;
    [output writeRawVarint32:42];
    [output writeRawVarint32:updatedContactIdMemoizedSerializedSize];
    for (NSUInteger i = 0; i < updatedContactIdArrayCount; ++i) {
      [output writeInt32NoTag:values[i]];
    }
  }
  for (SyncMappingInfo *element in self.groupMappingInfoArray) {
    [output writeMessage:6 value:element];
  }
  const NSUInteger deletedGroupIdArrayCount = self.deletedGroupIdArray.count;
  if (deletedGroupIdArrayCount > 0) {
    const int32_t *values = (const int32_t *)self.deletedGroupIdArray.data;
    [output writeRawVarint32:58];
    [output writeRawVarint32:deletedGroupIdMemoizedSerializedSize];
    for (NSUInteger i = 0; i < deletedGroupIdArrayCount; ++i) {
      [output writeInt32NoTag:values[i]];
    }
  }
  const NSUInteger updatedGroupIdArrayCount = self.updatedGroupIdArray.count;
  if (updatedGroupIdArrayCount > 0) {
    const int32_t *values = (const int32_t *)self.updatedGroupIdArray.data;
    [output writeRawVarint32:66];
    [output writeRawVarint32:updatedGroupIdMemoizedSerializedSize];
    for (NSUInteger i = 0; i < updatedGroupIdArrayCount; ++i) {
      [output writeInt32NoTag:values[i]];
    }
  }
  if (self.hasBusinessCardVersion) {
    [output writeInt32:9 value:self.businessCardVersion];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasContactListVersion) {
    size_ += ES_computeInt32Size(1, self.contactListVersion);
  }
  if (self.hasSessionId) {
    size_ += ES_computeStringSize(2, self.sessionId);
  }
  for (SyncMappingInfo *element in self.contactMappingInfoArray) {
    size_ += ES_computeMessageSize(3, element);
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.deletedContactIdArray.count;
    const int32_t *values = (const int32_t *)self.deletedContactIdArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += ES_computeInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    if (count > 0) {
      size_ += 1;
      size_ += ES_computeInt32SizeNoTag(dataSize);
    }
    deletedContactIdMemoizedSerializedSize = dataSize;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.updatedContactIdArray.count;
    const int32_t *values = (const int32_t *)self.updatedContactIdArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += ES_computeInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    if (count > 0) {
      size_ += 1;
      size_ += ES_computeInt32SizeNoTag(dataSize);
    }
    updatedContactIdMemoizedSerializedSize = dataSize;
  }
  for (SyncMappingInfo *element in self.groupMappingInfoArray) {
    size_ += ES_computeMessageSize(6, element);
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.deletedGroupIdArray.count;
    const int32_t *values = (const int32_t *)self.deletedGroupIdArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += ES_computeInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    if (count > 0) {
      size_ += 1;
      size_ += ES_computeInt32SizeNoTag(dataSize);
    }
    deletedGroupIdMemoizedSerializedSize = dataSize;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.updatedGroupIdArray.count;
    const int32_t *values = (const int32_t *)self.updatedGroupIdArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += ES_computeInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    if (count > 0) {
      size_ += 1;
      size_ += ES_computeInt32SizeNoTag(dataSize);
    }
    updatedGroupIdMemoizedSerializedSize = dataSize;
  }
  if (self.hasBusinessCardVersion) {
    size_ += ES_computeInt32Size(9, self.businessCardVersion);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SyncUploadContactResponse*) parseFromData:(NSData*) data {
  return (SyncUploadContactResponse*)[[[SyncUploadContactResponse builder] mergeFromData:data] build];
}
+ (SyncUploadContactResponse*) parseFromData:(NSData*) data extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (SyncUploadContactResponse*)[[[SyncUploadContactResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SyncUploadContactResponse*) parseFromInputStream:(NSInputStream*) input {
  return (SyncUploadContactResponse*)[[[SyncUploadContactResponse builder] mergeFromInputStream:input] build];
}
+ (SyncUploadContactResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (SyncUploadContactResponse*)[[[SyncUploadContactResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncUploadContactResponse*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return (SyncUploadContactResponse*)[[[SyncUploadContactResponse builder] mergeFromCodedInputStream:input] build];
}
+ (SyncUploadContactResponse*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (SyncUploadContactResponse*)[[[SyncUploadContactResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncUploadContactResponse_Builder*) builder {
  return [[[SyncUploadContactResponse_Builder alloc] init] autorelease];
}
+ (SyncUploadContactResponse_Builder*) builderWithPrototype:(SyncUploadContactResponse*) prototype {
  return [[SyncUploadContactResponse builder] mergeFrom:prototype];
}
- (SyncUploadContactResponse_Builder*) builder {
  return [SyncUploadContactResponse builder];
}
- (SyncUploadContactResponse_Builder*) toBuilder {
  return [SyncUploadContactResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasContactListVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"contactListVersion", [NSNumber numberWithInt:self.contactListVersion]];
  }
  if (self.hasSessionId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sessionId", self.sessionId];
  }
  for (SyncMappingInfo* element in self.contactMappingInfoArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"contactMappingInfo"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (NSNumber* value in self.deletedContactIdArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deletedContactId", value];
  }
  for (NSNumber* value in self.updatedContactIdArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updatedContactId", value];
  }
  for (SyncMappingInfo* element in self.groupMappingInfoArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"groupMappingInfo"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (NSNumber* value in self.deletedGroupIdArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deletedGroupId", value];
  }
  for (NSNumber* value in self.updatedGroupIdArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updatedGroupId", value];
  }
  if (self.hasBusinessCardVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"businessCardVersion", [NSNumber numberWithInt:self.businessCardVersion]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SyncUploadContactResponse class]]) {
    return NO;
  }
  SyncUploadContactResponse *otherMessage = other;
  return
      self.hasContactListVersion == otherMessage.hasContactListVersion &&
      (!self.hasContactListVersion || self.contactListVersion == otherMessage.contactListVersion) &&
      self.hasSessionId == otherMessage.hasSessionId &&
      (!self.hasSessionId || [self.sessionId isEqual:otherMessage.sessionId]) &&
      [self.contactMappingInfoArray isEqualToArray:otherMessage.contactMappingInfoArray] &&
      [self.deletedContactIdArray isEqualToArray:otherMessage.deletedContactIdArray] &&
      [self.updatedContactIdArray isEqualToArray:otherMessage.updatedContactIdArray] &&
      [self.groupMappingInfoArray isEqualToArray:otherMessage.groupMappingInfoArray] &&
      [self.deletedGroupIdArray isEqualToArray:otherMessage.deletedGroupIdArray] &&
      [self.updatedGroupIdArray isEqualToArray:otherMessage.updatedGroupIdArray] &&
      self.hasBusinessCardVersion == otherMessage.hasBusinessCardVersion &&
      (!self.hasBusinessCardVersion || self.businessCardVersion == otherMessage.businessCardVersion) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasContactListVersion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.contactListVersion] hash];
  }
  if (self.hasSessionId) {
    hashCode = hashCode * 31 + [self.sessionId hash];
  }
  for (SyncMappingInfo* element in self.contactMappingInfoArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (NSNumber* value in self.deletedContactIdArray) {
    hashCode = hashCode * 31 + [value intValue];
  }
  for (NSNumber* value in self.updatedContactIdArray) {
    hashCode = hashCode * 31 + [value intValue];
  }
  for (SyncMappingInfo* element in self.groupMappingInfoArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (NSNumber* value in self.deletedGroupIdArray) {
    hashCode = hashCode * 31 + [value intValue];
  }
  for (NSNumber* value in self.updatedGroupIdArray) {
    hashCode = hashCode * 31 + [value intValue];
  }
  if (self.hasBusinessCardVersion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.businessCardVersion] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SyncUploadContactResponse_Builder()
@property (retain) SyncUploadContactResponse* result;
@end

@implementation SyncUploadContactResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SyncUploadContactResponse alloc] init] autorelease];
  }
  return self;
}
- (ES_PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SyncUploadContactResponse_Builder*) clear {
  self.result = [[[SyncUploadContactResponse alloc] init] autorelease];
  return self;
}
- (SyncUploadContactResponse_Builder*) clone {
  return [SyncUploadContactResponse builderWithPrototype:result];
}
- (SyncUploadContactResponse*) defaultInstance {
  return [SyncUploadContactResponse defaultInstance];
}
- (SyncUploadContactResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SyncUploadContactResponse*) buildPartial {
  SyncUploadContactResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SyncUploadContactResponse_Builder*) mergeFrom:(SyncUploadContactResponse*) other {
  if (other == [SyncUploadContactResponse defaultInstance]) {
    return self;
  }
  if (other.hasContactListVersion) {
    [self setContactListVersion:other.contactListVersion];
  }
  if (other.hasSessionId) {
    [self setSessionId:other.sessionId];
  }
  if (other.contactMappingInfoArray.count > 0) {
    if (result.contactMappingInfoArray == nil) {
      result.contactMappingInfoArray = [[other.contactMappingInfoArray copyWithZone:[other.contactMappingInfoArray zone]] autorelease];
    } else {
      [result.contactMappingInfoArray appendArray:other.contactMappingInfoArray];
    }
  }
  if (other.deletedContactIdArray.count > 0) {
    if (result.deletedContactIdArray == nil) {
      result.deletedContactIdArray = [[other.deletedContactIdArray copyWithZone:[other.deletedContactIdArray zone]] autorelease];
    } else {
      [result.deletedContactIdArray appendArray:other.deletedContactIdArray];
    }
  }
  if (other.updatedContactIdArray.count > 0) {
    if (result.updatedContactIdArray == nil) {
      result.updatedContactIdArray = [[other.updatedContactIdArray copyWithZone:[other.updatedContactIdArray zone]] autorelease];
    } else {
      [result.updatedContactIdArray appendArray:other.updatedContactIdArray];
    }
  }
  if (other.groupMappingInfoArray.count > 0) {
    if (result.groupMappingInfoArray == nil) {
      result.groupMappingInfoArray = [[other.groupMappingInfoArray copyWithZone:[other.groupMappingInfoArray zone]] autorelease];
    } else {
      [result.groupMappingInfoArray appendArray:other.groupMappingInfoArray];
    }
  }
  if (other.deletedGroupIdArray.count > 0) {
    if (result.deletedGroupIdArray == nil) {
      result.deletedGroupIdArray = [[other.deletedGroupIdArray copyWithZone:[other.deletedGroupIdArray zone]] autorelease];
    } else {
      [result.deletedGroupIdArray appendArray:other.deletedGroupIdArray];
    }
  }
  if (other.updatedGroupIdArray.count > 0) {
    if (result.updatedGroupIdArray == nil) {
      result.updatedGroupIdArray = [[other.updatedGroupIdArray copyWithZone:[other.updatedGroupIdArray zone]] autorelease];
    } else {
      [result.updatedGroupIdArray appendArray:other.updatedGroupIdArray];
    }
  }
  if (other.hasBusinessCardVersion) {
    [self setBusinessCardVersion:other.businessCardVersion];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SyncUploadContactResponse_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[ES_PBExtensionRegistry emptyRegistry]];
}
- (SyncUploadContactResponse_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  ES_PBUnknownFieldSet_Builder* unknownFields = [ES_PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setContactListVersion:[input readInt32]];
        break;
      }
      case 18: {
        [self setSessionId:[input readString]];
        break;
      }
      case 26: {
        SyncMappingInfo_Builder* subBuilder = [SyncMappingInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addContactMappingInfo:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        if (result.deletedContactIdArray == nil) {
          result.deletedContactIdArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeInt32];
        }
        while (input.bytesUntilLimit > 0) {
          [result.deletedContactIdArray addInt32:[input readInt32]];
        }
        [input popLimit:limit];
        break;
      }
      case 42: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        if (result.updatedContactIdArray == nil) {
          result.updatedContactIdArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeInt32];
        }
        while (input.bytesUntilLimit > 0) {
          [result.updatedContactIdArray addInt32:[input readInt32]];
        }
        [input popLimit:limit];
        break;
      }
      case 50: {
        SyncMappingInfo_Builder* subBuilder = [SyncMappingInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGroupMappingInfo:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        if (result.deletedGroupIdArray == nil) {
          result.deletedGroupIdArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeInt32];
        }
        while (input.bytesUntilLimit > 0) {
          [result.deletedGroupIdArray addInt32:[input readInt32]];
        }
        [input popLimit:limit];
        break;
      }
      case 66: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        if (result.updatedGroupIdArray == nil) {
          result.updatedGroupIdArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeInt32];
        }
        while (input.bytesUntilLimit > 0) {
          [result.updatedGroupIdArray addInt32:[input readInt32]];
        }
        [input popLimit:limit];
        break;
      }
      case 72: {
        [self setBusinessCardVersion:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasContactListVersion {
  return result.hasContactListVersion;
}
- (int32_t) contactListVersion {
  return result.contactListVersion;
}
- (SyncUploadContactResponse_Builder*) setContactListVersion:(int32_t) value {
  result.hasContactListVersion = YES;
  result.contactListVersion = value;
  return self;
}
- (SyncUploadContactResponse_Builder*) clearContactListVersion {
  result.hasContactListVersion = NO;
  result.contactListVersion = 0;
  return self;
}
- (BOOL) hasSessionId {
  return result.hasSessionId;
}
- (NSString*) sessionId {
  return result.sessionId;
}
- (SyncUploadContactResponse_Builder*) setSessionId:(NSString*) value {
  result.hasSessionId = YES;
  result.sessionId = value;
  return self;
}
- (SyncUploadContactResponse_Builder*) clearSessionId {
  result.hasSessionId = NO;
  result.sessionId = @"";
  return self;
}
- (ES_PBAppendableArray *)contactMappingInfo {
  return result.contactMappingInfoArray;
}
- (SyncMappingInfo*)contactMappingInfoAtIndex:(NSUInteger)index {
  return [result contactMappingInfoAtIndex:index];
}
- (SyncUploadContactResponse_Builder *)addContactMappingInfo:(SyncMappingInfo*)value {
  if (result.contactMappingInfoArray == nil) {
    result.contactMappingInfoArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeObject];
  }
  [result.contactMappingInfoArray addObject:value];
  return self;
}
- (SyncUploadContactResponse_Builder *)setContactMappingInfoArray:(NSArray *)array {
  result.contactMappingInfoArray = [ES_PBAppendableArray arrayWithArray:array valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (SyncUploadContactResponse_Builder *)setContactMappingInfoValues:(const SyncMappingInfo* *)values count:(NSUInteger)count {
  result.contactMappingInfoArray = [ES_PBAppendableArray arrayWithValues:values count:count valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (SyncUploadContactResponse_Builder *)clearContactMappingInfo {
  result.contactMappingInfoArray = nil;
  return self;
}
- (ES_PBAppendableArray *)deletedContactId {
  return result.deletedContactIdArray;
}
- (int32_t)deletedContactIdAtIndex:(NSUInteger)index {
  return [result deletedContactIdAtIndex:index];
}
- (SyncUploadContactResponse_Builder *)addDeletedContactId:(int32_t)value {
  if (result.deletedContactIdArray == nil) {
    result.deletedContactIdArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeInt32];
  }
  [result.deletedContactIdArray addInt32:value];
  return self;
}
- (SyncUploadContactResponse_Builder *)setDeletedContactIdArray:(NSArray *)array {
  result.deletedContactIdArray = [ES_PBAppendableArray arrayWithArray:array valueType:ES_PBArrayValueTypeInt32];
  return self;
}
- (SyncUploadContactResponse_Builder *)setDeletedContactIdValues:(const int32_t *)values count:(NSUInteger)count {
  result.deletedContactIdArray = [ES_PBAppendableArray arrayWithValues:values count:count valueType:ES_PBArrayValueTypeInt32];
  return self;
}
- (SyncUploadContactResponse_Builder *)clearDeletedContactId {
  result.deletedContactIdArray = nil;
  return self;
}
- (ES_PBAppendableArray *)updatedContactId {
  return result.updatedContactIdArray;
}
- (int32_t)updatedContactIdAtIndex:(NSUInteger)index {
  return [result updatedContactIdAtIndex:index];
}
- (SyncUploadContactResponse_Builder *)addUpdatedContactId:(int32_t)value {
  if (result.updatedContactIdArray == nil) {
    result.updatedContactIdArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeInt32];
  }
  [result.updatedContactIdArray addInt32:value];
  return self;
}
- (SyncUploadContactResponse_Builder *)setUpdatedContactIdArray:(NSArray *)array {
  result.updatedContactIdArray = [ES_PBAppendableArray arrayWithArray:array valueType:ES_PBArrayValueTypeInt32];
  return self;
}
- (SyncUploadContactResponse_Builder *)setUpdatedContactIdValues:(const int32_t *)values count:(NSUInteger)count {
  result.updatedContactIdArray = [ES_PBAppendableArray arrayWithValues:values count:count valueType:ES_PBArrayValueTypeInt32];
  return self;
}
- (SyncUploadContactResponse_Builder *)clearUpdatedContactId {
  result.updatedContactIdArray = nil;
  return self;
}
- (ES_PBAppendableArray *)groupMappingInfo {
  return result.groupMappingInfoArray;
}
- (SyncMappingInfo*)groupMappingInfoAtIndex:(NSUInteger)index {
  return [result groupMappingInfoAtIndex:index];
}
- (SyncUploadContactResponse_Builder *)addGroupMappingInfo:(SyncMappingInfo*)value {
  if (result.groupMappingInfoArray == nil) {
    result.groupMappingInfoArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeObject];
  }
  [result.groupMappingInfoArray addObject:value];
  return self;
}
- (SyncUploadContactResponse_Builder *)setGroupMappingInfoArray:(NSArray *)array {
  result.groupMappingInfoArray = [ES_PBAppendableArray arrayWithArray:array valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (SyncUploadContactResponse_Builder *)setGroupMappingInfoValues:(const SyncMappingInfo* *)values count:(NSUInteger)count {
  result.groupMappingInfoArray = [ES_PBAppendableArray arrayWithValues:values count:count valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (SyncUploadContactResponse_Builder *)clearGroupMappingInfo {
  result.groupMappingInfoArray = nil;
  return self;
}
- (ES_PBAppendableArray *)deletedGroupId {
  return result.deletedGroupIdArray;
}
- (int32_t)deletedGroupIdAtIndex:(NSUInteger)index {
  return [result deletedGroupIdAtIndex:index];
}
- (SyncUploadContactResponse_Builder *)addDeletedGroupId:(int32_t)value {
  if (result.deletedGroupIdArray == nil) {
    result.deletedGroupIdArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeInt32];
  }
  [result.deletedGroupIdArray addInt32:value];
  return self;
}
- (SyncUploadContactResponse_Builder *)setDeletedGroupIdArray:(NSArray *)array {
  result.deletedGroupIdArray = [ES_PBAppendableArray arrayWithArray:array valueType:ES_PBArrayValueTypeInt32];
  return self;
}
- (SyncUploadContactResponse_Builder *)setDeletedGroupIdValues:(const int32_t *)values count:(NSUInteger)count {
  result.deletedGroupIdArray = [ES_PBAppendableArray arrayWithValues:values count:count valueType:ES_PBArrayValueTypeInt32];
  return self;
}
- (SyncUploadContactResponse_Builder *)clearDeletedGroupId {
  result.deletedGroupIdArray = nil;
  return self;
}
- (ES_PBAppendableArray *)updatedGroupId {
  return result.updatedGroupIdArray;
}
- (int32_t)updatedGroupIdAtIndex:(NSUInteger)index {
  return [result updatedGroupIdAtIndex:index];
}
- (SyncUploadContactResponse_Builder *)addUpdatedGroupId:(int32_t)value {
  if (result.updatedGroupIdArray == nil) {
    result.updatedGroupIdArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeInt32];
  }
  [result.updatedGroupIdArray addInt32:value];
  return self;
}
- (SyncUploadContactResponse_Builder *)setUpdatedGroupIdArray:(NSArray *)array {
  result.updatedGroupIdArray = [ES_PBAppendableArray arrayWithArray:array valueType:ES_PBArrayValueTypeInt32];
  return self;
}
- (SyncUploadContactResponse_Builder *)setUpdatedGroupIdValues:(const int32_t *)values count:(NSUInteger)count {
  result.updatedGroupIdArray = [ES_PBAppendableArray arrayWithValues:values count:count valueType:ES_PBArrayValueTypeInt32];
  return self;
}
- (SyncUploadContactResponse_Builder *)clearUpdatedGroupId {
  result.updatedGroupIdArray = nil;
  return self;
}
- (BOOL) hasBusinessCardVersion {
  return result.hasBusinessCardVersion;
}
- (int32_t) businessCardVersion {
  return result.businessCardVersion;
}
- (SyncUploadContactResponse_Builder*) setBusinessCardVersion:(int32_t) value {
  result.hasBusinessCardVersion = YES;
  result.businessCardVersion = value;
  return self;
}
- (SyncUploadContactResponse_Builder*) clearBusinessCardVersion {
  result.hasBusinessCardVersion = NO;
  result.businessCardVersion = 0;
  return self;
}
@end

@interface SyncMappingInfo ()
@property int32_t tempServerId;
@property int32_t serverId;
@property int32_t version;
@end

@implementation SyncMappingInfo

- (BOOL) hasTempServerId {
  return !!hasTempServerId_;
}
- (void) setHasTempServerId:(BOOL) value_ {
  hasTempServerId_ = !!value_;
}
@synthesize tempServerId;
- (BOOL) hasServerId {
  return !!hasServerId_;
}
- (void) setHasServerId:(BOOL) value_ {
  hasServerId_ = !!value_;
}
@synthesize serverId;
- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) value_ {
  hasVersion_ = !!value_;
}
@synthesize version;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.tempServerId = 0;
    self.serverId = 0;
    self.version = 0;
  }
  return self;
}
static SyncMappingInfo* defaultSyncMappingInfoInstance = nil;
+ (void) initialize {
  if (self == [SyncMappingInfo class]) {
    defaultSyncMappingInfoInstance = [[SyncMappingInfo alloc] init];
  }
}
+ (SyncMappingInfo*) defaultInstance {
  return defaultSyncMappingInfoInstance;
}
- (SyncMappingInfo*) defaultInstance {
  return defaultSyncMappingInfoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasTempServerId) {
    return NO;
  }
  if (!self.hasServerId) {
    return NO;
  }
  if (!self.hasVersion) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(ES_PBCodedOutputStream*) output {
  if (self.hasTempServerId) {
    [output writeInt32:1 value:self.tempServerId];
  }
  if (self.hasServerId) {
    [output writeInt32:2 value:self.serverId];
  }
  if (self.hasVersion) {
    [output writeInt32:3 value:self.version];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasTempServerId) {
    size_ += ES_computeInt32Size(1, self.tempServerId);
  }
  if (self.hasServerId) {
    size_ += ES_computeInt32Size(2, self.serverId);
  }
  if (self.hasVersion) {
    size_ += ES_computeInt32Size(3, self.version);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SyncMappingInfo*) parseFromData:(NSData*) data {
  return (SyncMappingInfo*)[[[SyncMappingInfo builder] mergeFromData:data] build];
}
+ (SyncMappingInfo*) parseFromData:(NSData*) data extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (SyncMappingInfo*)[[[SyncMappingInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SyncMappingInfo*) parseFromInputStream:(NSInputStream*) input {
  return (SyncMappingInfo*)[[[SyncMappingInfo builder] mergeFromInputStream:input] build];
}
+ (SyncMappingInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (SyncMappingInfo*)[[[SyncMappingInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncMappingInfo*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return (SyncMappingInfo*)[[[SyncMappingInfo builder] mergeFromCodedInputStream:input] build];
}
+ (SyncMappingInfo*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (SyncMappingInfo*)[[[SyncMappingInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncMappingInfo_Builder*) builder {
  return [[[SyncMappingInfo_Builder alloc] init] autorelease];
}
+ (SyncMappingInfo_Builder*) builderWithPrototype:(SyncMappingInfo*) prototype {
  return [[SyncMappingInfo builder] mergeFrom:prototype];
}
- (SyncMappingInfo_Builder*) builder {
  return [SyncMappingInfo builder];
}
- (SyncMappingInfo_Builder*) toBuilder {
  return [SyncMappingInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTempServerId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"tempServerId", [NSNumber numberWithInt:self.tempServerId]];
  }
  if (self.hasServerId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"serverId", [NSNumber numberWithInt:self.serverId]];
  }
  if (self.hasVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"version", [NSNumber numberWithInt:self.version]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SyncMappingInfo class]]) {
    return NO;
  }
  SyncMappingInfo *otherMessage = other;
  return
      self.hasTempServerId == otherMessage.hasTempServerId &&
      (!self.hasTempServerId || self.tempServerId == otherMessage.tempServerId) &&
      self.hasServerId == otherMessage.hasServerId &&
      (!self.hasServerId || self.serverId == otherMessage.serverId) &&
      self.hasVersion == otherMessage.hasVersion &&
      (!self.hasVersion || self.version == otherMessage.version) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasTempServerId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.tempServerId] hash];
  }
  if (self.hasServerId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.serverId] hash];
  }
  if (self.hasVersion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.version] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SyncMappingInfo_Builder()
@property (retain) SyncMappingInfo* result;
@end

@implementation SyncMappingInfo_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SyncMappingInfo alloc] init] autorelease];
  }
  return self;
}
- (ES_PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SyncMappingInfo_Builder*) clear {
  self.result = [[[SyncMappingInfo alloc] init] autorelease];
  return self;
}
- (SyncMappingInfo_Builder*) clone {
  return [SyncMappingInfo builderWithPrototype:result];
}
- (SyncMappingInfo*) defaultInstance {
  return [SyncMappingInfo defaultInstance];
}
- (SyncMappingInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SyncMappingInfo*) buildPartial {
  SyncMappingInfo* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SyncMappingInfo_Builder*) mergeFrom:(SyncMappingInfo*) other {
  if (other == [SyncMappingInfo defaultInstance]) {
    return self;
  }
  if (other.hasTempServerId) {
    [self setTempServerId:other.tempServerId];
  }
  if (other.hasServerId) {
    [self setServerId:other.serverId];
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SyncMappingInfo_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[ES_PBExtensionRegistry emptyRegistry]];
}
- (SyncMappingInfo_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  ES_PBUnknownFieldSet_Builder* unknownFields = [ES_PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setTempServerId:[input readInt32]];
        break;
      }
      case 16: {
        [self setServerId:[input readInt32]];
        break;
      }
      case 24: {
        [self setVersion:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasTempServerId {
  return result.hasTempServerId;
}
- (int32_t) tempServerId {
  return result.tempServerId;
}
- (SyncMappingInfo_Builder*) setTempServerId:(int32_t) value {
  result.hasTempServerId = YES;
  result.tempServerId = value;
  return self;
}
- (SyncMappingInfo_Builder*) clearTempServerId {
  result.hasTempServerId = NO;
  result.tempServerId = 0;
  return self;
}
- (BOOL) hasServerId {
  return result.hasServerId;
}
- (int32_t) serverId {
  return result.serverId;
}
- (SyncMappingInfo_Builder*) setServerId:(int32_t) value {
  result.hasServerId = YES;
  result.serverId = value;
  return self;
}
- (SyncMappingInfo_Builder*) clearServerId {
  result.hasServerId = NO;
  result.serverId = 0;
  return self;
}
- (BOOL) hasVersion {
  return result.hasVersion;
}
- (int32_t) version {
  return result.version;
}
- (SyncMappingInfo_Builder*) setVersion:(int32_t) value {
  result.hasVersion = YES;
  result.version = value;
  return self;
}
- (SyncMappingInfo_Builder*) clearVersion {
  result.hasVersion = NO;
  result.version = 0;
  return self;
}
@end

@interface SyncSummary ()
@property int32_t id;
@property int32_t version;
@end

@implementation SyncSummary

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) value_ {
  hasVersion_ = !!value_;
}
@synthesize version;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0;
    self.version = 0;
  }
  return self;
}
static SyncSummary* defaultSyncSummaryInstance = nil;
+ (void) initialize {
  if (self == [SyncSummary class]) {
    defaultSyncSummaryInstance = [[SyncSummary alloc] init];
  }
}
+ (SyncSummary*) defaultInstance {
  return defaultSyncSummaryInstance;
}
- (SyncSummary*) defaultInstance {
  return defaultSyncSummaryInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasVersion) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(ES_PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt32:1 value:self.id];
  }
  if (self.hasVersion) {
    [output writeInt32:2 value:self.version];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += ES_computeInt32Size(1, self.id);
  }
  if (self.hasVersion) {
    size_ += ES_computeInt32Size(2, self.version);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SyncSummary*) parseFromData:(NSData*) data {
  return (SyncSummary*)[[[SyncSummary builder] mergeFromData:data] build];
}
+ (SyncSummary*) parseFromData:(NSData*) data extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (SyncSummary*)[[[SyncSummary builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SyncSummary*) parseFromInputStream:(NSInputStream*) input {
  return (SyncSummary*)[[[SyncSummary builder] mergeFromInputStream:input] build];
}
+ (SyncSummary*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (SyncSummary*)[[[SyncSummary builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncSummary*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return (SyncSummary*)[[[SyncSummary builder] mergeFromCodedInputStream:input] build];
}
+ (SyncSummary*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (SyncSummary*)[[[SyncSummary builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncSummary_Builder*) builder {
  return [[[SyncSummary_Builder alloc] init] autorelease];
}
+ (SyncSummary_Builder*) builderWithPrototype:(SyncSummary*) prototype {
  return [[SyncSummary builder] mergeFrom:prototype];
}
- (SyncSummary_Builder*) builder {
  return [SyncSummary builder];
}
- (SyncSummary_Builder*) toBuilder {
  return [SyncSummary builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInt:self.id]];
  }
  if (self.hasVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"version", [NSNumber numberWithInt:self.version]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SyncSummary class]]) {
    return NO;
  }
  SyncSummary *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasVersion == otherMessage.hasVersion &&
      (!self.hasVersion || self.version == otherMessage.version) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.id] hash];
  }
  if (self.hasVersion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.version] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SyncSummary_Builder()
@property (retain) SyncSummary* result;
@end

@implementation SyncSummary_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SyncSummary alloc] init] autorelease];
  }
  return self;
}
- (ES_PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SyncSummary_Builder*) clear {
  self.result = [[[SyncSummary alloc] init] autorelease];
  return self;
}
- (SyncSummary_Builder*) clone {
  return [SyncSummary builderWithPrototype:result];
}
- (SyncSummary*) defaultInstance {
  return [SyncSummary defaultInstance];
}
- (SyncSummary*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SyncSummary*) buildPartial {
  SyncSummary* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SyncSummary_Builder*) mergeFrom:(SyncSummary*) other {
  if (other == [SyncSummary defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SyncSummary_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[ES_PBExtensionRegistry emptyRegistry]];
}
- (SyncSummary_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  ES_PBUnknownFieldSet_Builder* unknownFields = [ES_PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt32]];
        break;
      }
      case 16: {
        [self setVersion:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (SyncSummary_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (SyncSummary_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (BOOL) hasVersion {
  return result.hasVersion;
}
- (int32_t) version {
  return result.version;
}
- (SyncSummary_Builder*) setVersion:(int32_t) value {
  result.hasVersion = YES;
  result.version = value;
  return self;
}
- (SyncSummary_Builder*) clearVersion {
  result.hasVersion = NO;
  result.version = 0;
  return self;
}
@end

