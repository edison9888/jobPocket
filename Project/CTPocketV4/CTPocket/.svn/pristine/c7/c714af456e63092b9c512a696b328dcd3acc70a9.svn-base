// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Sync_download_contact_proto.pb.h"

@implementation SyncDownloadContactProtoRoot
static ES_PBExtensionRegistry* extensionRegistry = nil;
+ (ES_PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [SyncDownloadContactProtoRoot class]) {
    ES_PBMutableExtensionRegistry* registry = [ES_PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [ContactProtoRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(ES_PBMutableExtensionRegistry*) registry {
}
@end

@interface SyncDownloadContactRequest ()
@property (retain) ES_PBAppendableArray * contactIdArray;
@property (retain) ES_PBAppendableArray * groupIdArray;
@property BOOL isRequestBusinessCard;
@end

@implementation SyncDownloadContactRequest

@synthesize contactIdArray;
@dynamic contactId;
@synthesize groupIdArray;
@dynamic groupId;
- (BOOL) hasIsRequestBusinessCard {
  return !!hasIsRequestBusinessCard_;
}
- (void) setHasIsRequestBusinessCard:(BOOL) value_ {
  hasIsRequestBusinessCard_ = !!value_;
}
- (BOOL) isRequestBusinessCard {
  return !!isRequestBusinessCard_;
}
- (void) setIsRequestBusinessCard:(BOOL) value_ {
  isRequestBusinessCard_ = !!value_;
}
- (void) dealloc {
  self.contactIdArray = nil;
  self.groupIdArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.isRequestBusinessCard = NO;
  }
  return self;
}
static SyncDownloadContactRequest* defaultSyncDownloadContactRequestInstance = nil;
+ (void) initialize {
  if (self == [SyncDownloadContactRequest class]) {
    defaultSyncDownloadContactRequestInstance = [[SyncDownloadContactRequest alloc] init];
  }
}
+ (SyncDownloadContactRequest*) defaultInstance {
  return defaultSyncDownloadContactRequestInstance;
}
- (SyncDownloadContactRequest*) defaultInstance {
  return defaultSyncDownloadContactRequestInstance;
}
- (ES_PBArray *)contactId {
  return contactIdArray;
}
- (int32_t)contactIdAtIndex:(NSUInteger)index {
  return [contactIdArray int32AtIndex:index];
}
- (ES_PBArray *)groupId {
  return groupIdArray;
}
- (int32_t)groupIdAtIndex:(NSUInteger)index {
  return [groupIdArray int32AtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(ES_PBCodedOutputStream*) output {
  const NSUInteger contactIdArrayCount = self.contactIdArray.count;
  if (contactIdArrayCount > 0) {
    const int32_t *values = (const int32_t *)self.contactIdArray.data;
    [output writeRawVarint32:10];
    [output writeRawVarint32:contactIdMemoizedSerializedSize];
    for (NSUInteger i = 0; i < contactIdArrayCount; ++i) {
      [output writeInt32NoTag:values[i]];
    }
  }
  const NSUInteger groupIdArrayCount = self.groupIdArray.count;
  if (groupIdArrayCount > 0) {
    const int32_t *values = (const int32_t *)self.groupIdArray.data;
    [output writeRawVarint32:18];
    [output writeRawVarint32:groupIdMemoizedSerializedSize];
    for (NSUInteger i = 0; i < groupIdArrayCount; ++i) {
      [output writeInt32NoTag:values[i]];
    }
  }
  if (self.hasIsRequestBusinessCard) {
    [output writeBool:3 value:self.isRequestBusinessCard];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.contactIdArray.count;
    const int32_t *values = (const int32_t *)self.contactIdArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += ES_computeInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    if (count > 0) {
      size_ += 1;
      size_ += ES_computeInt32SizeNoTag(dataSize);
    }
    contactIdMemoizedSerializedSize = dataSize;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.groupIdArray.count;
    const int32_t *values = (const int32_t *)self.groupIdArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += ES_computeInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    if (count > 0) {
      size_ += 1;
      size_ += ES_computeInt32SizeNoTag(dataSize);
    }
    groupIdMemoizedSerializedSize = dataSize;
  }
  if (self.hasIsRequestBusinessCard) {
    size_ += ES_computeBoolSize(3, self.isRequestBusinessCard);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SyncDownloadContactRequest*) parseFromData:(NSData*) data {
  return (SyncDownloadContactRequest*)[[[SyncDownloadContactRequest builder] mergeFromData:data] build];
}
+ (SyncDownloadContactRequest*) parseFromData:(NSData*) data extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (SyncDownloadContactRequest*)[[[SyncDownloadContactRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SyncDownloadContactRequest*) parseFromInputStream:(NSInputStream*) input {
  return (SyncDownloadContactRequest*)[[[SyncDownloadContactRequest builder] mergeFromInputStream:input] build];
}
+ (SyncDownloadContactRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (SyncDownloadContactRequest*)[[[SyncDownloadContactRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncDownloadContactRequest*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return (SyncDownloadContactRequest*)[[[SyncDownloadContactRequest builder] mergeFromCodedInputStream:input] build];
}
+ (SyncDownloadContactRequest*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (SyncDownloadContactRequest*)[[[SyncDownloadContactRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncDownloadContactRequest_Builder*) builder {
  return [[[SyncDownloadContactRequest_Builder alloc] init] autorelease];
}
+ (SyncDownloadContactRequest_Builder*) builderWithPrototype:(SyncDownloadContactRequest*) prototype {
  return [[SyncDownloadContactRequest builder] mergeFrom:prototype];
}
- (SyncDownloadContactRequest_Builder*) builder {
  return [SyncDownloadContactRequest builder];
}
- (SyncDownloadContactRequest_Builder*) toBuilder {
  return [SyncDownloadContactRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  for (NSNumber* value in self.contactIdArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"contactId", value];
  }
  for (NSNumber* value in self.groupIdArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", value];
  }
  if (self.hasIsRequestBusinessCard) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isRequestBusinessCard", [NSNumber numberWithBool:self.isRequestBusinessCard]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SyncDownloadContactRequest class]]) {
    return NO;
  }
  SyncDownloadContactRequest *otherMessage = other;
  return
      [self.contactIdArray isEqualToArray:otherMessage.contactIdArray] &&
      [self.groupIdArray isEqualToArray:otherMessage.groupIdArray] &&
      self.hasIsRequestBusinessCard == otherMessage.hasIsRequestBusinessCard &&
      (!self.hasIsRequestBusinessCard || self.isRequestBusinessCard == otherMessage.isRequestBusinessCard) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  for (NSNumber* value in self.contactIdArray) {
    hashCode = hashCode * 31 + [value intValue];
  }
  for (NSNumber* value in self.groupIdArray) {
    hashCode = hashCode * 31 + [value intValue];
  }
  if (self.hasIsRequestBusinessCard) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isRequestBusinessCard] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SyncDownloadContactRequest_Builder()
@property (retain) SyncDownloadContactRequest* result;
@end

@implementation SyncDownloadContactRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SyncDownloadContactRequest alloc] init] autorelease];
  }
  return self;
}
- (ES_PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SyncDownloadContactRequest_Builder*) clear {
  self.result = [[[SyncDownloadContactRequest alloc] init] autorelease];
  return self;
}
- (SyncDownloadContactRequest_Builder*) clone {
  return [SyncDownloadContactRequest builderWithPrototype:result];
}
- (SyncDownloadContactRequest*) defaultInstance {
  return [SyncDownloadContactRequest defaultInstance];
}
- (SyncDownloadContactRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SyncDownloadContactRequest*) buildPartial {
  SyncDownloadContactRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SyncDownloadContactRequest_Builder*) mergeFrom:(SyncDownloadContactRequest*) other {
  if (other == [SyncDownloadContactRequest defaultInstance]) {
    return self;
  }
  if (other.contactIdArray.count > 0) {
    if (result.contactIdArray == nil) {
      result.contactIdArray = [[other.contactIdArray copyWithZone:[other.contactIdArray zone]] autorelease];
    } else {
      [result.contactIdArray appendArray:other.contactIdArray];
    }
  }
  if (other.groupIdArray.count > 0) {
    if (result.groupIdArray == nil) {
      result.groupIdArray = [[other.groupIdArray copyWithZone:[other.groupIdArray zone]] autorelease];
    } else {
      [result.groupIdArray appendArray:other.groupIdArray];
    }
  }
  if (other.hasIsRequestBusinessCard) {
    [self setIsRequestBusinessCard:other.isRequestBusinessCard];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SyncDownloadContactRequest_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[ES_PBExtensionRegistry emptyRegistry]];
}
- (SyncDownloadContactRequest_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  ES_PBUnknownFieldSet_Builder* unknownFields = [ES_PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        if (result.contactIdArray == nil) {
          result.contactIdArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeInt32];
        }
        while (input.bytesUntilLimit > 0) {
          [result.contactIdArray addInt32:[input readInt32]];
        }
        [input popLimit:limit];
        break;
      }
      case 18: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        if (result.groupIdArray == nil) {
          result.groupIdArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeInt32];
        }
        while (input.bytesUntilLimit > 0) {
          [result.groupIdArray addInt32:[input readInt32]];
        }
        [input popLimit:limit];
        break;
      }
      case 24: {
        [self setIsRequestBusinessCard:[input readBool]];
        break;
      }
    }
  }
}
- (ES_PBAppendableArray *)contactId {
  return result.contactIdArray;
}
- (int32_t)contactIdAtIndex:(NSUInteger)index {
  return [result contactIdAtIndex:index];
}
- (SyncDownloadContactRequest_Builder *)addContactId:(int32_t)value {
  if (result.contactIdArray == nil) {
    result.contactIdArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeInt32];
  }
  [result.contactIdArray addInt32:value];
  return self;
}
- (SyncDownloadContactRequest_Builder *)setContactIdArray:(NSArray *)array {
  result.contactIdArray = [ES_PBAppendableArray arrayWithArray:array valueType:ES_PBArrayValueTypeInt32];
  return self;
}
- (SyncDownloadContactRequest_Builder *)setContactIdValues:(const int32_t *)values count:(NSUInteger)count {
  result.contactIdArray = [ES_PBAppendableArray arrayWithValues:values count:count valueType:ES_PBArrayValueTypeInt32];
  return self;
}
- (SyncDownloadContactRequest_Builder *)clearContactId {
  result.contactIdArray = nil;
  return self;
}
- (ES_PBAppendableArray *)groupId {
  return result.groupIdArray;
}
- (int32_t)groupIdAtIndex:(NSUInteger)index {
  return [result groupIdAtIndex:index];
}
- (SyncDownloadContactRequest_Builder *)addGroupId:(int32_t)value {
  if (result.groupIdArray == nil) {
    result.groupIdArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeInt32];
  }
  [result.groupIdArray addInt32:value];
  return self;
}
- (SyncDownloadContactRequest_Builder *)setGroupIdArray:(NSArray *)array {
  result.groupIdArray = [ES_PBAppendableArray arrayWithArray:array valueType:ES_PBArrayValueTypeInt32];
  return self;
}
- (SyncDownloadContactRequest_Builder *)setGroupIdValues:(const int32_t *)values count:(NSUInteger)count {
  result.groupIdArray = [ES_PBAppendableArray arrayWithValues:values count:count valueType:ES_PBArrayValueTypeInt32];
  return self;
}
- (SyncDownloadContactRequest_Builder *)clearGroupId {
  result.groupIdArray = nil;
  return self;
}
- (BOOL) hasIsRequestBusinessCard {
  return result.hasIsRequestBusinessCard;
}
- (BOOL) isRequestBusinessCard {
  return result.isRequestBusinessCard;
}
- (SyncDownloadContactRequest_Builder*) setIsRequestBusinessCard:(BOOL) value {
  result.hasIsRequestBusinessCard = YES;
  result.isRequestBusinessCard = value;
  return self;
}
- (SyncDownloadContactRequest_Builder*) clearIsRequestBusinessCard {
  result.hasIsRequestBusinessCard = NO;
  result.isRequestBusinessCard = NO;
  return self;
}
@end

@interface SyncDownloadContactResponse ()
@property (retain) ES_PBAppendableArray * contactArray;
@property (retain) ES_PBAppendableArray * groupArray;
@property (retain) Contact* businessCard;
@end

@implementation SyncDownloadContactResponse

@synthesize contactArray;
@dynamic contact;
@synthesize groupArray;
@dynamic group;
- (BOOL) hasBusinessCard {
  return !!hasBusinessCard_;
}
- (void) setHasBusinessCard:(BOOL) value_ {
  hasBusinessCard_ = !!value_;
}
@synthesize businessCard;
- (void) dealloc {
  self.contactArray = nil;
  self.groupArray = nil;
  self.businessCard = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.businessCard = [Contact defaultInstance];
  }
  return self;
}
static SyncDownloadContactResponse* defaultSyncDownloadContactResponseInstance = nil;
+ (void) initialize {
  if (self == [SyncDownloadContactResponse class]) {
    defaultSyncDownloadContactResponseInstance = [[SyncDownloadContactResponse alloc] init];
  }
}
+ (SyncDownloadContactResponse*) defaultInstance {
  return defaultSyncDownloadContactResponseInstance;
}
- (SyncDownloadContactResponse*) defaultInstance {
  return defaultSyncDownloadContactResponseInstance;
}
- (ES_PBArray *)contact {
  return contactArray;
}
- (Contact*)contactAtIndex:(NSUInteger)index {
  return [contactArray objectAtIndex:index];
}
- (ES_PBArray *)group {
  return groupArray;
}
- (Group*)groupAtIndex:(NSUInteger)index {
  return [groupArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(ES_PBCodedOutputStream*) output {
  for (Contact *element in self.contactArray) {
    [output writeMessage:1 value:element];
  }
  for (Group *element in self.groupArray) {
    [output writeMessage:2 value:element];
  }
  if (self.hasBusinessCard) {
    [output writeMessage:3 value:self.businessCard];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  for (Contact *element in self.contactArray) {
    size_ += ES_computeMessageSize(1, element);
  }
  for (Group *element in self.groupArray) {
    size_ += ES_computeMessageSize(2, element);
  }
  if (self.hasBusinessCard) {
    size_ += ES_computeMessageSize(3, self.businessCard);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SyncDownloadContactResponse*) parseFromData:(NSData*) data {
  return (SyncDownloadContactResponse*)[[[SyncDownloadContactResponse builder] mergeFromData:data] build];
}
+ (SyncDownloadContactResponse*) parseFromData:(NSData*) data extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (SyncDownloadContactResponse*)[[[SyncDownloadContactResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SyncDownloadContactResponse*) parseFromInputStream:(NSInputStream*) input {
  return (SyncDownloadContactResponse*)[[[SyncDownloadContactResponse builder] mergeFromInputStream:input] build];
}
+ (SyncDownloadContactResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (SyncDownloadContactResponse*)[[[SyncDownloadContactResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncDownloadContactResponse*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return (SyncDownloadContactResponse*)[[[SyncDownloadContactResponse builder] mergeFromCodedInputStream:input] build];
}
+ (SyncDownloadContactResponse*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (SyncDownloadContactResponse*)[[[SyncDownloadContactResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncDownloadContactResponse_Builder*) builder {
  return [[[SyncDownloadContactResponse_Builder alloc] init] autorelease];
}
+ (SyncDownloadContactResponse_Builder*) builderWithPrototype:(SyncDownloadContactResponse*) prototype {
  return [[SyncDownloadContactResponse builder] mergeFrom:prototype];
}
- (SyncDownloadContactResponse_Builder*) builder {
  return [SyncDownloadContactResponse builder];
}
- (SyncDownloadContactResponse_Builder*) toBuilder {
  return [SyncDownloadContactResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  for (Contact* element in self.contactArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"contact"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (Group* element in self.groupArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"group"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasBusinessCard) {
    [output appendFormat:@"%@%@ {\n", indent, @"businessCard"];
    [self.businessCard writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SyncDownloadContactResponse class]]) {
    return NO;
  }
  SyncDownloadContactResponse *otherMessage = other;
  return
      [self.contactArray isEqualToArray:otherMessage.contactArray] &&
      [self.groupArray isEqualToArray:otherMessage.groupArray] &&
      self.hasBusinessCard == otherMessage.hasBusinessCard &&
      (!self.hasBusinessCard || [self.businessCard isEqual:otherMessage.businessCard]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  for (Contact* element in self.contactArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (Group* element in self.groupArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasBusinessCard) {
    hashCode = hashCode * 31 + [self.businessCard hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SyncDownloadContactResponse_Builder()
@property (retain) SyncDownloadContactResponse* result;
@end

@implementation SyncDownloadContactResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SyncDownloadContactResponse alloc] init] autorelease];
  }
  return self;
}
- (ES_PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SyncDownloadContactResponse_Builder*) clear {
  self.result = [[[SyncDownloadContactResponse alloc] init] autorelease];
  return self;
}
- (SyncDownloadContactResponse_Builder*) clone {
  return [SyncDownloadContactResponse builderWithPrototype:result];
}
- (SyncDownloadContactResponse*) defaultInstance {
  return [SyncDownloadContactResponse defaultInstance];
}
- (SyncDownloadContactResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SyncDownloadContactResponse*) buildPartial {
  SyncDownloadContactResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SyncDownloadContactResponse_Builder*) mergeFrom:(SyncDownloadContactResponse*) other {
  if (other == [SyncDownloadContactResponse defaultInstance]) {
    return self;
  }
  if (other.contactArray.count > 0) {
    if (result.contactArray == nil) {
      result.contactArray = [[other.contactArray copyWithZone:[other.contactArray zone]] autorelease];
    } else {
      [result.contactArray appendArray:other.contactArray];
    }
  }
  if (other.groupArray.count > 0) {
    if (result.groupArray == nil) {
      result.groupArray = [[other.groupArray copyWithZone:[other.groupArray zone]] autorelease];
    } else {
      [result.groupArray appendArray:other.groupArray];
    }
  }
  if (other.hasBusinessCard) {
    [self mergeBusinessCard:other.businessCard];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SyncDownloadContactResponse_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[ES_PBExtensionRegistry emptyRegistry]];
}
- (SyncDownloadContactResponse_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  ES_PBUnknownFieldSet_Builder* unknownFields = [ES_PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Contact_Builder* subBuilder = [Contact builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addContact:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        Group_Builder* subBuilder = [Group builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGroup:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        Contact_Builder* subBuilder = [Contact builder];
        if (self.hasBusinessCard) {
          [subBuilder mergeFrom:self.businessCard];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setBusinessCard:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (ES_PBAppendableArray *)contact {
  return result.contactArray;
}
- (Contact*)contactAtIndex:(NSUInteger)index {
  return [result contactAtIndex:index];
}
- (SyncDownloadContactResponse_Builder *)addContact:(Contact*)value {
  if (result.contactArray == nil) {
    result.contactArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeObject];
  }
  [result.contactArray addObject:value];
  return self;
}
- (SyncDownloadContactResponse_Builder *)setContactArray:(NSArray *)array {
  result.contactArray = [ES_PBAppendableArray arrayWithArray:array valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (SyncDownloadContactResponse_Builder *)setContactValues:(const Contact* *)values count:(NSUInteger)count {
  result.contactArray = [ES_PBAppendableArray arrayWithValues:values count:count valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (SyncDownloadContactResponse_Builder *)clearContact {
  result.contactArray = nil;
  return self;
}
- (ES_PBAppendableArray *)group {
  return result.groupArray;
}
- (Group*)groupAtIndex:(NSUInteger)index {
  return [result groupAtIndex:index];
}
- (SyncDownloadContactResponse_Builder *)addGroup:(Group*)value {
  if (result.groupArray == nil) {
    result.groupArray = [ES_PBAppendableArray arrayWithValueType:ES_PBArrayValueTypeObject];
  }
  [result.groupArray addObject:value];
  return self;
}
- (SyncDownloadContactResponse_Builder *)setGroupArray:(NSArray *)array {
  result.groupArray = [ES_PBAppendableArray arrayWithArray:array valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (SyncDownloadContactResponse_Builder *)setGroupValues:(const Group* *)values count:(NSUInteger)count {
  result.groupArray = [ES_PBAppendableArray arrayWithValues:values count:count valueType:ES_PBArrayValueTypeObject];
  return self;
}
- (SyncDownloadContactResponse_Builder *)clearGroup {
  result.groupArray = nil;
  return self;
}
- (BOOL) hasBusinessCard {
  return result.hasBusinessCard;
}
- (Contact*) businessCard {
  return result.businessCard;
}
- (SyncDownloadContactResponse_Builder*) setBusinessCard:(Contact*) value {
  result.hasBusinessCard = YES;
  result.businessCard = value;
  return self;
}
- (SyncDownloadContactResponse_Builder*) setBusinessCardBuilder:(Contact_Builder*) builderForValue {
  return [self setBusinessCard:[builderForValue build]];
}
- (SyncDownloadContactResponse_Builder*) mergeBusinessCard:(Contact*) value {
  if (result.hasBusinessCard &&
      result.businessCard != [Contact defaultInstance]) {
    result.businessCard =
      [[[Contact builderWithPrototype:result.businessCard] mergeFrom:value] buildPartial];
  } else {
    result.businessCard = value;
  }
  result.hasBusinessCard = YES;
  return self;
}
- (SyncDownloadContactResponse_Builder*) clearBusinessCard {
  result.hasBusinessCard = NO;
  result.businessCard = [Contact defaultInstance];
  return self;
}
@end

