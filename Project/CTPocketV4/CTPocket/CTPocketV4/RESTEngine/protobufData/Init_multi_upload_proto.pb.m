// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Init_multi_upload_proto.pb.h"

@implementation InitMultiUploadProtoRoot
static ES_PBExtensionRegistry* extensionRegistry = nil;
+ (ES_PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [InitMultiUploadProtoRoot class]) {
    ES_PBMutableExtensionRegistry* registry = [ES_PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [BaseTypeProtoRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(ES_PBMutableExtensionRegistry*) registry {
}
@end

@interface InitMultiUploadResponse ()
@property (retain) NSString* uploadId;
@property uint32_t expires;
@end

@implementation InitMultiUploadResponse

- (BOOL) hasUploadId {
  return !!hasUploadId_;
}
- (void) setHasUploadId:(BOOL) value_ {
  hasUploadId_ = !!value_;
}
@synthesize uploadId;
- (BOOL) hasExpires {
  return !!hasExpires_;
}
- (void) setHasExpires:(BOOL) value_ {
  hasExpires_ = !!value_;
}
@synthesize expires;
- (void) dealloc {
  self.uploadId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.uploadId = @"";
    self.expires = 0;
  }
  return self;
}
static InitMultiUploadResponse* defaultInitMultiUploadResponseInstance = nil;
+ (void) initialize {
  if (self == [InitMultiUploadResponse class]) {
    defaultInitMultiUploadResponseInstance = [[InitMultiUploadResponse alloc] init];
  }
}
+ (InitMultiUploadResponse*) defaultInstance {
  return defaultInitMultiUploadResponseInstance;
}
- (InitMultiUploadResponse*) defaultInstance {
  return defaultInitMultiUploadResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUploadId) {
    return NO;
  }
  if (!self.hasExpires) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(ES_PBCodedOutputStream*) output {
  if (self.hasUploadId) {
    [output writeString:1 value:self.uploadId];
  }
  if (self.hasExpires) {
    [output writeUInt32:2 value:self.expires];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUploadId) {
    size_ += ES_computeStringSize(1, self.uploadId);
  }
  if (self.hasExpires) {
    size_ += ES_computeUInt32Size(2, self.expires);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (InitMultiUploadResponse*) parseFromData:(NSData*) data {
  return (InitMultiUploadResponse*)[[[InitMultiUploadResponse builder] mergeFromData:data] build];
}
+ (InitMultiUploadResponse*) parseFromData:(NSData*) data extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (InitMultiUploadResponse*)[[[InitMultiUploadResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (InitMultiUploadResponse*) parseFromInputStream:(NSInputStream*) input {
  return (InitMultiUploadResponse*)[[[InitMultiUploadResponse builder] mergeFromInputStream:input] build];
}
+ (InitMultiUploadResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (InitMultiUploadResponse*)[[[InitMultiUploadResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (InitMultiUploadResponse*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return (InitMultiUploadResponse*)[[[InitMultiUploadResponse builder] mergeFromCodedInputStream:input] build];
}
+ (InitMultiUploadResponse*) parseFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  return (InitMultiUploadResponse*)[[[InitMultiUploadResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (InitMultiUploadResponse_Builder*) builder {
  return [[[InitMultiUploadResponse_Builder alloc] init] autorelease];
}
+ (InitMultiUploadResponse_Builder*) builderWithPrototype:(InitMultiUploadResponse*) prototype {
  return [[InitMultiUploadResponse builder] mergeFrom:prototype];
}
- (InitMultiUploadResponse_Builder*) builder {
  return [InitMultiUploadResponse builder];
}
- (InitMultiUploadResponse_Builder*) toBuilder {
  return [InitMultiUploadResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUploadId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uploadId", self.uploadId];
  }
  if (self.hasExpires) {
    [output appendFormat:@"%@%@: %@\n", indent, @"expires", [NSNumber numberWithInt:self.expires]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[InitMultiUploadResponse class]]) {
    return NO;
  }
  InitMultiUploadResponse *otherMessage = other;
  return
      self.hasUploadId == otherMessage.hasUploadId &&
      (!self.hasUploadId || [self.uploadId isEqual:otherMessage.uploadId]) &&
      self.hasExpires == otherMessage.hasExpires &&
      (!self.hasExpires || self.expires == otherMessage.expires) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasUploadId) {
    hashCode = hashCode * 31 + [self.uploadId hash];
  }
  if (self.hasExpires) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.expires] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface InitMultiUploadResponse_Builder()
@property (retain) InitMultiUploadResponse* result;
@end

@implementation InitMultiUploadResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[InitMultiUploadResponse alloc] init] autorelease];
  }
  return self;
}
- (ES_PBGeneratedMessage*) internalGetResult {
  return result;
}
- (InitMultiUploadResponse_Builder*) clear {
  self.result = [[[InitMultiUploadResponse alloc] init] autorelease];
  return self;
}
- (InitMultiUploadResponse_Builder*) clone {
  return [InitMultiUploadResponse builderWithPrototype:result];
}
- (InitMultiUploadResponse*) defaultInstance {
  return [InitMultiUploadResponse defaultInstance];
}
- (InitMultiUploadResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (InitMultiUploadResponse*) buildPartial {
  InitMultiUploadResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (InitMultiUploadResponse_Builder*) mergeFrom:(InitMultiUploadResponse*) other {
  if (other == [InitMultiUploadResponse defaultInstance]) {
    return self;
  }
  if (other.hasUploadId) {
    [self setUploadId:other.uploadId];
  }
  if (other.hasExpires) {
    [self setExpires:other.expires];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (InitMultiUploadResponse_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[ES_PBExtensionRegistry emptyRegistry]];
}
- (InitMultiUploadResponse_Builder*) mergeFromCodedInputStream:(ES_PBCodedInputStream*) input extensionRegistry:(ES_PBExtensionRegistry*) extensionRegistry {
  ES_PBUnknownFieldSet_Builder* unknownFields = [ES_PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUploadId:[input readString]];
        break;
      }
      case 16: {
        [self setExpires:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUploadId {
  return result.hasUploadId;
}
- (NSString*) uploadId {
  return result.uploadId;
}
- (InitMultiUploadResponse_Builder*) setUploadId:(NSString*) value {
  result.hasUploadId = YES;
  result.uploadId = value;
  return self;
}
- (InitMultiUploadResponse_Builder*) clearUploadId {
  result.hasUploadId = NO;
  result.uploadId = @"";
  return self;
}
- (BOOL) hasExpires {
  return result.hasExpires;
}
- (uint32_t) expires {
  return result.expires;
}
- (InitMultiUploadResponse_Builder*) setExpires:(uint32_t) value {
  result.hasExpires = YES;
  result.expires = value;
  return self;
}
- (InitMultiUploadResponse_Builder*) clearExpires {
  result.hasExpires = NO;
  result.expires = 0;
  return self;
}
@end

